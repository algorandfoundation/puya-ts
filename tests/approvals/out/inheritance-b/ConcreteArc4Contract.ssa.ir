contract tests/approvals/inheritance-b.algo.ts::ConcreteArc4Contract:
    program approval:
        subroutine @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> bool:
            block@0: // L1
                let app_id%0#0: uint64 = (txn ApplicationID)
                goto app_id%0#0 ? block@2 : block@1
            block@1: // on_create_L13
                tests/approvals/inheritance-b.algo.ts::ConcreteArc4Contract.constructor()
                goto block@2
            block@2: // entrypoint_L13
                let tmp%0#0: bool = tests/approvals/inheritance-b.algo.ts::ConcreteArc4Contract.__puya_arc4_router__()
                return tmp%0#0
        
        subroutine tests/approvals/inheritance-b.algo.ts::ConcreteArc4Contract.__puya_arc4_router__() -> bool:
            block@0: // L13
                let tmp%0#0: uint64 = (txn NumAppArgs)
                let tmp%1#0: bool = (!= tmp%0#0 0u)
                goto tmp%1#0 ? block@1 : block@5
            block@1: // abi_routing_L13
                let tmp%2#0: bytes = (txna ApplicationArgs 0)
                switch tmp%2#0 {method "simpleAbiMethod(uint64,uint64)uint64" => block@2, * => block@3}
            block@2: // simpleAbiMethod_route_L17
                let tmp%3#0: uint64 = (txn OnCompletion)
                let tmp%4#0: bool = (== tmp%3#0 NoOp)
                (assert tmp%4#0) // OnCompletion is NoOp
                let tmp%5#0: uint64 = (txn ApplicationID)
                let tmp%6#0: bool = (!= tmp%5#0 0u)
                (assert tmp%6#0) // is not creating
                let tmp%7#0: bytes = (txna ApplicationArgs 1)
                let tmp%8#0: uint64 = (btoi tmp%7#0)
                let tmp%9#0: bytes = (txna ApplicationArgs 2)
                let tmp%10#0: uint64 = (btoi tmp%9#0)
                let to_encode%0#0: uint64 = tests/approvals/inheritance-a.algo.ts::Arc4Contract.simpleAbiMethod(tmp%8#0, tmp%10#0)
                let val_as_bytes%0#0: bytes = (itob to_encode%0#0)
                let tmp%11#0: bytes = (concat 0x151f7c75 val_as_bytes%0#0)
                (log tmp%11#0)
                return 1u
            block@3: // switch_case_default_L13
                goto block@4
            block@4: // switch_case_next_L13
                goto block@6
            block@5: // bare_routing_L13
                goto block@6
            block@6: // after_if_else_L13
                return 0u
        
        subroutine tests/approvals/inheritance-a.algo.ts::Arc4Contract.simpleAbiMethod(a: uint64, b: uint64) -> uint64:
            block@0: // L17
                let tmp%0#0: uint64 = (+ a#0 b#0)
                return tmp%0#0
        
        subroutine tests/approvals/inheritance-b.algo.ts::ConcreteArc4Contract.constructor() -> void:
            block@0: // L13
                tests/approvals/inheritance-a.algo.ts::Arc4Contract.constructor()
                return 
        
        subroutine tests/approvals/inheritance-a.algo.ts::Arc4Contract.constructor() -> void:
            block@0: // L11
                return 
    
    program clear-state:
        subroutine @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.clearStateProgram() -> bool:
            block@0: // L1
                return 1u
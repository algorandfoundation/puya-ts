contract ConcreteSimpleContract
{
  globals {
    ["someState"]: uint64
  }
  approvalProgram(): uint64
  {
    a: uint64 = btoi(txnas<ApplicationArgs>(0))
    b: uint64 = btoi(txnas<ApplicationArgs>(1))
    log(itob(this.simpleMethod(a, b)))
    return 1
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  SimpleContract::simpleMethod(): uint64
  {
    return a * b
  }
  
}
contract ConcreteArc4Contract
{
  globals {
    ["someState"]: uint64
  }
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  getVeryImportantValue(): string
  {
    return "42"
  }
  
  Arc4Contract::simpleMethod(): uint64
  {
    return a * b
  }
  
  Arc4Contract::simpleAbiMethod(): uint64
  {
    return a + b
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
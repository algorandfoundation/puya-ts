subroutine test(): void
{
  var a: uint64 = (#se0 = produceItems()).0
  var b: bytes = #se0.1
  var c: bool = #se0.2
  var d: biguint = #se0.3
  var e: bool = (#se1 = produceItems()).2
  var f: tuple[uint64, bytes, bool, biguint] = (#se2 = <tuple>[g, _, _₁, i] = produceItems())
}
subroutine produceItems(): tuple[uint64, bytes, bool, biguint]
{
  return <tuple>[5, 0x, False, 6]
}
subroutine testLiteralDestructuring(): void
{
  var a: uint64 = (#se3 = 1)
  var b: uint64 = (#se4 = 2)
  var x: uint64 = (#se5 = <tuple>[b, a] = <tuple>[a, b]).0
  var y: uint64 = #se5.1
  assert(x == b)
  assert(y == a)
}
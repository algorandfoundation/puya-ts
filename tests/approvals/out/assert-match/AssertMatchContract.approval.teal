#pragma version 10

tests/approvals/assert-match.algo.ts::AssertMatchContract.approvalProgram:
    intcblock 1
    // tests/approvals/assert-match.algo.ts:22
    // const txn = gtxn.PaymentTxn(1)
    intc_0 // 1
    // tests/approvals/assert-match.algo.ts:23
    // test(txn)
    callsub test
    // tests/approvals/assert-match.algo.ts:24
    // return true
    intc_0 // 1
    return


// tests/approvals/assert-match.algo.ts::test(x: uint64) -> void:
test:
    // tests/approvals/assert-match.algo.ts:9
    // function test(x: gtxn.PaymentTxn) {
    proto 1 0
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    frame_dig -1
    gtxns Amount
    // tests/approvals/assert-match.algo.ts:11
    // amount: { between: [0, 50000] },
    pushint 50000 // 50000
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    <=
    bz test_bool_false@8
    frame_dig -1
    gtxns Sender
    // tests/approvals/assert-match.algo.ts:12
    // sender: Txn.sender,
    txn Sender
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    ==
    bz test_bool_false@8
    frame_dig -1
    gtxns Receiver
    // tests/approvals/assert-match.algo.ts:13
    // receiver: Global.currentApplicationAddress,
    global CurrentApplicationAddress
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    ==
    bz test_bool_false@8
    frame_dig -1
    gtxns CloseRemainderTo
    // tests/approvals/assert-match.algo.ts:14
    // closeRemainderTo: Global.zeroAddress,
    global ZeroAddress
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    ==
    bz test_bool_false@8
    frame_dig -1
    gtxns FirstValid
    // tests/approvals/assert-match.algo.ts:15
    // firstValid: { greaterThan: 1 },
    intc_0 // 1
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    >
    bz test_bool_false@8
    frame_dig -1
    gtxns LastValid
    // tests/approvals/assert-match.algo.ts:16
    // lastValid: { lessThan: 2 ** 40 },
    pushint 1099511627776 // 1099511627776
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    <
    bz test_bool_false@8
    intc_0 // 1
    b test_bool_merge@9

test_bool_false@8:
    pushint 0 // 0

test_bool_merge@9:
    // tests/approvals/assert-match.algo.ts:10-17
    // assertMatch(x, {
    //   amount: { between: [0, 50000] },
    //   sender: Txn.sender,
    //   receiver: Global.currentApplicationAddress,
    //   closeRemainderTo: Global.zeroAddress,
    //   firstValid: { greaterThan: 1 },
    //   lastValid: { lessThan: 2 ** 40 },
    // })
    assert // assert target is match for conditions
    retsub

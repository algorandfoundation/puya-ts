#pragma version 10

tests/approvals/pre-approved-sale.algo.ts::PreApprovedSale:
    intcblock 1 0 TMPL_PRICE TMPL_ASSET
    bytecblock TMPL_SELLER
    // tests/approvals/pre-approved-sale.algo.ts:6
    // const seller = TemplateVar<Account>('SELLER')
    bytec_0 // TMPL_SELLER
    // tests/approvals/pre-approved-sale.algo.ts:7
    // const price = TemplateVar<uint64>('PRICE')
    intc_2 // TMPL_PRICE
    // tests/approvals/pre-approved-sale.algo.ts:8
    // const asset = TemplateVar<Asset>('ASSET')
    intc_3 // TMPL_ASSET
    // tests/approvals/pre-approved-sale.algo.ts:6
    // const seller = TemplateVar<Account>('SELLER')
    bytec_0 // TMPL_SELLER
    // tests/approvals/pre-approved-sale.algo.ts:10
    // const payTxn = gtxn.PaymentTxn(0)
    intc_1 // 0
    // tests/approvals/pre-approved-sale.algo.ts:12-15
    // assertMatch(payTxn, {
    //   receiver: seller,
    //   amount: price,
    // })
    gtxns Receiver
    ==
    bz main_bool_false@3
    // tests/approvals/pre-approved-sale.algo.ts:10
    // const payTxn = gtxn.PaymentTxn(0)
    intc_1 // 0
    // tests/approvals/pre-approved-sale.algo.ts:12-15
    // assertMatch(payTxn, {
    //   receiver: seller,
    //   amount: price,
    // })
    gtxns Amount
    dig 2
    ==
    bz main_bool_false@3
    intc_0 // 1
    b main_bool_merge@4

main_bool_false@3:
    intc_1 // 0

main_bool_merge@4:
    // tests/approvals/pre-approved-sale.algo.ts:12-15
    // assertMatch(payTxn, {
    //   receiver: seller,
    //   amount: price,
    // })
    assert // assert target is match for conditions
    // tests/approvals/pre-approved-sale.algo.ts:11
    // const assetTxn = gtxn.AssetTransferTxn(1)
    intc_0 // 1
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    gtxns AssetAmount
    // tests/approvals/pre-approved-sale.algo.ts:18
    // assetAmount: Uint64(1),
    intc_0 // 1
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    ==
    bz main_bool_false@10
    // tests/approvals/pre-approved-sale.algo.ts:11
    // const assetTxn = gtxn.AssetTransferTxn(1)
    intc_0 // 1
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    gtxns Sender
    dig 3
    ==
    bz main_bool_false@10
    // tests/approvals/pre-approved-sale.algo.ts:11
    // const assetTxn = gtxn.AssetTransferTxn(1)
    intc_0 // 1
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    gtxns XferAsset
    dig 1
    ==
    bz main_bool_false@10
    // tests/approvals/pre-approved-sale.algo.ts:11
    // const assetTxn = gtxn.AssetTransferTxn(1)
    intc_0 // 1
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    gtxns AssetCloseTo
    // tests/approvals/pre-approved-sale.algo.ts:21
    // assetCloseTo: Global.zeroAddress,
    global ZeroAddress
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    ==
    bz main_bool_false@10
    // tests/approvals/pre-approved-sale.algo.ts:11
    // const assetTxn = gtxn.AssetTransferTxn(1)
    intc_0 // 1
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    gtxns RekeyTo
    // tests/approvals/pre-approved-sale.algo.ts:22
    // rekeyTo: Global.zeroAddress,
    global ZeroAddress
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    ==
    bz main_bool_false@10
    intc_0 // 1
    b main_bool_merge@11

main_bool_false@10:
    intc_1 // 0

main_bool_merge@11:
    // tests/approvals/pre-approved-sale.algo.ts:17-23
    // assertMatch(assetTxn, {
    //   assetAmount: Uint64(1),
    //   sender: seller,
    //   xferAsset: asset,
    //   assetCloseTo: Global.zeroAddress,
    //   rekeyTo: Global.zeroAddress,
    // })
    assert // assert target is match for conditions
    // tests/approvals/pre-approved-sale.algo.ts:25
    // return true
    intc_0 // 1
    return

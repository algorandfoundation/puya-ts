{
    "name": "BoxCreate",
    "structs": {},
    "methods": [
        {
            "name": "createBoxes",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "boxBool": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "Ym9vbA=="
                },
                "boxArc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "YXJjNGI="
                },
                "boxStr": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "YQ=="
                },
                "boxUint": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "Yg=="
                },
                "boxStaticArray": {
                    "keyType": "AVMString",
                    "valueType": "uint32[10]",
                    "key": "Yw=="
                },
                "boxDynamicArray": {
                    "keyType": "AVMString",
                    "valueType": "uint8[]",
                    "key": "ZA=="
                },
                "boxTuple": {
                    "keyType": "AVMString",
                    "valueType": "(uint8,uint8,bool,bool)",
                    "key": "ZQ=="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        52
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        148
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        55
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgOCAxIDEwIDQwCiAgICBieXRlY2Jsb2NrICJhIiAiYiIgImMiICJkIiAiYm9vbCIgImFyYzRiIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTI4CiAgICAvLyBjbGFzcyBCb3hDcmVhdGUgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4OTMyMDEwYzEgLy8gbWV0aG9kICJjcmVhdGVCb3hlcygpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fY3JlYXRlQm94ZXNfcm91dGVAMwoKbWFpbl9hZnRlcl9pZl9lbHNlQDEwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTI4CiAgICAvLyBjbGFzcyBCb3hDcmVhdGUgZXh0ZW5kcyBDb250cmFjdCB7CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX2NyZWF0ZUJveGVzX3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzcKICAgIC8vIGNyZWF0ZUJveGVzKCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzEKICAgIC8vIGJveFN0ciA9IEJveDxzdHJpbmc+KHsga2V5OiAnYScgfSkKICAgIGJ5dGVjXzAgLy8gImEiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzgKICAgIC8vIHRoaXMuYm94U3RyLmNyZWF0ZSh7IHNpemU6IDEwIH0pCiAgICBpbnRjXzIgLy8gMTAKICAgIGJveF9jcmVhdGUKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTMxCiAgICAvLyBib3hTdHIgPSBCb3g8c3RyaW5nPih7IGtleTogJ2EnIH0pCiAgICBieXRlY18wIC8vICJhIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTM5CiAgICAvLyBhc3NlcnQodGhpcy5ib3hTdHIubGVuZ3RoID09PSAxMCkKICAgIGJveF9sZW4KICAgIHBvcAogICAgaW50Y18yIC8vIDEwCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzIKICAgIC8vIGJveFVpbnQgPSBCb3g8dWludDY0Pih7IGtleTogJ2InIH0pCiAgICBieXRlY18xIC8vICJiIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTQwCiAgICAvLyB0aGlzLmJveFVpbnQuY3JlYXRlKCkKICAgIGludGNfMCAvLyA4CiAgICBib3hfY3JlYXRlCiAgICBwb3AKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjEzMgogICAgLy8gYm94VWludCA9IEJveDx1aW50NjQ+KHsga2V5OiAnYicgfSkKICAgIGJ5dGVjXzEgLy8gImIiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxNDEKICAgIC8vIGFzc2VydCh0aGlzLmJveFVpbnQubGVuZ3RoID09PSA4KQogICAgYm94X2xlbgogICAgcG9wCiAgICBpbnRjXzAgLy8gOAogICAgPT0KICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTMzCiAgICAvLyBib3hTdGF0aWNBcnJheSA9IEJveDxTdGF0aWNBcnJheTxVaW50MzIsIDEwPj4oeyBrZXk6ICdjJyB9KQogICAgYnl0ZWNfMiAvLyAiYyIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjE0MgogICAgLy8gdGhpcy5ib3hTdGF0aWNBcnJheS5jcmVhdGUoKQogICAgaW50Y18zIC8vIDQwCiAgICBib3hfY3JlYXRlCiAgICBwb3AKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjEzMwogICAgLy8gYm94U3RhdGljQXJyYXkgPSBCb3g8U3RhdGljQXJyYXk8VWludDMyLCAxMD4+KHsga2V5OiAnYycgfSkKICAgIGJ5dGVjXzIgLy8gImMiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxNDMKICAgIC8vIGFzc2VydCh0aGlzLmJveFN0YXRpY0FycmF5Lmxlbmd0aCA9PT0gKDMyIC8gOCkgKiAxMCkKICAgIGJveF9sZW4KICAgIHBvcAogICAgaW50Y18zIC8vIDQwCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzQKICAgIC8vIGJveER5bmFtaWNBcnJheSA9IEJveDxEeW5hbWljQXJyYXk8VWludDg+Pih7IGtleTogJ2QnIH0pCiAgICBieXRlY18zIC8vICJkIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTQ0CiAgICAvLyB0aGlzLmJveER5bmFtaWNBcnJheS5jcmVhdGUoeyBzaXplOiAyIH0pCiAgICBwdXNoaW50IDIgLy8gMgogICAgYm94X2NyZWF0ZQogICAgcG9wCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzQKICAgIC8vIGJveER5bmFtaWNBcnJheSA9IEJveDxEeW5hbWljQXJyYXk8VWludDg+Pih7IGtleTogJ2QnIH0pCiAgICBieXRlY18zIC8vICJkIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTQ1CiAgICAvLyBhc3NlcnQodGhpcy5ib3hEeW5hbWljQXJyYXkubGVuZ3RoID09PSAyKQogICAgYm94X2xlbgogICAgcG9wCiAgICBwdXNoaW50IDIgLy8gMgogICAgPT0KICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTM1CiAgICAvLyBib3hUdXBsZSA9IEJveDxUdXBsZTxbVWludDgsIFVpbnQ4LCBCb29sLCBCb29sXT4+KHsga2V5OiAnZScgfSkKICAgIHB1c2hieXRlcyAiZSIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjE0NgogICAgLy8gdGhpcy5ib3hUdXBsZS5jcmVhdGUoKQogICAgcHVzaGludCAzIC8vIDMKICAgIGJveF9jcmVhdGUKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTM1CiAgICAvLyBib3hUdXBsZSA9IEJveDxUdXBsZTxbVWludDgsIFVpbnQ4LCBCb29sLCBCb29sXT4+KHsga2V5OiAnZScgfSkKICAgIHB1c2hieXRlcyAiZSIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjE0NwogICAgLy8gYXNzZXJ0KHRoaXMuYm94VHVwbGUubGVuZ3RoID09PSAzKQogICAgYm94X2xlbgogICAgcG9wCiAgICBwdXNoaW50IDMgLy8gMwogICAgPT0KICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTI5CiAgICAvLyBib3hCb29sID0gQm94PGJvb2xlYW4+KHsga2V5OiAnYm9vbCcgfSkKICAgIGJ5dGVjIDQgLy8gImJvb2wiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxNDgKICAgIC8vIHRoaXMuYm94Qm9vbC5jcmVhdGUoKQogICAgaW50Y18wIC8vIDgKICAgIGJveF9jcmVhdGUKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTI5CiAgICAvLyBib3hCb29sID0gQm94PGJvb2xlYW4+KHsga2V5OiAnYm9vbCcgfSkKICAgIGJ5dGVjIDQgLy8gImJvb2wiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxNDkKICAgIC8vIGFzc2VydCh0aGlzLmJveEJvb2wubGVuZ3RoID09PSA4KQogICAgYm94X2xlbgogICAgcG9wCiAgICBpbnRjXzAgLy8gOAogICAgPT0KICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTMwCiAgICAvLyBib3hBcmM0Qm9vbCA9IEJveDxCb29sPih7IGtleTogJ2FyYzRiJyB9KQogICAgYnl0ZWMgNSAvLyAiYXJjNGIiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxNTAKICAgIC8vIHRoaXMuYm94QXJjNEJvb2wuY3JlYXRlKCkKICAgIGludGNfMSAvLyAxCiAgICBib3hfY3JlYXRlCiAgICBwb3AKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjEzMAogICAgLy8gYm94QXJjNEJvb2wgPSBCb3g8Qm9vbD4oeyBrZXk6ICdhcmM0YicgfSkKICAgIGJ5dGVjIDUgLy8gImFyYzRiIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MTUxCiAgICAvLyBhc3NlcnQodGhpcy5ib3hBcmM0Qm9vbC5sZW5ndGggPT09IDEpCiAgICBib3hfbGVuCiAgICBwb3AKICAgIGludGNfMSAvLyAxCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoxMzcKICAgIC8vIGNyZWF0ZUJveGVzKCkgewogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdANjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjEyOAogICAgLy8gY2xhc3MgQm94Q3JlYXRlIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4K",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAECAEKKCYGAWEBYgFjAWQEYm9vbAVhcmM0YjEbQQBrgASTIBDBNhoAjgEAA4EAQzEZFEQxGEQoJLlIKL1IJBJEKSK5SCm9SCISRColuUgqvUglEkQrgQK5SCu9SIECEkSAAWWBA7lIgAFlvUiBAxJEJwQiuUgnBL1IIhJEJwUjuUgnBb1IIxJEI0MxGUD/nTEYFEQjQw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
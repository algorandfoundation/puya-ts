#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // tests/approvals/box-proxies.algo.ts:251
    // class CompositeKeyTest extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@5
    pushbytes 0x197a4167 // method "test((uint64,uint64),string)void"
    txna ApplicationArgs 0
    match main_test_route@3
    err

main_test_route@3:
    // tests/approvals/box-proxies.algo.ts:254
    // test(key: { a: uint64; b: uint64 }, val: string) {
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    txna ApplicationArgs 1
    dup
    len
    pushint 16 // 16
    ==
    assert // invalid number of bytes for ObjectACED9E72
    txna ApplicationArgs 2
    dup
    pushint 0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 2 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    // tests/approvals/box-proxies.algo.ts:255
    // this.boxMap(key).value = val
    dig 1
    box_del
    pop
    box_put
    // tests/approvals/box-proxies.algo.ts:254
    // test(key: { a: uint64; b: uint64 }, val: string) {
    pushint 1 // 1
    return

main___algots__.defaultCreate@5:
    // tests/approvals/box-proxies.algo.ts:251
    // class CompositeKeyTest extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    pushint 1 // 1
    return

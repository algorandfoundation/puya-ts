#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // tests/approvals/resource-encoding.algo.ts:31
    // class ByValue extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@5
    pushbytes 0xd7308a13 // method "testExplicitValue(address)uint64"
    txna ApplicationArgs 0
    match main_testExplicitValue_route@3
    err

main_testExplicitValue_route@3:
    // tests/approvals/resource-encoding.algo.ts:32
    // @abimethod({ resourceEncoding: 'value' })
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    txna ApplicationArgs 1
    // tests/approvals/resource-encoding.algo.ts:34
    // return account.balance
    acct_params_get AcctBalance
    assert // account funded
    // tests/approvals/resource-encoding.algo.ts:32
    // @abimethod({ resourceEncoding: 'value' })
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main___algots__.defaultCreate@5:
    // tests/approvals/resource-encoding.algo.ts:31
    // class ByValue extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating

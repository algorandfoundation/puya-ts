{
    "name": "C2C",
    "structs": {},
    "methods": [
        {
            "name": "testCallToIndex",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "appId"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testCallToValue",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "appId"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testCallToEchoResource",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        331,
                        404,
                        472,
                        524
                    ],
                    "errorMessage": "Bytes has valid prefix"
                },
                {
                    "pc": [
                        24
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        539
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        477,
                        529
                    ],
                    "errorMessage": "account funded"
                },
                {
                    "pc": [
                        357,
                        430
                    ],
                    "errorMessage": "assert target is match for conditions"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAAYBBCYCBBUffHUBATEbQQH/MRkURDEYRIIDBBNMdqgED+/W9wTnvA9SNhoAjgMBqAF3AAEAsYAEC4EBQ7JCgKcBCyADAQIDJgEEFR98dTEbQQCNMRkURDEYRIICBHfijXQETTcCdjYaAI4CADIAAQA2GgEXNhoCFzYaAyLAGhdLAxJEI8AaF0sCEkQkwBpLARJETwIWTwIWUExQKExQsCJDNhoBF8AwNhoCF8AyNhoDF8AcIsAaF8AwSwMSRCPAGhfAMksCEkQkwBoXwBxLARJETwIWTwIWUExQKExQsCJDMRkUMRgUEEOyQCKyGSOyECKyAbO0PbGABFRFU1SyJoABVLIlJLIigQOyECKyAbO0PLEyCDEAshxLAbIwsjKABHfijXSyGoABALIaKbIaKbIaIrIZSwGyGCOyECKyAbO0PklXAAQoEkRJJVtLAhIkEEsBgQxbMggSEExXFCAxABIQRLFJFjIIFjEAgARNNwJ2shpPArIaTLIashoishlMshgjshAisgGztD5JVwAEKBJESSVbTwISJBBLAYEMWzIIEhBMVxQgMQASEEM2GgE2GgIXsYAE1zCKE7IaSwGyGrIYI7IQIrIBs7Q+SVcEAExXAAQoEkQXTHMARBJDNhoBNhoCF7FLAbIcgAQ0NZ+2shopshqyGCOyECKyAbO0PklXBABMVwAEKBJEF0xzAEQSQzEZFDEYFBBD",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
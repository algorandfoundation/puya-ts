main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@7
    block@2: // abi_routing_L49
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "testCallToForeign(address,uint64)void" => block@3, method "testCallToValue(address,uint64)void" => block@4, * => block@11}
    block@3: // testCallToForeign_route_L50
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let account#1: account = (txna ApplicationArgs 1)
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let appId#1: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        itxn_begin
        ((itxn_field Accounts) account#1)
        ((itxn_field ApplicationArgs) method "testExplicitForeign(account)uint64")
        ((itxn_field ApplicationArgs) 0x01)
        ((itxn_field ApplicationID) appId#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#1: bytes = (itxn LastLog)
        let tmp%0#3: bytes = ((extract 4 0) awst_tmp%0#1)
        let tmp%1#2: bytes = ((extract 0 4) awst_tmp%0#1)
        let tmp%2#2: bool = (== tmp%1#2 0x151f7c75)
        (assert tmp%2#2) // Bytes has valid prefix
        let res1#1: uint64 = (btoi tmp%0#3)
        let (value%0#1: uint64, check%0#1: bool) = ((acct_params_get AcctBalance) account#1)
        (assert check%0#1) // account funded
        let tmp%4#2: bool = (== res1#1 value%0#1)
        (assert tmp%4#2)
        let tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#0: bool = 1u
        goto block@12
    block@4: // testCallToValue_route_L58
        let tmp%9#0: uint64 = (txn OnCompletion)
        let tmp%10#0: bool = (! tmp%9#0)
        (assert tmp%10#0) // OnCompletion is not NoOp
        let tmp%11#0: uint64 = (txn ApplicationID)
        (assert tmp%11#0) // can only call when not creating
        let account#0: account = (txna ApplicationArgs 1)
        let reinterpret_Encoded(uint64)%1#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let appId#0: uint64 = (btoi reinterpret_Encoded(uint64)%1#0)
        itxn_begin
        ((itxn_field ApplicationArgs) method "testExplicitValue(address)uint64")
        ((itxn_field ApplicationArgs) account#0)
        ((itxn_field ApplicationID) appId#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%0#2: bytes = ((extract 4 0) awst_tmp%0#0)
        let tmp%1#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%2#1: bool = (== tmp%1#1 0x151f7c75)
        (assert tmp%2#1) // Bytes has valid prefix
        let res1#0: uint64 = (btoi tmp%0#2)
        let (value%0#0: uint64, check%0#0: bool) = ((acct_params_get AcctBalance) account#0)
        (assert check%0#0) // account funded
        let tmp%4#1: bool = (== res1#0 value%0#0)
        (assert tmp%4#1)
        let tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#1: bool = 1u
        goto block@12
    block@7: // bare_routing_L49
        let tmp%15#0: uint64 = (txn OnCompletion)
        goto tmp%15#0 ? block@11 : block@8
    block@8: // __algots__.defaultCreate_L49
        let tmp%16#0: uint64 = (txn ApplicationID)
        let tmp%17#0: bool = (! tmp%16#0)
        (assert tmp%17#0) // can only call when creating
        let tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#2: bool = 1u
        goto block@12
    block@11: // after_if_else_L49
        let tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#3: bool = 0u
        goto block@12
    block@12: // after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#0 <- block@3, tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#1 <- block@4, tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#2 <- block@8, tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__%0#3 <- block@11)
        return tmp%0#0
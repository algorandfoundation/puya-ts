#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // tests/approvals/resource-encoding.algo.ts:5
    // class BaseForeign extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0xd024ab8e // method "testBaseForeign(account)uint64"
    txna ApplicationArgs 0
    match main_testBaseForeign_route@3

main_after_if_else@10:
    // tests/approvals/resource-encoding.algo.ts:5
    // class BaseForeign extends Contract {
    pushint 0 // 0
    return

main_testBaseForeign_route@3:
    // tests/approvals/resource-encoding.algo.ts:10
    // @abimethod({ resourceEncoding: 'foreign_index' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:5
    // class BaseForeign extends Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/approvals/resource-encoding.algo.ts:12
    // return account.balance
    acct_params_get AcctBalance
    assert // account funded
    // tests/approvals/resource-encoding.algo.ts:10
    // @abimethod({ resourceEncoding: 'foreign_index' })
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@6:
    // tests/approvals/resource-encoding.algo.ts:5
    // class BaseForeign extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return

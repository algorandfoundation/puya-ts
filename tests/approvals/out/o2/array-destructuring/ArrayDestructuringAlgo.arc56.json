{
    "name": "ArrayDestructuringAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testNested",
            "args": [
                {
                    "type": "(uint64,(uint512,uint512))",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "(uint64,(uint512,uint512),uint64,uint512)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testLiteralDestructuring",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        73,
                        77,
                        81
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        44,
                        53,
                        62
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        143
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        47,
                        56,
                        65
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        92,
                        105
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSA2NCAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktZGVzdHJ1Y3R1cmluZy5hbGdvLnRzOjQKICAgIC8vIGV4cG9ydCBjbGFzcyBBcnJheURlc3RydWN0dXJpbmdBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDgKICAgIHB1c2hieXRlc3MgMHg3NGI3ZThkZiAweGE3ODAwMGRlIDB4MmRhZmM2YzYgLy8gbWV0aG9kICJ0ZXN0TmVzdGVkKCh1aW50NjQsKHVpbnQ1MTIsdWludDUxMikpKSh1aW50NjQsKHVpbnQ1MTIsdWludDUxMiksdWludDY0LHVpbnQ1MTIpIiwgbWV0aG9kICJ0ZXN0KCl2b2lkIiwgbWV0aG9kICJ0ZXN0TGl0ZXJhbERlc3RydWN0dXJpbmcoKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3Rlc3ROZXN0ZWRfcm91dGVAMyBtYWluX3Rlc3Rfcm91dGVANCBtYWluX3Rlc3RMaXRlcmFsRGVzdHJ1Y3R1cmluZ19yb3V0ZUA1CgptYWluX2FmdGVyX2lmX2Vsc2VAMTI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktZGVzdHJ1Y3R1cmluZy5hbGdvLnRzOjQKICAgIC8vIGV4cG9ydCBjbGFzcyBBcnJheURlc3RydWN0dXJpbmdBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18yIC8vIDAKICAgIHJldHVybgoKbWFpbl90ZXN0TGl0ZXJhbERlc3RydWN0dXJpbmdfcm91dGVANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1kZXN0cnVjdHVyaW5nLmFsZ28udHM6MzIKICAgIC8vIHRlc3RMaXRlcmFsRGVzdHJ1Y3R1cmluZygpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl90ZXN0X3JvdXRlQDQ6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktZGVzdHJ1Y3R1cmluZy5hbGdvLnRzOjExCiAgICAvLyB0ZXN0KCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3Rlc3ROZXN0ZWRfcm91dGVAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1kZXN0cnVjdHVyaW5nLmFsZ28udHM6NQogICAgLy8gdGVzdE5lc3RlZChhcmc6IFt1aW50NjQsIFtiaWd1aW50LCBiaWd1aW50XV0pIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWRlc3RydWN0dXJpbmcuYWxnby50czo0CiAgICAvLyBleHBvcnQgY2xhc3MgQXJyYXlEZXN0cnVjdHVyaW5nQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgaW50Y18yIC8vIDAKICAgIGV4dHJhY3RfdWludDY0CiAgICBzd2FwCiAgICBleHRyYWN0IDggMTI4IC8vIG9uIGVycm9yOiBJbmRleCBhY2Nlc3MgaXMgb3V0IG9mIGJvdW5kcwogICAgZHVwCiAgICBleHRyYWN0IDAgNjQgLy8gb24gZXJyb3I6IEluZGV4IGFjY2VzcyBpcyBvdXQgb2YgYm91bmRzCiAgICBzd2FwCiAgICBleHRyYWN0IDY0IDY0IC8vIG9uIGVycm9yOiBJbmRleCBhY2Nlc3MgaXMgb3V0IG9mIGJvdW5kcwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWRlc3RydWN0dXJpbmcuYWxnby50czo1CiAgICAvLyB0ZXN0TmVzdGVkKGFyZzogW3VpbnQ2NCwgW2JpZ3VpbnQsIGJpZ3VpbnRdXSkgewogICAgdW5jb3ZlciAyCiAgICBpdG9iCiAgICBkaWcgMgogICAgbGVuCiAgICBpbnRjXzEgLy8gNjQKICAgIDw9CiAgICBhc3NlcnQgLy8gb3ZlcmZsb3cKICAgIGludGNfMSAvLyA2NAogICAgYnplcm8KICAgIHVuY292ZXIgMwogICAgZGlnIDEKICAgIGJ8CiAgICBkaWcgMwogICAgbGVuCiAgICBpbnRjXzEgLy8gNjQKICAgIDw9CiAgICBhc3NlcnQgLy8gb3ZlcmZsb3cKICAgIHVuY292ZXIgMwogICAgdW5jb3ZlciAyCiAgICBifAogICAgZGlnIDEKICAgIHN3YXAKICAgIGNvbmNhdAogICAgZGlnIDIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgdW5jb3ZlciAyCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A4OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWRlc3RydWN0dXJpbmcuYWxnby50czo0CiAgICAvLyBleHBvcnQgY2xhc3MgQXJyYXlEZXN0cnVjdHVyaW5nQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTIKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAUAAMRtBAHyCAwR0t+jfBKeAAN4ELa/GxjYaAI4DABQACwACJEMxGRREMRhEIkMxGRREMRhEIkMxGRREMRhENhoBSSRbTFcIgElXAEBMV0BATwIWSwIVIw5EI69PA0sBq0sDFSMORE8DTwKrSwFMUEsCTFBPAlBMUIAEFR98dUxQsCJDMRlA/5sxGBREIkM=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
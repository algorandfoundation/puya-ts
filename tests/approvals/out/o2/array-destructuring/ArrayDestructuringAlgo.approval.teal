#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 64
    // tests/approvals/array-destructuring.algo.ts:4
    // export class ArrayDestructuringAlgo extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@11
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x74b7e8df 0xa78000de 0x2dafc6c6 0xd48b6983 // method "testNested((uint64,(uint512,uint512)))(uint64,(uint512,uint512),uint64,uint512)", method "test()void", method "testLiteralDestructuring()void", method "produceFixed()uint64[3]"
    txna ApplicationArgs 0
    match main_testNested_route@4 main_test_route@5 main_test_route@5 main_produceFixed_route@7
    err

main_produceFixed_route@7:
    // tests/approvals/array-destructuring.algo.ts:44
    // produceFixed(): FixedArray<uint64, 3> {
    pushbytes 0x151f7c75000000000000000100000000000000020000000000000003
    log
    intc_0 // 1
    return

main_test_route@5:
    // tests/approvals/array-destructuring.algo.ts:11
    // test() {
    intc_0 // 1
    return

main_testNested_route@4:
    // tests/approvals/array-destructuring.algo.ts:5
    // testNested(arg: readonly [uint64, readonly [biguint, biguint]]) {
    txna ApplicationArgs 1
    dup
    extract 8 128
    dup
    extract 0 64
    swap
    extract 64 64
    uncover 2
    extract 0 8
    dig 2
    len
    intc_1 // 64
    <=
    assert // overflow
    intc_1 // 64
    bzero
    uncover 3
    dig 1
    b|
    dig 3
    len
    intc_1 // 64
    <=
    assert // overflow
    uncover 3
    uncover 2
    b|
    dig 1
    swap
    concat
    dig 2
    swap
    concat
    uncover 2
    concat
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main___algots__.defaultCreate@11:
    // tests/approvals/array-destructuring.algo.ts:4
    // export class ArrayDestructuringAlgo extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating

#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 6 1 3
    bytecblock 0x151f7c75 base64(CoEBQw==) "TEST" "T" 0x24378d3c 0xd0a28200 0x0005776f726c64 0x9cd87de3 0x4c5c61ba
    // tests/approvals/precompiled-typed.algo.ts:12
    // class HelloFactory extends Contract {
    txn NumAppArgs
    bz main_bare_routing@11
    pushbytess 0x2a17995c 0xe3254bc9 0xe2b7c692 0x02947ca2 0x495e0010 0x27519e7b // method "test_compile_contract()void", method "test_compile_contract_with_template()void", method "test_compile_contract_with_template_and_custom_prefix()void", method "test_compile_contract_large()void", method "test_call_contract_with_transactions()void", method "test_call_contract_with_reference_types()void"
    txna ApplicationArgs 0
    match main_test_compile_contract_route@3 main_test_compile_contract_with_template_route@4 main_test_compile_contract_with_template_and_custom_prefix_route@5 main_test_compile_contract_large_route@6 main_test_call_contract_with_transactions_route@7 main_test_call_contract_with_reference_types_route@8

main_after_if_else@15:
    // tests/approvals/precompiled-typed.algo.ts:12
    // class HelloFactory extends Contract {
    intc_0 // 0
    return

main_test_call_contract_with_reference_types_route@8:
    // tests/approvals/precompiled-typed.algo.ts:131
    // test_call_contract_with_reference_types() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/precompiled-typed.algo.ts:134
    // const appId = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:132
    // const compiled = compileArc4(ReceivesReferenceTypes)
    bytec_1 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CjEbQQA4gASDPRISNhoAjgEAA4EAQzEZFEQxGEQ2GgEXwDI2GgIXwBw2GgMXwDBPAnIIRLBMsHEERLCBAUMxGUD/0DEYFESBAUM=)
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:134
    // const appId = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:136-142
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:140
    // assetName: 'TEST',
    bytec_2 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:139
    // unitName: 'T',
    bytec_3 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:138
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:136-141
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    intc_3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/precompiled-typed.algo.ts:136-142
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:142
    // .submit().createdAsset
    itxn CreatedAssetID
    // tests/approvals/precompiled-typed.algo.ts:144-147
    // const result = compiled.call.receivesReferenceTypes({
    //   args: [Global.currentApplicationId, Txn.sender, asset],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:145
    // args: [Global.currentApplicationId, Txn.sender, asset],
    global CurrentApplicationID
    txn Sender
    itxn_field Accounts
    dig 1
    itxn_field Assets
    itxn_field Applications
    // tests/approvals/precompiled-typed.algo.ts:144-147
    // const result = compiled.call.receivesReferenceTypes({
    //   args: [Global.currentApplicationId, Txn.sender, asset],
    //   appId,
    // })
    pushbytes 0x833d1212 // method "receivesReferenceTypes(application,account,asset)void"
    itxn_field ApplicationArgs
    pushbytes 0x01
    itxn_field ApplicationArgs
    pushbytes 0x01
    itxn_field ApplicationArgs
    pushbytes 0x00
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:144-147
    // const result = compiled.call.receivesReferenceTypes({
    //   args: [Global.currentApplicationId, Txn.sender, asset],
    //   appId,
    // })
    intc_0 // 0
    itxn_field OnCompletion
    swap
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:149
    // assert(result.itxn.logs(0) === Global.currentApplicationAddress.bytes)
    itxna Logs 0
    global CurrentApplicationAddress
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:150
    // assert(result.itxn.logs(1) === Txn.sender.bytes)
    itxna Logs 1
    txn Sender
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:151
    // assert(result.itxn.logs(2) === asset.name)
    itxna Logs 2
    swap
    asset_params_get AssetName
    assert // asset exists
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:131
    // test_call_contract_with_reference_types() {
    intc_2 // 1
    return

main_test_call_contract_with_transactions_route@7:
    // tests/approvals/precompiled-typed.algo.ts:88
    // test_call_contract_with_transactions() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/precompiled-typed.algo.ts:91
    // const appId = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:89
    // const compiled = compileArc4(ReceivesTxns)
    bytec_1 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CiADAQMAJgEEFR98dYAARwMxG0EA04IEBI9oku8EnNh94wTTZshpBIG2c1I2GgCOBACYAEgAJwACJEMxGRREMRhEMRaBAgk4EEkjEkQxFiIJOBBJIhJETCMSRCISRCJDMRkURDEYRDEWIglJOBAjEkQ4F0kVFlcGAkxQKExQsCJDMRkURDEYRDEWIglJRQI4EElFBSMSQQAYSTg8SUUEQQAJSwIWKExQsCJDSTghQv/zSwOBBhJBABRJOD1JRQNBAAVLAUL/3Uk4GEL/1yRC/9MxGRREMRhEgAwVH3x1AAAAAAAAAAGwIkMxGUD/SzEYFEQiQw==)
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:91
    // const appId = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:99-102
    // compiled.call.receivesAnyTxn({
    //   args: [assetCreate],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:96
    // assetName: 'TEST',
    bytec_2 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:95
    // unitName: 'T',
    bytec_3 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:94
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:93-97
    // const assetCreate = itxn.assetConfig({
    //   total: 1,
    //   unitName: 'T',
    //   assetName: 'TEST',
    // })
    intc_3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/precompiled-typed.algo.ts:99-102
    // compiled.call.receivesAnyTxn({
    //   args: [assetCreate],
    //   appId,
    // })
    itxn_next
    bytec 7 // method "receivesAnyTxn(txn)uint64"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/precompiled-typed.algo.ts:109-112
    // compiled.call.receivesAnyTxn({
    //   appId,
    //   args: [appCall],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:106
    // appArgs: [methodSelector(ReceivesTxns.prototype.getOne)],
    pushbytes 0x8f6892ef // method "getOne()uint64"
    itxn_field ApplicationArgs
    dup
    itxn_field ApplicationID
    // tests/approvals/precompiled-typed.algo.ts:104-107
    // const appCall = itxn.applicationCall({
    //   appId,
    //   appArgs: [methodSelector(ReceivesTxns.prototype.getOne)],
    // })
    intc_1 // 6
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/precompiled-typed.algo.ts:109-112
    // compiled.call.receivesAnyTxn({
    //   appId,
    //   args: [appCall],
    // })
    itxn_next
    bytec 7 // method "receivesAnyTxn(txn)uint64"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/precompiled-typed.algo.ts:114-117
    // compiled.call.receivesAssetConfig({
    //   appId,
    //   args: [assetCreate],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:96
    // assetName: 'TEST',
    bytec_2 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:95
    // unitName: 'T',
    bytec_3 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:94
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:93-97
    // const assetCreate = itxn.assetConfig({
    //   total: 1,
    //   unitName: 'T',
    //   assetName: 'TEST',
    // })
    intc_3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/precompiled-typed.algo.ts:114-117
    // compiled.call.receivesAssetConfig({
    //   appId,
    //   args: [assetCreate],
    // })
    itxn_next
    pushbytes 0xd366c869 // method "receivesAssetConfig(acfg)byte[]"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/precompiled-typed.algo.ts:120
    // receiver: appId.address,
    dup
    app_params_get AppAddress
    assert // application exists
    // tests/approvals/precompiled-typed.algo.ts:122
    // sender: Global.currentApplicationId.address,
    global CurrentApplicationID
    app_params_get AppAddress
    assert // application exists
    // tests/approvals/precompiled-typed.algo.ts:125-128
    // compiled.call.receivesAssetConfigAndPay({
    //   appId,
    //   args: [assetCreate, pay],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:96
    // assetName: 'TEST',
    bytec_2 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:95
    // unitName: 'T',
    bytec_3 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:94
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:93-97
    // const assetCreate = itxn.assetConfig({
    //   total: 1,
    //   unitName: 'T',
    //   assetName: 'TEST',
    // })
    intc_3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/precompiled-typed.algo.ts:127
    // args: [assetCreate, pay],
    itxn_next
    itxn_field Sender
    // tests/approvals/precompiled-typed.algo.ts:121
    // amount: 100000,
    pushint 100000 // 100000
    itxn_field Amount
    itxn_field Receiver
    // tests/approvals/precompiled-typed.algo.ts:119-123
    // const pay = itxn.payment({
    //   receiver: appId.address,
    //   amount: 100000,
    //   sender: Global.currentApplicationId.address,
    // })
    intc_2 // 1
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/precompiled-typed.algo.ts:125-128
    // compiled.call.receivesAssetConfigAndPay({
    //   appId,
    //   args: [assetCreate, pay],
    // })
    itxn_next
    pushbytes 0x81b67352 // method "receivesAssetConfigAndPay(acfg,pay)void"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:88
    // test_call_contract_with_transactions() {
    intc_2 // 1
    return

main_test_compile_contract_large_route@6:
    // tests/approvals/precompiled-typed.algo.ts:72
    // test_compile_contract_large() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/precompiled-typed.algo.ts:75
    // const largeApp = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:73
    // const compiled = compileArc4(LargeProgram)
    bytec_1 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CjEbQQA9ggIEAr8wzwQkN408NhoAjgIADwADgQBDMRmBBRJEMRhEgQFDMRkURDEYRIGAIK8VFoAEFR98dUxQsIEBQzEZQP/TMRgURIEBQw==)
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:75
    // const largeApp = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:77-79
    // const { returnValue: result } = compiled.call.getBigBytesLength({
    //   appId: largeApp,
    // })
    itxn_begin
    pushbytes 0x02bf30cf // method "getBigBytesLength()uint64"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    btoi
    // tests/approvals/precompiled-typed.algo.ts:81
    // assert(result === 4096)
    pushint 4096 // 4096
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:83-85
    // compiled.call.delete({
    //   appId: largeApp,
    // })
    itxn_begin
    bytec 4 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:72
    // test_compile_contract_large() {
    intc_2 // 1
    return

main_test_compile_contract_with_template_and_custom_prefix_route@5:
    // tests/approvals/precompiled-typed.algo.ts:55
    // test_compile_contract_with_template_and_custom_prefix() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/precompiled-typed.algo.ts:58
    // const helloApp = compiled.call.create().itxn.createdApp
    itxn_begin
    bytec 8 // method "create()void"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:56
    // const compiled = compileArc4(HelloTemplateCustomPrefix, { templateVars: { GREETING: 'bonjour' }, templateVarsPrefix: 'PRFX_' })
    intc_2 // 1
    itxn_field GlobalNumByteSlice
    bytec_1 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CiACAQAmAghncmVldGluZwdib25qb3VyMRhAAAcogABnKClnMRtBACOCBARMXGG6BCQ3jTwEoOgYcgTQooIANhoAjgQAQgA3ACwAAiNDMRkURDEYRDYaAVcCACMoZUSAASBQTFBJFRZXBgJMUIAEFR98dUxQsCJDMRmBBBJEMRhEIkMxGYEFEkQxGEQiQzEZFEQxGBREIkM=)
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:58
    // const helloApp = compiled.call.create().itxn.createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 0 CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:60-63
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    itxn_begin
    bytec 5 // method "greet(string)string"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:61
    // args: ['world'],
    bytec 6 // 0x0005776f726c64
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:60-63
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 6 0
    // tests/approvals/precompiled-typed.algo.ts:65
    // assert(result === 'bonjour world')
    pushbytes "bonjour world"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:67-69
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    itxn_begin
    bytec 4 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:55
    // test_compile_contract_with_template_and_custom_prefix() {
    intc_2 // 1
    return

main_test_compile_contract_with_template_route@4:
    // tests/approvals/precompiled-typed.algo.ts:38
    // test_compile_contract_with_template() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/precompiled-typed.algo.ts:41
    // const helloApp = compiled.call.create().itxn.createdApp
    itxn_begin
    bytec 8 // method "create()void"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:39
    // const compiled = compileArc4(HelloTemplate, { templateVars: { GREETING: 'hey' } })
    intc_2 // 1
    itxn_field GlobalNumByteSlice
    bytec_1 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CiACAQAmAghncmVldGluZwNoZXkxGEAAByiAAGcoKWcxG0EAI4IEBExcYboEJDeNPASg6BhyBNCiggA2GgCOBABCADcALAACI0MxGRREMRhENhoBVwIAIyhlRIABIFBMUEkVFlcGAkxQgAQVH3x1TFCwIkMxGYEEEkQxGEQiQzEZgQUSRDEYRCJDMRkURDEYFEQiQw==)
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:41
    // const helloApp = compiled.call.create().itxn.createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 0 CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:43-46
    // const txn = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    itxn_begin
    bytec 5 // method "greet(string)string"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:44
    // args: ['world'],
    bytec 6 // 0x0005776f726c64
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:43-46
    // const txn = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 6 0
    // tests/approvals/precompiled-typed.algo.ts:48
    // assert(txn.returnValue === 'hey world')
    pushbytes "hey world"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:50-52
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    itxn_begin
    bytec 4 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:38
    // test_compile_contract_with_template() {
    intc_2 // 1
    return

main_test_compile_contract_route@3:
    // tests/approvals/precompiled-typed.algo.ts:13
    // test_compile_contract() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/precompiled-typed.algo.ts:16-18
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    itxn_begin
    pushbytes 0x009225ae // method "helloCreate(string)void"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:17
    // args: ['hello'],
    pushbytes 0x000568656c6c6f
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:14
    // const compiled = compileArc4(Hello)
    intc_2 // 1
    itxn_field GlobalNumByteSlice
    bytec_1 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CiACAQAmAQhncmVldGluZzEYQAAEKIAAZzEbQQAjggQEAJIlrgQkN408BKDoGHIE0KKCADYaAI4EAEIANwAsAAIjQzEZFEQxGEQ2GgFXAgAjKGVEgAEgUExQSRUWVwYCTFCABBUffHVMULAiQzEZgQQSRDEYRCJDMRmBBRJEMRhEIkMxGRREMRgURDYaAVcCAChMZyJD)
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:16-18
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:18
    // }).itxn.createdApp
    gitxn 0 CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:20-23
    // const result = compiled.call.greet({
    //   args: ['world'],
    //   appId: app,
    // }).returnValue
    itxn_begin
    bytec 5 // method "greet(string)string"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:21
    // args: ['world'],
    bytec 6 // 0x0005776f726c64
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:20-23
    // const result = compiled.call.greet({
    //   args: ['world'],
    //   appId: app,
    // }).returnValue
    intc_0 // 0
    itxn_field OnCompletion
    dup
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 6 0
    // tests/approvals/precompiled-typed.algo.ts:24
    // assert(result === 'hello world')
    pushbytes "hello world"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:26-29
    // const result2 = abiCall(Hello.prototype.greet, {
    //   appId: app,
    //   args: ['abi'],
    // }).returnValue
    itxn_begin
    bytec 5 // method "greet(string)string"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:28
    // args: ['abi'],
    pushbytes 0x0003616269
    itxn_field ApplicationArgs
    dup
    itxn_field ApplicationID
    // tests/approvals/precompiled-typed.algo.ts:26-29
    // const result2 = abiCall(Hello.prototype.greet, {
    //   appId: app,
    //   args: ['abi'],
    // }).returnValue
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 6 0
    // tests/approvals/precompiled-typed.algo.ts:31
    // assert(result2 === 'hello abi')
    pushbytes "hello abi"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:33-35
    // compiled.call.delete({
    //   appId: app,
    // })
    itxn_begin
    bytec 4 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:13
    // test_compile_contract() {
    intc_2 // 1
    return

main_bare_routing@11:
    // tests/approvals/precompiled-typed.algo.ts:12
    // class HelloFactory extends Contract {
    txn OnCompletion
    bnz main_after_if_else@15
    txn ApplicationID
    !
    assert // can only call when creating
    intc_2 // 1
    return

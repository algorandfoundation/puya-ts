main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@13
    block@2: // abi_routing_L13
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "test_compile_contract()void" => block@4, method "test_compile_contract_with_template()void" => block@5, method "test_compile_contract_with_template_and_custom_prefix()void" => block@6, method "test_compile_contract_large()void" => block@7, method "test_call_contract_with_transactions()void" => block@8, method "test_call_contract_with_reference_types()void" => block@9, * => block@12}
    block@4: // test_compile_contract_route_L14
        itxn_begin
        ((itxn_field ApplicationArgs) method "helloCreate(string)void")
        ((itxn_field ApplicationArgs) 0x000568656c6c6f)
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyAEAAECBCYDCGdyZWV0aW5nASAEFR98dTEYQAAEKIAAZ4ICBCQ3jTwEoOgYcjYaAI4CAMkAvzEZFEQxGEEAk4ICBNCiggAEUYC6IDYaAI4CAFgAAQA2GgFJFUsBIllJJRJESwJLAUsDUiJZgQYISwMkWUlLAhJESwRLAUsFUkkiWSQITwMITwQSRCIoZUQpUE4ETgRSVwIAUExXAgBQSRUWVwYCTFAqTFCwI0M2GgFJIlkkCEsBFRJEVwIAIihlRClQTFBJFRZXBgJMUCpMULAjQ4AEAJIlrjYaAI4BAAEANhoBSSJZJAhLARUSRFcCAChMZyNDMRklEjEYEEQjQzEZgQUSMRgQRCND)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app#0: uint64 = (gitxn 0 CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#4: bytes = (itxn LastLog)
        let tmp%4#4: bytes = ((extract 0 4) awst_tmp%0#4)
        let tmp%5#3: bool = (== tmp%4#4 0x151f7c75)
        (assert tmp%5#3) // Bytes has valid prefix
        let result#2: string = ((extract 6 0) awst_tmp%0#4)
        let tmp%7#4: bool = (== result#2 "hello world")
        (assert tmp%7#4)
        itxn_begin
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0003616269)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%1#2: bytes = (itxn LastLog)
        let tmp%10#4: bytes = ((extract 0 4) awst_tmp%1#2)
        let tmp%11#4: bool = (== tmp%10#4 0x151f7c75)
        (assert tmp%11#4) // Bytes has valid prefix
        let result2#0: string = ((extract 6 0) awst_tmp%1#2)
        let greetItxn.LastLog#0: bytes = (itxn LastLog)
        let tmp%13#1: bool = (== result2#0 "hello abi")
        (assert tmp%13#1)
        let tmp%16#0: bool = (== greetItxn.LastLog#0 0x151f7c75000968656c6c6f20616269)
        (assert tmp%16#0)
        itxn_begin
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x000773747562626564)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%2#1: bytes = (itxn LastLog)
        let tmp%19#0: bytes = ((extract 0 4) awst_tmp%2#1)
        let tmp%20#0: bool = (== tmp%19#0 0x151f7c75)
        (assert tmp%20#0) // Bytes has valid prefix
        let result3#0: string = ((extract 6 0) awst_tmp%2#1)
        let tmp%22#0: bool = (== result3#0 "hello stubbed")
        (assert tmp%22#0)
        itxn_begin
        ((itxn_field ApplicationArgs) method "sendGreetings((string,string))string")
        ((itxn_field ApplicationArgs) 0x0004000b0005776f726c64000121)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%3#0: bytes = (itxn LastLog)
        let tmp%26#0: bytes = ((extract 0 4) awst_tmp%3#0)
        let tmp%27#0: bool = (== tmp%26#0 0x151f7c75)
        (assert tmp%27#0) // Bytes has valid prefix
        let result4#0: string = ((extract 6 0) awst_tmp%3#0)
        let tmp%29#0: bool = (== result4#0 "hello world!")
        (assert tmp%29#0)
        itxn_begin
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@5: // test_compile_contract_with_template_route_L56
        itxn_begin
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyAEAAECBCYECGdyZWV0aW5nASAEFR98dQNoZXkxGEAAAygrZ4ICBCQ3jTwEoOgYcjYaAI4CALYArDEZFEQxGEEAk4ICBNCiggAEUYC6IDYaAI4CAFgAAQA2GgFJFUsBIllJJRJESwJLAUsDUiJZgQYISwMkWUlLAhJESwRLAUsFUkkiWSQITwMITwQSRCIoZUQpUE4ETgRSVwIAUExXAgBQSRUWVwYCTFAqTFCwI0M2GgFJIlkkCEsBFRJEVwIAIihlRClQTFBJFRZXBgJMUCpMULAjQ4AETFxhujYaAI4BAAEAI0MxGSUSMRgQRCNDMRmBBRIxGBBEI0M=)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#1: uint64 = (gitxn 0 CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) helloApp#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#3: bytes = (itxn LastLog)
        let tmp%3#5: bytes = ((extract 0 4) awst_tmp%0#3)
        let tmp%4#3: bool = (== tmp%3#5 0x151f7c75)
        (assert tmp%4#3) // Bytes has valid prefix
        let txn1.returnValue#0: string = ((extract 6 0) awst_tmp%0#3)
        let tmp%6#4: bool = (== txn1.returnValue#0 "hey world")
        (assert tmp%6#4)
        itxn_begin
        ((itxn_field ApplicationArgs) method "sendGreetings((string,string))string")
        ((itxn_field ApplicationArgs) 0x0004000b0005776f726c64000121)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) helloApp#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%1#1: bytes = (itxn LastLog)
        let tmp%11#3: bytes = ((extract 0 4) awst_tmp%1#1)
        let tmp%12#1: bool = (== tmp%11#3 0x151f7c75)
        (assert tmp%12#1) // Bytes has valid prefix
        let txn2.returnValue#0: string = ((extract 6 0) awst_tmp%1#1)
        let tmp%14#0: bool = (== txn2.returnValue#0 "hey world!")
        (assert tmp%14#0)
        itxn_begin
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationID) helloApp#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@6: // test_compile_contract_with_template_and_custom_prefix_route_L81
        itxn_begin
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyAEAAECBCYECGdyZWV0aW5nASAEFR98dQdib25qb3VyMRhAAAMoK2eCAgQkN408BKDoGHI2GgCOAgC2AKwxGRREMRhBAJOCAgTQooIABFGAuiA2GgCOAgBYAAEANhoBSRVLASJZSSUSREsCSwFLA1IiWYEGCEsDJFlJSwISREsESwFLBVJJIlkkCE8DCE8EEkQiKGVEKVBOBE4EUlcCAFBMVwIAUEkVFlcGAkxQKkxQsCNDNhoBSSJZJAhLARUSRFcCACIoZUQpUExQSRUWVwYCTFAqTFCwI0OABExcYbo2GgCOAQABACNDMRklEjEYEEQjQzEZgQUSMRgQRCND)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#0: uint64 = (gitxn 0 CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#2: bytes = (itxn LastLog)
        let tmp%3#4: bytes = ((extract 0 4) awst_tmp%0#2)
        let tmp%4#2: bool = (== tmp%3#4 0x151f7c75)
        (assert tmp%4#2) // Bytes has valid prefix
        let result#1: string = ((extract 6 0) awst_tmp%0#2)
        let tmp%6#3: bool = (== result#1 "bonjour world")
        (assert tmp%6#3)
        itxn_begin
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@7: // test_compile_contract_large_route_L98
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CzEbQQA7ggIEJDeNPAQCvzDPNhoAjgIAGgABADEZFDEYEESBgCCvFRaABBUffHVMULCBAUMxGYEFEjEYEESBAUMxGRQxGBQQRIEBQw==)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let largeApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationArgs) method "getBigBytesLength()uint64")
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) largeApp#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#1: bytes = (itxn LastLog)
        let tmp%1#1: bytes = ((extract 4 0) awst_tmp%0#1)
        let tmp%2#3: bytes = ((extract 0 4) awst_tmp%0#1)
        let tmp%3#3: bool = (== tmp%2#3 0x151f7c75)
        (assert tmp%3#3) // Bytes has valid prefix
        let result#0: uint64 = (btoi tmp%1#1)
        let tmp%5#2: bool = (== result#0 4096u)
        (assert tmp%5#2)
        itxn_begin
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationID) largeApp#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@8: // test_call_contract_with_transactions_route_L114
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAQOAAEcDMRtBAMAxGRREMRhEggQEj2iS7wSc2H3jBNNmyGkEgbZzUjYaAI4EAIUANgAdAAEAMRaBAgk4EEkjEkQxFiIJOBBJIhJETCMSRCISQzEWIglJOBAjEkQ4F4AGFR98dQAgTFCwIkMxFiIJSUUCOBBJRQUjEkEAHUk4PElFBEEADksCFoAEFR98dUxQsCJDSTghQv/uSwOBBhJBABRJOD1JRQNBAAVLAUL/2Ek4GEL/0oEAQv/NgAwVH3x1AAAAAAAAAAGwIkMxGRQxGBQQRCJD)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let appId#1: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ConfigAssetName) "TEST")
        ((itxn_field ConfigAssetUnitName) "T")
        ((itxn_field ConfigAssetTotal) 1u)
        ((itxn_field TypeEnum) 3u)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field ApplicationArgs) method "receivesAnyTxn(txn)uint64")
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) appId#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (gitxn 1 LastLog)
        let tmp%2#2: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%3#2: bool = (== tmp%2#2 0x151f7c75)
        (assert tmp%3#2) // Bytes has valid prefix
        itxn_begin
        ((itxn_field ApplicationArgs) method "getOne()uint64")
        ((itxn_field ApplicationID) appId#1)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field ApplicationArgs) method "receivesAnyTxn(txn)uint64")
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) appId#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%1#0: bytes = (gitxn 1 LastLog)
        let tmp%6#2: bytes = ((extract 0 4) awst_tmp%1#0)
        let tmp%7#2: bool = (== tmp%6#2 0x151f7c75)
        (assert tmp%7#2) // Bytes has valid prefix
        itxn_begin
        ((itxn_field ConfigAssetName) "TEST")
        ((itxn_field ConfigAssetUnitName) "T")
        ((itxn_field ConfigAssetTotal) 1u)
        ((itxn_field TypeEnum) 3u)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field ApplicationArgs) method "receivesAssetConfig(acfg)byte[]")
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) appId#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%2#0: bytes = (gitxn 1 LastLog)
        let tmp%10#2: bytes = ((extract 0 4) awst_tmp%2#0)
        let tmp%11#2: bool = (== tmp%10#2 0x151f7c75)
        (assert tmp%11#2) // Bytes has valid prefix
        let (value%0#1: account, check%0#1: bool) = ((app_params_get AppAddress) appId#1)
        (assert check%0#1) // application exists
        let tmp%13#0: uint64 = (global CurrentApplicationID)
        let (value%1#0: account, check%1#0: bool) = ((app_params_get AppAddress) tmp%13#0)
        (assert check%1#0) // application exists
        itxn_begin
        ((itxn_field ConfigAssetName) "TEST")
        ((itxn_field ConfigAssetUnitName) "T")
        ((itxn_field ConfigAssetTotal) 1u)
        ((itxn_field TypeEnum) 3u)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field Sender) value%1#0)
        ((itxn_field Amount) 100000u)
        ((itxn_field Receiver) value%0#1)
        ((itxn_field TypeEnum) 1u)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field ApplicationArgs) method "receivesAssetConfigAndPay(acfg,pay)void")
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) appId#1)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@9: // test_call_contract_with_reference_types_route_L157
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACCAExG0EAPoAEZmmNGDYaAI4BAAEAMRkUMRgQRDYaAUkVIhJEFzYaAkkVgSASRDYaA0kVIhJEF08CcghEsEywcQREsCNDMRkUMRgUEEQjQw==)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let appId#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ConfigAssetName) "TEST")
        ((itxn_field ConfigAssetUnitName) "T")
        ((itxn_field ConfigAssetTotal) 1u)
        ((itxn_field TypeEnum) 3u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let asset#0: uint64 = (itxn CreatedAssetID)
        itxn_begin
        let tmp%2#1: uint64 = (global CurrentApplicationID)
        let aggregate%val_as_bytes%0#0: bytes[8] = (itob tmp%2#1)
        let tmp%4#1: account = (txn Sender)
        let aggregate%val_as_bytes%1#0: bytes[8] = (itob asset#0)
        ((itxn_field ApplicationArgs) method "receivesReferenceTypes(uint64,address,uint64)void")
        ((itxn_field ApplicationArgs) aggregate%val_as_bytes%0#0)
        ((itxn_field ApplicationArgs) tmp%4#1)
        ((itxn_field ApplicationArgs) aggregate%val_as_bytes%1#0)
        ((itxn_field OnCompletion) 0u)
        ((itxn_field ApplicationID) appId#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%7#1: bytes = (itxna Logs 0)
        let reinterpret_bytes[32]%0#0: bytes[32] = (global CurrentApplicationAddress)
        let tmp%8#1: bool = (== tmp%7#1 reinterpret_bytes[32]%0#0)
        (assert tmp%8#1)
        let tmp%9#1: bytes = (itxna Logs 1)
        let reinterpret_bytes[32]%1#0: bytes[32] = (txn Sender)
        let tmp%10#1: bool = (== tmp%9#1 reinterpret_bytes[32]%1#0)
        (assert tmp%10#1)
        let tmp%11#1: bytes = (itxna Logs 2)
        let (value%0#0: bytes, check%0#0: bool) = ((asset_params_get AssetName) asset#0)
        (assert check%0#0) // asset exists
        let tmp%12#0: bool = (== tmp%11#1 value%0#0)
        (assert tmp%12#0)
        exit 1u
    block@12: // after_if_else_L13
        fail
    block@13: // __algots__.defaultCreate_L13
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u
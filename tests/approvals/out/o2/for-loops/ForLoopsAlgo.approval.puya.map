{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/for-loops.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA4BE;;AAAA;AAAA;AAAA;;AAAA;AA5BF;;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AA6BuB;AAAf;;;;AACuB;;AAAA;;AAAA;AAApB;;;;;;;AACe;;AAAA;;AAAA;AAApB;;;AACW;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAT;;AAAA;AAAA;;AAEI;AAAA;;AAAA;AAAJ;;;AAH4B;;AAAA;;AAAA;AAAA;;;;;AAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEuC;;AAAA;;AAAA;AAAA;;;;;AAVvC;;AAAA;AAAA;AAAA;;AAAA;AApBF;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAqBuB;AAAf;;;;AACgB;;AAAA;;AAAA;AAApB;;;AACM;;AAAI;;AAAJ;AAAJ;;;AACA;AAAA;;AAAA;AAAA;;AAF4B;;AAAA;;AAAA;AAAA;;;;;AAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AATF;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAUuB;AAAf;;;;AACgB;;AAAA;;AAAA;AAApB;;;AACE;AAAA;;AAAA;AAAA;AAAA;;AACY;;AAAR;AAAJ;;;AAF4B;;AAAA;;AAAA;AAAA;;;;;AAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AADF;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAEuB;AAAf;;;;AACgB;;AAAA;;AAAA;AAApB;;;AACE;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAD4B;;AAAA;AAAA;;;;;AAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AADF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x151f7c75"
    },
    "12": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "14": {
      "op": "dupn 5",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "16": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#1"
      ]
    },
    "18": {
      "op": "bz main_bare_routing@9",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "21": {
      "op": "pushbytess 0xf8654f73 0x287f4c02 0x4bd7778c 0x33675e06 // method \"test_for_loop(uint64,uint64,uint64)uint64\", method \"test_for_loop_break(uint64,uint64,uint64)uint64\", method \"test_for_loop_continue(uint64,uint64,uint64)uint64\", method \"test_for_loop_labelled(uint64,uint64,uint64)uint64\""
    },
    "43": {
      "op": "txna ApplicationArgs 0"
    },
    "46": {
      "op": "match main_test_for_loop_route@3 main_test_for_loop_break_route@4 main_test_for_loop_continue_route@5 main_test_for_loop_labelled_route@6"
    },
    "56": {
      "block": "main_after_if_else@13",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "57": {
      "op": "return"
    },
    "58": {
      "block": "main_test_for_loop_labelled_route@6",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%27#0"
      ]
    },
    "60": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%28#0"
      ]
    },
    "61": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "62": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%29#0"
      ]
    },
    "64": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "65": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "68": {
      "op": "btoi",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "69": {
      "op": "dup",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "start#0"
      ]
    },
    "70": {
      "op": "bury 5",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "72": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%10#0",
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "75": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "stop#0"
      ]
    },
    "76": {
      "op": "bury 3",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "78": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%11#0",
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "81": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "step#0"
      ]
    },
    "82": {
      "op": "bury 4",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "84": {
      "op": "intc_0 // 0",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "total#0"
      ]
    },
    "85": {
      "op": "bury 2",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "87": {
      "op": "bury 6",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "89": {
      "block": "main_while_top@18",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "91": {
      "op": "dig 2",
      "defined_out": [
        "i#1",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1",
        "stop#0"
      ]
    },
    "93": {
      "op": "<",
      "defined_out": [
        "i#1",
        "stop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "94": {
      "op": "bz main_block@26",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "97": {
      "op": "dig 3"
    },
    "99": {
      "op": "bury 5"
    },
    "101": {
      "block": "main_while_top@20",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "j#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "j#1"
      ]
    },
    "103": {
      "op": "dig 2",
      "defined_out": [
        "j#1",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "j#1",
        "stop#0"
      ]
    },
    "105": {
      "op": "<",
      "defined_out": [
        "j#1",
        "stop#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%1#1"
      ]
    },
    "106": {
      "op": "bz main_after_while@24",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "109": {
      "op": "dig 5"
    },
    "111": {
      "op": "dup"
    },
    "112": {
      "op": "dig 6"
    },
    "114": {
      "op": "dup"
    },
    "115": {
      "op": "cover 3"
    },
    "117": {
      "op": "+"
    },
    "118": {
      "op": "dig 3"
    },
    "120": {
      "op": "+"
    },
    "121": {
      "op": "bury 3"
    },
    "123": {
      "op": "*"
    },
    "124": {
      "op": "dig 2"
    },
    "126": {
      "op": ">"
    },
    "127": {
      "op": "bnz main_block@26"
    },
    "130": {
      "op": "dig 4"
    },
    "132": {
      "op": "dig 3"
    },
    "134": {
      "op": "+"
    },
    "135": {
      "op": "bury 5"
    },
    "137": {
      "op": "b main_while_top@20"
    },
    "140": {
      "block": "main_block@26",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dup",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "total#0"
      ]
    },
    "141": {
      "op": "itob",
      "defined_out": [
        "total#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%3#0"
      ]
    },
    "142": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "total#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "143": {
      "op": "swap",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "144": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%34#0"
      ]
    },
    "145": {
      "op": "log",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "146": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "147": {
      "op": "return"
    },
    "148": {
      "block": "main_after_while@24",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "150": {
      "op": "dig 3",
      "defined_out": [
        "i#1",
        "step#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1",
        "step#0"
      ]
    },
    "152": {
      "op": "+",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "153": {
      "op": "bury 6",
      "defined_out": [
        "i#1",
        "step#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "155": {
      "op": "b main_while_top@18"
    },
    "158": {
      "block": "main_test_for_loop_continue_route@5",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%19#0"
      ]
    },
    "160": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%20#0"
      ]
    },
    "161": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "162": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%21#0"
      ]
    },
    "164": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "165": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "168": {
      "op": "btoi",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "169": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%7#0",
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "172": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "stop#0"
      ]
    },
    "173": {
      "op": "bury 3",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "175": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%8#0",
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "178": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "step#0"
      ]
    },
    "179": {
      "op": "bury 4",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "total#0"
      ]
    },
    "182": {
      "op": "bury 2",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "184": {
      "op": "bury 6",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "186": {
      "block": "main_while_top@29",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "188": {
      "op": "dig 2",
      "defined_out": [
        "i#1",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1",
        "stop#0"
      ]
    },
    "190": {
      "op": "<",
      "defined_out": [
        "i#1",
        "stop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "191": {
      "op": "bz main_after_while@34",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "194": {
      "op": "dig 5"
    },
    "196": {
      "op": "pushint 5 // 5"
    },
    "198": {
      "op": "%"
    },
    "199": {
      "op": "bz main_block@33"
    },
    "202": {
      "op": "dup"
    },
    "203": {
      "op": "dig 6"
    },
    "205": {
      "op": "+"
    },
    "206": {
      "op": "bury 1"
    },
    "208": {
      "block": "main_block@33",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "210": {
      "op": "dig 3",
      "defined_out": [
        "i#1",
        "step#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1",
        "step#0"
      ]
    },
    "212": {
      "op": "+",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "213": {
      "op": "bury 6",
      "defined_out": [
        "i#1",
        "step#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "215": {
      "op": "b main_while_top@29"
    },
    "218": {
      "block": "main_after_while@34",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dup",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "total#0"
      ]
    },
    "219": {
      "op": "itob",
      "defined_out": [
        "total#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%2#0"
      ]
    },
    "220": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "total#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "221": {
      "op": "swap",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "222": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%26#0"
      ]
    },
    "223": {
      "op": "log",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "224": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "225": {
      "op": "return"
    },
    "226": {
      "block": "main_test_for_loop_break_route@4",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%11#0"
      ]
    },
    "228": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%12#0"
      ]
    },
    "229": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "230": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%13#0"
      ]
    },
    "232": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "233": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "236": {
      "op": "btoi",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "237": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%4#0",
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "240": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "stop#0"
      ]
    },
    "241": {
      "op": "bury 3",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "243": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%5#0",
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "246": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "step#0"
      ]
    },
    "247": {
      "op": "bury 4",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "249": {
      "op": "intc_0 // 0",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "total#0"
      ]
    },
    "250": {
      "op": "bury 2",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "252": {
      "op": "bury 6",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "254": {
      "block": "main_while_top@37",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "256": {
      "op": "dig 2",
      "defined_out": [
        "i#1",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1",
        "stop#0"
      ]
    },
    "258": {
      "op": "<",
      "defined_out": [
        "i#1",
        "stop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "259": {
      "op": "bz main_block@42",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "262": {
      "op": "dup"
    },
    "263": {
      "op": "dig 6"
    },
    "265": {
      "op": "+"
    },
    "266": {
      "op": "dup"
    },
    "267": {
      "op": "bury 2"
    },
    "269": {
      "op": "pushint 10 // 10"
    },
    "271": {
      "op": ">"
    },
    "272": {
      "op": "bnz main_block@42"
    },
    "275": {
      "op": "dig 5"
    },
    "277": {
      "op": "dig 3"
    },
    "279": {
      "op": "+"
    },
    "280": {
      "op": "bury 6"
    },
    "282": {
      "op": "b main_while_top@37"
    },
    "285": {
      "block": "main_block@42",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dup",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "total#0"
      ]
    },
    "286": {
      "op": "itob",
      "defined_out": [
        "total#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%1#0"
      ]
    },
    "287": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "total#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "288": {
      "op": "swap",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "289": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%18#0"
      ]
    },
    "290": {
      "op": "log",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "291": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "292": {
      "op": "return"
    },
    "293": {
      "block": "main_test_for_loop_route@3",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%3#0"
      ]
    },
    "295": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%4#0"
      ]
    },
    "296": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "297": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%5#0"
      ]
    },
    "299": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "300": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "303": {
      "op": "btoi",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "304": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "start#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "307": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "stop#0"
      ]
    },
    "308": {
      "op": "bury 3",
      "defined_out": [
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "310": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "start#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "313": {
      "op": "btoi",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "step#0"
      ]
    },
    "314": {
      "op": "bury 4",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0"
      ]
    },
    "316": {
      "op": "intc_0 // 0",
      "defined_out": [
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "start#0",
        "total#0"
      ]
    },
    "317": {
      "op": "bury 2",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "319": {
      "op": "bury 6",
      "defined_out": [
        "i#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "321": {
      "block": "main_while_top@45",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1"
      ]
    },
    "323": {
      "op": "dig 2",
      "defined_out": [
        "i#1",
        "stop#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "i#1",
        "stop#0"
      ]
    },
    "325": {
      "op": "<",
      "defined_out": [
        "i#1",
        "stop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "326": {
      "op": "bz main_after_while@47",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "329": {
      "op": "dup"
    },
    "330": {
      "op": "dig 6"
    },
    "332": {
      "op": "dup"
    },
    "333": {
      "op": "cover 2"
    },
    "335": {
      "op": "+"
    },
    "336": {
      "op": "bury 2"
    },
    "338": {
      "op": "dig 3"
    },
    "340": {
      "op": "+"
    },
    "341": {
      "op": "bury 6"
    },
    "343": {
      "op": "b main_while_top@45"
    },
    "346": {
      "block": "main_after_while@47",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "dup",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "total#0"
      ]
    },
    "347": {
      "op": "itob",
      "defined_out": [
        "total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%0#0"
      ]
    },
    "348": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "349": {
      "op": "swap",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%10#0"
      ]
    },
    "351": {
      "op": "log",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "352": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "353": {
      "op": "return"
    },
    "354": {
      "block": "main_bare_routing@9",
      "stack_in": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0",
        "tmp%35#0"
      ]
    },
    "356": {
      "op": "bnz main_after_if_else@13",
      "stack_out": [
        "i#1",
        "j#1",
        "start#0",
        "step#0",
        "stop#0",
        "total#0"
      ]
    },
    "359": {
      "op": "txn ApplicationID"
    },
    "361": {
      "op": "!"
    },
    "362": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "363": {
      "op": "intc_1 // 1"
    },
    "364": {
      "op": "return"
    }
  }
}
{
    "name": "ForLoopsAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test_for_loop",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_break",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_continue",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_labelled",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        25
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        400
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        72,
                        84,
                        95,
                        180,
                        189,
                        200,
                        256,
                        265,
                        276,
                        331,
                        340,
                        351
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyADCAEAJgEEFR98dYAARwUxG0EBczEZFEQxGESCBAT4ZU9zBCh/TAIES9d3jAQzZ14GNhoAjgQBBAC5AG0AAQA2GgFJFSISRBdJRQU2GgJJFSISRBdFAzYaA0kVIhJEF0UEJEUCRQZLBUsCDEEAK0sDRQVLBEsCDEEAJ0sFSUsGSU4DCEsDCEUDC0sCDUAACksESwMIRQVC/9lJFihMULAjQ0sFSwMIRQZC/7s2GgFJFSISRBc2GgJJFSISRBdFAzYaA0kVIhJEF0UEJEUCRQZLBUsCDEEAGEsFgQUYQQAGSUsGCEUBSwVLAwhFBkL/4EkWKExQsCNDNhoBSRUiEkQXNhoCSRUiEkQXRQM2GgNJFSISRBdFBCRFAkUGSwVLAgxBABdJSwYISUUCgQoNQAAKSwVLAwhFBkL/4UkWKExQsCNDNhoBSRUiEkQXNhoCSRUiEkQXRQM2GgNJFSISRBdFBCRFAkUGSwVLAgxBABFJSwZJTgIIRQJLAwhFBkL/50kWKExQsCNDMRkUMRgUEEQjQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}
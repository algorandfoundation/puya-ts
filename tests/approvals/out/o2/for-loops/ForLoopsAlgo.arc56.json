{
    "name": "ForLoopsAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test_for_loop",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_break",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_continue",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_labelled",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        61,
                        161,
                        229,
                        296
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        362
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        64,
                        164,
                        232,
                        299
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAEmAQQVH3x1gABHBTEbQQFNggQE+GVPcwQof0wCBEvXd4wEM2deBjYaAI4EAO0AqgBmAAIiQzEZFEQxGEQ2GgEXSUUFNhoCF0UDNhoDF0UEIkUCRQZLBUsCDEEAK0sDRQVLBEsCDEEAJ0sFSUsGSU4DCEsDCEUDC0sCDUAACksESwMIRQVC/9lJFihMULAjQ0sFSwMIRQZC/7sxGRREMRhENhoBFzYaAhdFAzYaAxdFBCJFAkUGSwVLAgxBABhLBYEFGEEABklLBghFAUsFSwMIRQZC/+BJFihMULAjQzEZFEQxGEQ2GgEXNhoCF0UDNhoDF0UEIkUCRQZLBUsCDEEAF0lLBghJRQKBCg1AAApLBUsDCEUGQv/hSRYoTFCwI0MxGRREMRhENhoBFzYaAhdFAzYaAxdFBCJFAkUGSwVLAgxBABFJSwZJTgIIRQJLAwhFBkL/50kWKExQsCNDMRlA/tExGBREI0M=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}
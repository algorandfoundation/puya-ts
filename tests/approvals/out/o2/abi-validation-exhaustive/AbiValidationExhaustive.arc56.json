{
    "name": "AbiValidationExhaustive",
    "structs": {
        "ARC4DynamicStruct": [
            {
                "name": "foo",
                "type": "uint64"
            },
            {
                "name": "bar",
                "type": "uint8"
            },
            {
                "name": "baz",
                "type": "string"
            }
        ],
        "ARC4StaticStruct": [
            {
                "name": "foo",
                "type": "uint64"
            },
            {
                "name": "bar",
                "type": "uint8"
            }
        ],
        "WithABool": [
            {
                "name": "foo",
                "type": "uint8"
            },
            {
                "name": "bar",
                "type": "byte[]"
            },
            {
                "name": "baz",
                "type": "bool"
            }
        ],
        "NativeDynamicStruct": [
            {
                "name": "foo",
                "type": "uint64"
            },
            {
                "name": "bar",
                "type": "uint8"
            },
            {
                "name": "baz",
                "type": "string"
            }
        ],
        "NativeStaticStruct": [
            {
                "name": "foo",
                "type": "uint64"
            },
            {
                "name": "bar",
                "type": "uint8"
            }
        ]
    },
    "methods": [
        {
            "name": "validate_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint8",
            "args": [
                {
                    "type": "uint8",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint512",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_ufixed64",
            "args": [
                {
                    "type": "ufixed64x2",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint8_arr",
            "args": [
                {
                    "type": "uint8[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint8_arr3",
            "args": [
                {
                    "type": "uint8[3]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_byte",
            "args": [
                {
                    "type": "byte",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_address",
            "args": [
                {
                    "type": "address",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_account",
            "args": [
                {
                    "type": "address",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bool_arr",
            "args": [
                {
                    "type": "bool[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bool_arr3",
            "args": [
                {
                    "type": "bool[3]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_tuple",
            "args": [
                {
                    "type": "(uint64,uint8)",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_tuple",
            "args": [
                {
                    "type": "(uint64,uint8,string)",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_struct",
            "args": [
                {
                    "type": "(uint64,uint8)",
                    "struct": "ARC4StaticStruct",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct",
            "args": [
                {
                    "type": "(uint64,uint8,string)",
                    "struct": "ARC4DynamicStruct",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_struct_arr",
            "args": [
                {
                    "type": "(uint64,uint8)[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_struct_arr3",
            "args": [
                {
                    "type": "(uint64,uint8)[3]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct_arr",
            "args": [
                {
                    "type": "(uint64,uint8,string)[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct_arr3",
            "args": [
                {
                    "type": "(uint64,uint8,string)[3]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct_with_a_bool",
            "args": [
                {
                    "type": "(uint8,byte[],bool)",
                    "struct": "WithABool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_static_struct",
            "args": [
                {
                    "type": "(uint64,uint8)",
                    "struct": "NativeStaticStruct",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_dynamic_struct",
            "args": [
                {
                    "type": "(uint64,uint8,string)",
                    "struct": "NativeDynamicStruct",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_static_struct_arr",
            "args": [
                {
                    "type": "(uint64,uint8)[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_static_struct_arr3",
            "args": [
                {
                    "type": "(uint64,uint8)[3]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_dynamic_struct_arr",
            "args": [
                {
                    "type": "(uint64,uint8,string)[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_dynamic_struct_arr3",
            "args": [
                {
                    "type": "(uint64,uint8,string)[3]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        21
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        935
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        266,
                        359,
                        533,
                        626
                    ],
                    "errorMessage": "invalid array encoding"
                },
                {
                    "pc": [
                        293,
                        321,
                        386,
                        425,
                        457,
                        495,
                        560,
                        588,
                        653,
                        692,
                        724,
                        762,
                        793,
                        833,
                        847,
                        889
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        729
                    ],
                    "errorMessage": "invalid number of bytes for ARC4DynamicStruct"
                },
                {
                    "pc": [
                        738
                    ],
                    "errorMessage": "invalid number of bytes for ARC4StaticStruct"
                },
                {
                    "pc": [
                        500
                    ],
                    "errorMessage": "invalid number of bytes for WithABool"
                },
                {
                    "pc": [
                        871
                    ],
                    "errorMessage": "invalid number of bytes for arc4.bool"
                },
                {
                    "pc": [
                        674
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<ARC4DynamicStruct>"
                },
                {
                    "pc": [
                        700
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<ARC4StaticStruct>"
                },
                {
                    "pc": [
                        805
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.bool>"
                },
                {
                    "pc": [
                        839,
                        853,
                        895
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        407
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeDynamicStruct>"
                },
                {
                    "pc": [
                        433
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeStaticStruct>"
                },
                {
                    "pc": [
                        580
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<ARC4DynamicStruct, 3>"
                },
                {
                    "pc": [
                        684
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<ARC4StaticStruct, 3>"
                },
                {
                    "pc": [
                        785
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.bool, 3>"
                },
                {
                    "pc": [
                        815,
                        825
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                },
                {
                    "pc": [
                        881
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 3>"
                },
                {
                    "pc": [
                        313
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeDynamicStruct, 3>"
                },
                {
                    "pc": [
                        417
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeStaticStruct, 3>"
                },
                {
                    "pc": [
                        767
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>"
                },
                {
                    "pc": [
                        776
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8>"
                },
                {
                    "pc": [
                        905
                    ],
                    "errorMessage": "invalid number of bytes for arc4.ufixed64x2"
                },
                {
                    "pc": [
                        915
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint512"
                },
                {
                    "pc": [
                        925
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        862
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint8"
                },
                {
                    "pc": [
                        462
                    ],
                    "errorMessage": "invalid number of bytes for tests/approvals/abi-validation-exhaustive.algo.ts::NativeDynamicStruct"
                },
                {
                    "pc": [
                        471
                    ],
                    "errorMessage": "invalid number of bytes for tests/approvals/abi-validation-exhaustive.algo.ts::NativeStaticStruct"
                },
                {
                    "pc": [
                        487
                    ],
                    "errorMessage": "invalid tail pointer at index 1 of (uint8,(len+uint8[]),bool1)"
                },
                {
                    "pc": [
                        289,
                        382,
                        449,
                        556,
                        649,
                        716,
                        754
                    ],
                    "errorMessage": "invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))"
                },
                {
                    "pc": [
                        367,
                        634
                    ],
                    "errorMessage": "invalid tail pointer for (len+(uint64,uint8,(len+utf8[]))[])"
                },
                {
                    "pc": [
                        274,
                        541
                    ],
                    "errorMessage": "invalid tail pointer for (uint64,uint8,(len+utf8[]))[3]"
                },
                {
                    "pc": [
                        284,
                        377,
                        444,
                        482,
                        551,
                        644,
                        711,
                        749
                    ],
                    "errorMessage": "invalid tuple encoding"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAQACCSNJgABHBDEbQQOOMRkURDEYRIIdBE11jFkEa7e5YwQYhSzWBFsu++EE7Mp6mASU2nPABCYjDeEEPsd/rATxEcB+BD9ot9EEZ0wOhwQJGrhIBPMon7gEkazuUQROZB6ZBGU248IEk1IsuAS/iIglBCKqkNYEbuy0nQQoOIgpBH6AS78EzibHLATsVhJvBMNnS1YE+3sFKAS6UZX9BONrMiQEV06UeTYaAI4dAqsCbQKhApcCiQJ/AnYCbQJfAlECRwI9AikCIAIXAfoB8QHUAcQBugFcAQwA7wDmAMkAuQCvAFEAAQA2GgFFBoEGRQIjRQNLAoEDDEEAM0sCSSQLSwdJTwJZSUsFSU4EEkRLARVSSRVLASVZSYELEkRMUiNZgQ0ICEUDIghFA0L/xUsFFUsCEkQiQzYaAUkjWUlFByQLRQNJFUUCVwIARQcjRQNLAksFDEEAM0sCSSQLSwhJTwJZSUsFSU4EEkRLARVSSRVLASVZSYELEkRMUiNZgQ0ICEUDIghFA0L/xUsBJAhLARJEIkM2GgEVgRsSRCJDNhoBSSNZJQskCEwVEkQiQzYaAUkVSwElWUmBCxJETwJMSwJSI1mBDQgSRCJDNhoBFSUSRCJDNhoBSRVLASJZSYEEEkRPAkxLAlIjWYEGCBJEIkM2GgFFBoEGRQIjRQNLAoEDDEEAM0sCSSQLSwdJTwJZSUsFSU4EEkRLARVSSRVLASVZSYELEkRMUiNZgQ0ICEUDIghFA0L/xUsFFUsCEkQiQzYaAUkjWUlFBiQLRQNJFUUCVwIARQcjRQNLAksEDEEAM0sCSSQLSwhJTwJZSUsFSU4EEkRLARVSSRVLASVZSYELEkRMUiNZgQ0ICEUDIghFA0L/xUsBJAhLARJEIkM2GgEVgRsSRCJDNhoBSSNZJQskCEwVEkQiQzYaAUkVSwElWUmBCxJETwJMSwJSI1mBDQgSRCJDNhoBFSUSRCJDNhoBSRVLASVZSYELEkRPAkxLAlIjWYENCBJEIkM2GgEVJRJEIkM2GgEVIhJEIkM2GgFJI1mBBwiBCAokCEwVEkQiQzYaARWBIBJEIkM2GgEVgSASRCJDNhoBSSNZJAhMFRJEIkM2GgFJI1kkCEwVEkQiQzYaARUiEkQiQzYaARUiEkQiQzYaARWBAxJEIkM2GgFJI1kkCEwVEkQiQzYaARWBCBJEIkM2GgEVgUASRCJDNhoBFYEIEkQiQzEZFDEYFBBEIkM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}
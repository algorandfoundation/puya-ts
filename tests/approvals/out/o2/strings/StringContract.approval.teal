#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock 0x151f7c75
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txn NumAppArgs
    bz main_bare_routing@7
    pushbytess 0x5049bd1b 0xdc882e2f // method "join(string,string)string", method "interpolate(string)string"
    txna ApplicationArgs 0
    match main_join_route@3 main_interpolate_route@4

main_after_if_else@11:
    err

main_interpolate_route@4:
    // tests/approvals/strings.algo.ts:8
    // interpolate(a: string): string {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/strings.algo.ts:9
    // return `You interpolated ${a}`
    pushbytes "You interpolated "
    swap
    concat
    // tests/approvals/strings.algo.ts:8
    // interpolate(a: string): string {
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_join_route@3:
    // tests/approvals/strings.algo.ts:4
    // join(a: string, b: string): string {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/approvals/strings.algo.ts:5
    // return a + b
    concat
    // tests/approvals/strings.algo.ts:4
    // join(a: string, b: string): string {
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@7:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return

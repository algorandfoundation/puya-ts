{
    "hints": {
        "testDo(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "testDoBreak(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "testDoContinue(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSA4IDAKICAgIGJ5dGVjYmxvY2sgMHgxNTFmN2M3NQogICAgcHVzaGJ5dGVzICIiCiAgICBkdXBuIDQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjQKICAgIC8vIGV4cG9ydCBjbGFzcyBEb0xvb3BzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUAxMAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQKICAgIHB1c2hieXRlc3MgMHgzOTIzOTc5MiAweGFjZTJlYjIxIDB4NzhlOGQ1MTYgLy8gbWV0aG9kICJ0ZXN0RG8odWludDY0KXVpbnQ2NCIsIG1ldGhvZCAidGVzdERvQnJlYWsodWludDY0LHVpbnQ2NCl1aW50NjQiLCBtZXRob2QgInRlc3REb0NvbnRpbnVlKHVpbnQ2NCx1aW50NjQpdWludDY0IgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl90ZXN0RG9fcm91dGVANCBtYWluX3Rlc3REb0JyZWFrX3JvdXRlQDUgbWFpbl90ZXN0RG9Db250aW51ZV9yb3V0ZUA2CiAgICBlcnIKCm1haW5fdGVzdERvQ29udGludWVfcm91dGVANjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjIzCiAgICAvLyB0ZXN0RG9Db250aW51ZShzdG9wOiB1aW50NjQsIG1vZDogdWludDY0KSB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBkdXAKICAgIGxlbgogICAgaW50Y18xIC8vIDgKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIHVpbnQ2NAogICAgYnRvaQogICAgYnVyeSAyCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICBkdXAKICAgIGxlbgogICAgaW50Y18xIC8vIDgKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIHVpbnQ2NAogICAgYnRvaQogICAgYnVyeSAzCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoyNAogICAgLy8gbGV0IGkgPSBVaW50NjQoMCkKICAgIGludGNfMiAvLyAwCiAgICBidXJ5IDQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjI1CiAgICAvLyBsZXQgdG90YWwgPSBVaW50NjQoMCkKICAgIGludGNfMiAvLyAwCiAgICBidXJ5IDEKCm1haW5fd2hpbGVfdG9wQDE0OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MjcKICAgIC8vIGlmIChpID4gMCAmJiBpICUgbW9kID09PSAwKSB7CiAgICBkaWcgMwogICAgYnogbWFpbl9hZnRlcl9pZl9lbHNlQDE3CiAgICBkaWcgMwogICAgZGlnIDMKICAgICUKICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTcKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjI4CiAgICAvLyB0b3RhbCArPSAyCiAgICBkdXAKICAgIHB1c2hpbnQgMiAvLyAyCiAgICArCiAgICBidXJ5IDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjI5CiAgICAvLyBpICs9IDEKICAgIGRpZyAzCiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgYnVyeSA0CgptYWluX2Jsb2NrQDE4OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MzQKICAgIC8vIH0gd2hpbGUgKGkgPCBzdG9wKQogICAgZGlnIDMKICAgIGRpZyAyCiAgICA8CiAgICBibnogbWFpbl93aGlsZV90b3BAMTQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjIzCiAgICAvLyB0ZXN0RG9Db250aW51ZShzdG9wOiB1aW50NjQsIG1vZDogdWludDY0KSB7CiAgICBkdXAKICAgIGl0b2IKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYWZ0ZXJfaWZfZWxzZUAxNzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjMyCiAgICAvLyB0b3RhbCArPSAxCiAgICBkdXAKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBidXJ5IDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjMzCiAgICAvLyBpICs9IDEKICAgIGRpZyAzCiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgYnVyeSA0CiAgICBiIG1haW5fYmxvY2tAMTgKCm1haW5fdGVzdERvQnJlYWtfcm91dGVANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjEyCiAgICAvLyB0ZXN0RG9CcmVhayhzdG9wOiB1aW50NjQsIGJyZWFrTW9kOiB1aW50NjQpIHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgdWludDY0CiAgICBidG9pCiAgICBidXJ5IDIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgdWludDY0CiAgICBidG9pCiAgICBidXJ5IDUKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjEzCiAgICAvLyBsZXQgdG90YWwgPSBVaW50NjQoMCkKICAgIGludGNfMiAvLyAwCiAgICBidXJ5IDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjE0CiAgICAvLyBsZXQgaSA9IFVpbnQ2NCgwKQogICAgaW50Y18yIC8vIDAKICAgIGJ1cnkgNAoKbWFpbl93aGlsZV90b3BAMjQ6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoxNgogICAgLy8gaWYgKGkgPiAwICYmIGkgJSBicmVha01vZCA9PT0gMCkgYnJlYWsKICAgIGRpZyAzCiAgICBieiBtYWluX2FmdGVyX2lmX2Vsc2VAMjcKICAgIGRpZyAzCiAgICBkaWcgNQogICAgJQogICAgYnogbWFpbl9ibG9ja0AzMAoKbWFpbl9hZnRlcl9pZl9lbHNlQDI3OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MTgKICAgIC8vIGkgKz0gMQogICAgZGlnIDMKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBkdXAKICAgIGJ1cnkgNQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MTkKICAgIC8vIHRvdGFsICs9IGkKICAgIGR1cDIKICAgICsKICAgIGJ1cnkgMgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MjAKICAgIC8vIH0gd2hpbGUgKGkgPCBzdG9wKQogICAgZGlnIDIKICAgIDwKICAgIGJueiBtYWluX3doaWxlX3RvcEAyNAoKbWFpbl9ibG9ja0AzMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjEyCiAgICAvLyB0ZXN0RG9CcmVhayhzdG9wOiB1aW50NjQsIGJyZWFrTW9kOiB1aW50NjQpIHsKICAgIGR1cAogICAgaXRvYgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl90ZXN0RG9fcm91dGVANDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjUKICAgIC8vIHRlc3REbyhzdG9wOiB1aW50NjQpIHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgdWludDY0CiAgICBidG9pCiAgICBidXJ5IDIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjYKICAgIC8vIGxldCBpID0gVWludDY0KDApCiAgICBpbnRjXzIgLy8gMAogICAgYnVyeSA0CgptYWluX3doaWxlX3RvcEAzMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjgKICAgIC8vIGkgKz0gMQogICAgZGlnIDMKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBkdXAKICAgIGJ1cnkgNQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6OQogICAgLy8gfSB3aGlsZSAoaSA8IHN0b3ApCiAgICBkaWcgMgogICAgPAogICAgYm56IG1haW5fd2hpbGVfdG9wQDMzCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czo1CiAgICAvLyB0ZXN0RG8oc3RvcDogdWludDY0KSB7CiAgICBkaWcgMwogICAgaXRvYgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVAMTA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czo0CiAgICAvLyBleHBvcnQgY2xhc3MgRG9Mb29wc0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgJiYKICAgIHJldHVybiAvLyBvbiBlcnJvcjogT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "DoLoopsAlgo",
        "methods": [
            {
                "name": "testDo",
                "args": [
                    {
                        "type": "uint64",
                        "name": "stop"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "testDoBreak",
                "args": [
                    {
                        "type": "uint64",
                        "name": "stop"
                    },
                    {
                        "type": "uint64",
                        "name": "breakMod"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "testDoContinue",
                "args": [
                    {
                        "type": "uint64",
                        "name": "stop"
                    },
                    {
                        "type": "uint64",
                        "name": "mod"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
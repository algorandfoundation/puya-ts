main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@8
    block@2: // abi_routing_L4
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "testDo(uint64)uint64" => block@3, method "testDoBreak(uint64,uint64)uint64" => block@4, method "testDoContinue(uint64,uint64)uint64" => block@5, * => block@12}
    block@3: // testDo_route_L5
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let stop#2: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        let i#10: uint64 = 0u
        goto block@36
    block@36: // while_top_L7
        let i#11: uint64 = φ(i#10 <- block@3, i#12 <- block@38)
        let i#12: uint64 = (+ i#11 1u)
        let tmp%1#3: bool = (< i#12 stop#2)
        goto tmp%1#3 ? block@38 : block@37
    block@37: // if_body_L7
        let aggregate%val_as_bytes%0#0: bytes[8] = (itob i#12)
        let tmp%10#0: bytes = (concat 0x151f7c75 aggregate%val_as_bytes%0#0)
        (log tmp%10#0)
        let tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#0: bool = 1u
        goto block@13
    block@38: // after_if_else_L7
        goto block@36
    block@4: // testDoBreak_route_L12
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: bool = (! tmp%11#0)
        (assert tmp%12#0) // OnCompletion is not NoOp
        let tmp%13#0: uint64 = (txn ApplicationID)
        (assert tmp%13#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%1#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let stop#1: uint64 = (btoi reinterpret_Encoded(uint64)%1#0)
        let reinterpret_Encoded(uint64)%2#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let breakMod#0: uint64 = (btoi reinterpret_Encoded(uint64)%2#0)
        let total#6: uint64 = 0u
        let i#6: uint64 = 0u
        goto block@27
    block@27: // while_top_L15
        let i#7: uint64 = φ(i#6 <- block@4, i#9 <- block@32)
        let total#8: uint64 = φ(total#6 <- block@4, total#9 <- block@32)
        goto i#7 ? block@28 : block@30
    block@28: // and_contd_L16
        let tmp%1#2: uint64 = (% i#7 breakMod#0)
        goto tmp%1#2 ? block@30 : block@29
    block@29: // if_body_L16
        goto block@33
    block@30: // after_if_else_L16
        let i#9: uint64 = (+ i#7 1u)
        let total#9: uint64 = (+ total#8 i#9)
        let tmp%5#1: bool = (< i#9 stop#1)
        goto tmp%5#1 ? block@32 : block@31
    block@31: // if_body_L15
        goto block@33
    block@32: // after_if_else_L15
        goto block@27
    block@33: // L15
        let total#10: uint64 = φ(total#8 <- block@29, total#9 <- block@31)
        let aggregate%val_as_bytes%1#0: bytes[8] = (itob total#10)
        let tmp%19#0: bytes = (concat 0x151f7c75 aggregate%val_as_bytes%1#0)
        (log tmp%19#0)
        let tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#1: bool = 1u
        goto block@13
    block@5: // testDoContinue_route_L23
        let tmp%20#0: uint64 = (txn OnCompletion)
        let tmp%21#0: bool = (! tmp%20#0)
        (assert tmp%21#0) // OnCompletion is not NoOp
        let tmp%22#0: uint64 = (txn ApplicationID)
        (assert tmp%22#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%3#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let stop#0: uint64 = (btoi reinterpret_Encoded(uint64)%3#0)
        let reinterpret_Encoded(uint64)%4#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let mod#0: uint64 = (btoi reinterpret_Encoded(uint64)%4#0)
        let i#0: uint64 = 0u
        let total#0: uint64 = 0u
        goto block@17
    block@17: // while_top_L26
        let i#1: uint64 = φ(i#0 <- block@5, i#5 <- block@23)
        let total#1: uint64 = φ(total#0 <- block@5, total#5 <- block@23)
        goto i#1 ? block@18 : block@20
    block@18: // and_contd_L27
        let tmp%1#1: uint64 = (% i#1 mod#0)
        goto tmp%1#1 ? block@20 : block@19
    block@19: // if_body_L27
        let total#2: uint64 = (+ total#1 2u)
        let i#2: uint64 = (+ i#1 1u)
        goto block@21
    block@20: // after_if_else_L27
        let total#4: uint64 = (+ total#1 1u)
        let i#4: uint64 = (+ i#1 1u)
        goto block@21
    block@21: // L26
        let i#5: uint64 = φ(i#2 <- block@19, i#4 <- block@20)
        let total#5: uint64 = φ(total#2 <- block@19, total#4 <- block@20)
        let tmp%7#1: bool = (< i#5 stop#0)
        goto tmp%7#1 ? block@23 : block@22
    block@22: // if_body_L26
        let aggregate%val_as_bytes%2#0: bytes[8] = (itob total#5)
        let tmp%28#0: bytes = (concat 0x151f7c75 aggregate%val_as_bytes%2#0)
        (log tmp%28#0)
        let tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#2: bool = 1u
        goto block@13
    block@23: // after_if_else_L26
        goto block@17
    block@8: // bare_routing_L4
        let tmp%29#0: uint64 = (txn OnCompletion)
        goto tmp%29#0 ? block@12 : block@9
    block@9: // __algots__.defaultCreate_L4
        let tmp%30#0: uint64 = (txn ApplicationID)
        let tmp%31#0: bool = (! tmp%30#0)
        (assert tmp%31#0) // can only call when creating
        let tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#3: bool = 1u
        goto block@13
    block@12: // after_if_else_L4
        let tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#4: bool = 0u
        goto block@13
    block@13: // after_inlined_tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router___L1
        let tmp%0#0: bool = φ(tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#0 <- block@37, tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#1 <- block@33, tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#2 <- block@22, tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#3 <- block@9, tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__%0#4 <- block@12)
        return tmp%0#0
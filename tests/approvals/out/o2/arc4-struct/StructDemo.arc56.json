{
    "name": "StructDemo",
    "structs": {
        "ObjectF8C529BB": [
            {
                "name": "x",
                "type": "uint64"
            },
            {
                "name": "y",
                "type": "uint64"
            }
        ],
        "PluginInfo": [
            {
                "name": "lastValidRound",
                "type": "uint64"
            },
            {
                "name": "cooldown",
                "type": "uint64"
            },
            {
                "name": "lastCalled",
                "type": "uint64"
            },
            {
                "name": "adminPrivileges",
                "type": "bool"
            },
            {
                "name": "methods",
                "type": "(byte[4],uint64,uint64)[]"
            }
        ],
        "Vector": [
            {
                "name": "x",
                "type": "uint64"
            },
            {
                "name": "y",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "testVectorCreationAndEquality",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "addVectors",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "v1"
                },
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "v2"
                }
            ],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "Vector"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mutateVector",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "v1"
                },
                {
                    "type": "uint64",
                    "name": "newX"
                },
                {
                    "type": "uint64",
                    "name": "newY"
                }
            ],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "Vector"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "implicitCastingAndSpreading",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "v1"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "toAndFromBytes",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "v1"
                }
            ],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "Vector"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "toNative",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "v1"
                }
            ],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "ObjectF8C529BB"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getPlugin",
            "args": [
                {
                    "type": "string",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,uint64,bool,(byte[4],uint64,uint64)[])",
                "struct": "PluginInfo"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getMain",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,uint64,bool,(byte[4],uint64,uint64)[])",
                "struct": "PluginInfo"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setLastCalled",
            "args": [
                {
                    "type": "string",
                    "name": "key"
                },
                {
                    "type": "uint64",
                    "name": "index"
                },
                {
                    "type": "uint64",
                    "name": "lastCalled"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setPlugin",
            "args": [
                {
                    "type": "string",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "plugin": {
                    "keyType": "AVMString",
                    "valueType": "PluginInfo",
                    "key": "bWFpbg=="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "plugins": {
                    "keyType": "AVMString",
                    "valueType": "PluginInfo",
                    "prefix": "cGx1Z2lucw=="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        224,
                        248
                    ],
                    "errorMessage": "Box must have value"
                },
                {
                    "pc": [
                        230,
                        254
                    ],
                    "errorMessage": "Last called not zero"
                },
                {
                    "pc": [
                        44
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        366
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAQgQACYEBBUffHUHcGx1Z2lucwRtYWluCAAAAAAAAAAAMRtBAT4xGRREMRhEggoEiTiN3QTvMi1tBAJFiAcEy4HeuAT3nWxGBJGRVUUEOBT5KgQAekywBE0hvKYEqbxh8TYaAI4KAOQAwwCvAJAAiACIAHAAYQBDAAEANhoBVwIAKUxQSbxIgDEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAABsAAaeAAN4AAAAAAAAAAQAAAAAAAAABvyJDNhoBVwIANhoCFzYaAylPA1BPAoEUC4EpCE8CuyJDKr5EKiQjuhdEKExQsCJDNhoBVwIAKUxQSb5ETCQjuhdEKExQsCJDKDYaAVCwIkM2GgFJVwAISwFXCAhQSVcACEsBVwgIUEsCTwISRBJDNhoDNhoBNhoCXABMXAgoTFCwIkM2GgE2GgJLASVbSwElWwgWTwIjW08CI1sIFlAoTFCwIkMrsCuwIkMxGRQxGBQQQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 9 8
    bytecblock "x"
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@11
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x9beff36a 0xa4e8d164 0x1960177c 0x25f323d0 // method "getMbr()uint64", method "bootstrap(pay)void", method "increaseXCount(uint64,uint64)void", method "getCounts(uint64)(uint64,uint8)"
    txna ApplicationArgs 0
    match main_getMbr_route@4 main_bootstrap_route@5 main_increaseXCount_route@6 main_getCounts_route@7
    err

main_getCounts_route@7:
    // tests/approvals/large-objects-in-state.algo.ts:33
    // getCounts(index: uint64) {
    txna ApplicationArgs 1
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    // tests/approvals/large-objects-in-state.algo.ts:34
    // return this.storage.value[index]
    intc_1 // 9
    *
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:34
    // return this.storage.value[index]
    swap
    intc_1 // 9
    box_extract
    // tests/approvals/large-objects-in-state.algo.ts:33
    // getCounts(index: uint64) {
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_increaseXCount_route@6:
    // tests/approvals/large-objects-in-state.algo.ts:29
    // increaseXCount(index: uint64, xCount: uint64) {
    txna ApplicationArgs 1
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    // tests/approvals/large-objects-in-state.algo.ts:30
    // this.storage.value[index].x += xCount
    swap
    intc_1 // 9
    *
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:30
    // this.storage.value[index].x += xCount
    dig 1
    intc_1 // 9
    box_extract
    pushint 0 // 0
    extract_uint64
    uncover 2
    +
    itob
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:30
    // this.storage.value[index].x += xCount
    cover 2
    box_replace
    // tests/approvals/large-objects-in-state.algo.ts:29
    // increaseXCount(index: uint64, xCount: uint64) {
    intc_0 // 1
    return

main_bootstrap_route@5:
    // tests/approvals/large-objects-in-state.algo.ts:21
    // bootstrap(pay: gtxn.PaymentTxn) {
    txn GroupIndex
    intc_0 // 1
    -
    dup
    gtxns TypeEnum
    intc_0 // pay
    ==
    assert // transaction type is pay
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    dup
    gtxns Amount
    // tests/approvals/large-objects-in-state.algo.ts:23
    // amount: BOX_MBR + ACCOUNT_BASE_MBR,
    pushint 2982900 // 2982900
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    ==
    swap
    gtxns Receiver
    // tests/approvals/large-objects-in-state.algo.ts:24
    // receiver: Global.currentApplicationAddress,
    global CurrentApplicationAddress
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    ==
    &&
    assert // assert target is match for conditions
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:26
    // this.storage.create()
    pushint 7200 // 7200
    box_create
    pop
    // tests/approvals/large-objects-in-state.algo.ts:21
    // bootstrap(pay: gtxn.PaymentTxn) {
    intc_0 // 1
    return

main_getMbr_route@4:
    // tests/approvals/large-objects-in-state.algo.ts:17
    // getMbr(): uint64 {
    pushbytes 0x151f7c7500000000002d83f4
    log
    intc_0 // 1
    return

main___algots__.defaultCreate@11:
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating

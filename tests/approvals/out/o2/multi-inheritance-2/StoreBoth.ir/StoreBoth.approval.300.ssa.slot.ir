main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@4 : block@11
    block@4: // abi_routing_L21
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "test(string,uint64)void" => block@6, method "setStore(string)void" => block@7, * => block@10}
    block@6: // test_route_L22
        let reinterpret_Encoded(len+utf8[])%0#1: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let theString#0: string = ((extract 2 0) reinterpret_Encoded(len+utf8[])%0#1)
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let theUint#0: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        (app_global_put "stringStore" theString#0)
        (app_global_put "uint64Store" theUint#0)
        exit 1u
    block@7: // setStore_route_L8
        let reinterpret_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let value#0: string = ((extract 2 0) reinterpret_Encoded(len+utf8[])%0#0)
        (app_global_put "stringStore" value#0)
        exit 1u
    block@10: // after_if_else_L21
        fail
    block@11: // __algots__.defaultCreate_L21
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u
#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock "stringStore"
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txn NumAppArgs
    bz main_bare_routing@9
    pushbytess 0xcf362d69 0x48f26e85 // method "test(string,uint64)void", method "setStore(string)void"
    txna ApplicationArgs 0
    match main_test_route@5 main_setStore_route@6

main_after_if_else@13:
    err

main_setStore_route@6:
    // tests/approvals/multi-inheritance-2.algo.ts:8
    // setStore(value: string) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/multi-inheritance-2.algo.ts:6
    // stringStore = GlobalState<string>()
    bytec_0 // "stringStore"
    // tests/approvals/multi-inheritance-2.algo.ts:9
    // this.stringStore.value = value
    swap
    app_global_put
    // tests/approvals/multi-inheritance-2.algo.ts:8
    // setStore(value: string) {
    pushint 1 // 1
    return

main_test_route@5:
    // tests/approvals/multi-inheritance-2.algo.ts:22
    // test(theString: string, theUint: uint64) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/approvals/multi-inheritance-2.algo.ts:6
    // stringStore = GlobalState<string>()
    bytec_0 // "stringStore"
    // tests/approvals/multi-inheritance-2.algo.ts:9
    // this.stringStore.value = value
    uncover 2
    app_global_put
    // tests/approvals/multi-inheritance-2.algo.ts:14
    // uint64Store = GlobalState<uint64>()
    pushbytes "uint64Store"
    // tests/approvals/multi-inheritance-2.algo.ts:17
    // this.uint64Store.value = value
    swap
    app_global_put
    // tests/approvals/multi-inheritance-2.algo.ts:22
    // test(theString: string, theUint: uint64) {
    pushint 1 // 1
    return

main_bare_routing@9:
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txn OnCompletion
    bnz main_after_if_else@13
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return

main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#0: bool = tests/approvals/arc4-method-selector.algo.ts::ContractTwo.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/arc4-method-selector.algo.ts::ContractTwo.__puya_arc4_router__() -> bool:
    block@0: // L13
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@6
    block@1: // abi_routing_L13
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "renamedSomeMethod()void" => block@2, method "test()byte[]" => block@3, * => block@4}
    block@2: // renamedSomeMethod_route_L14
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        tests/approvals/arc4-method-selector.algo.ts::ContractTwo.someMethod()
        return 1u
    block@3: // test_route_L17
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (== tmp%7#0 NoOp)
        (assert tmp%8#0) // OnCompletion is not NoOp
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (!= tmp%9#0 0u)
        (assert tmp%10#0) // can only call when not creating
        let to_encode%0#0: bytes = tests/approvals/arc4-method-selector.algo.ts::ContractTwo.test()
        let length%0#0: uint64 = (len to_encode%0#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 to_encode%0#0)
        let tmp%11#0: bytes = (concat 0x151f7c75 encoded_value%0#0)
        (log tmp%11#0)
        return 1u
    block@4: // switch_case_default_L13
        goto block@5
    block@5: // switch_case_next_L13
        goto block@10
    block@6: // bare_routing_L13
        let tmp%12#0: uint64 = (txn OnCompletion)
        switch tmp%12#0 {0u => block@7, * => block@8}
    block@7: // __algots__.defaultCreate_L13
        let tmp%13#0: uint64 = (txn ApplicationID)
        let tmp%14#0: bool = (== tmp%13#0 0u)
        (assert tmp%14#0) // can only call when creating
        tests/approvals/arc4-method-selector.algo.ts::ContractTwo.__algots__.defaultCreate()
        return 1u
    block@8: // switch_case_default_L13
        goto block@9
    block@9: // switch_case_next_L13
        goto block@10
    block@10: // after_if_else_L13
        return 0u

subroutine tests/approvals/arc4-method-selector.algo.ts::ContractTwo.someMethod() -> void:
    block@0: // L14
        return 

subroutine tests/approvals/arc4-method-selector.algo.ts::ContractTwo.test() -> bytes:
    block@0: // L17
        return method "someMethod()uint64"

subroutine tests/approvals/arc4-method-selector.algo.ts::ContractTwo.__algots__.defaultCreate() -> void:
    block@0: // L13
        return 
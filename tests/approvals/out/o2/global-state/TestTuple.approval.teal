#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock 0x000b000000000000007b80000568656c6c6f 0x000400070001610043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c880000162
    // tests/approvals/global-state.algo.ts:46
    // export class TestTuple extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x125477f5 // method "testTuple()void"
    txna ApplicationArgs 0
    match main_testTuple_route@3

main_after_if_else@10:
    // tests/approvals/global-state.algo.ts:46
    // export class TestTuple extends Contract {
    pushint 0 // 0
    return

main_testTuple_route@3:
    // tests/approvals/global-state.algo.ts:53
    // testTuple() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    pushbytes "t1"
    // tests/approvals/global-state.algo.ts:54
    // this.t1.value = ['hello', 123, true]
    bytec_0 // 0x000b000000000000007b80000568656c6c6f
    app_global_put
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    pushbytes "t2"
    // tests/approvals/global-state.algo.ts:59
    // this.t2.value = ['a', ['b', 456n, true]]
    bytec_1 // 0x000400070001610043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c880000162
    app_global_put
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    pushbytes "t3"
    bytec_0 // 0x000b000000000000007b80000568656c6c6f
    // tests/approvals/global-state.algo.ts:65
    // this.t3.value = { a: 'hello', b: 123, c: true }
    app_global_put
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    pushbytes "t4"
    // tests/approvals/global-state.algo.ts:70
    // this.t4.value = ['a', { a: 'b', b: 456n, c: true }]
    bytec_1 // 0x000400070001610043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c880000162
    app_global_put
    // tests/approvals/global-state.algo.ts:53
    // testTuple() {
    pushint 1 // 1
    return

main_bare_routing@6:
    // tests/approvals/global-state.algo.ts:46
    // export class TestTuple extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return

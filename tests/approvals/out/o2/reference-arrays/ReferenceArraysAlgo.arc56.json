{
    "name": "ReferenceArraysAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [
                {
                    "type": "uint64",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        187
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        41
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        128
                    ],
                    "errorMessage": "has length"
                },
                {
                    "pc": [
                        49
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        103
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgOCAxIDAKICAgIGJ5dGVjYmxvY2sgMHggMHgwNjgxMDEKICAgIGludGNfMiAvLyAwCiAgICBieXRlY18wIC8vICIiCiAgICBkdXAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6NAogICAgLy8gY2xhc3MgUmVmZXJlbmNlQXJyYXlzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA1CiAgICBwdXNoYnl0ZXMgMHgyYTMzNzc3MSAvLyBtZXRob2QgInRlc3QodWludDY0KXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVAMwogICAgZXJyCgptYWluX3Rlc3Rfcm91dGVAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6NQogICAgLy8gdGVzdChsZW5ndGg6IHVpbnQ2NCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBkdXAKICAgIGxlbgogICAgaW50Y18wIC8vIDgKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIGFyYzQudWludDY0CiAgICBidG9pCiAgICBidXJ5IDEKCm1haW5fd2hpbGVfdG9wQDEzOgogICAgcHVzaGludCAyMDEwIC8vIDIwMTAKICAgIGdsb2JhbCBPcGNvZGVCdWRnZXQKICAgID4KICAgIGJ6IG1haW5fYWZ0ZXJfd2hpbGVAMTgKICAgIGl0eG5fYmVnaW4KICAgIHB1c2hpbnQgNiAvLyBhcHBsCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KICAgIGl0eG5fZmllbGQgT25Db21wbGV0aW9uCiAgICBieXRlY18xIC8vIDB4MDY4MTAxCiAgICBpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQogICAgYnl0ZWNfMSAvLyAweDA2ODEwMQogICAgaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQogICAgaW50Y18yIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICBpdHhuX3N1Ym1pdAogICAgYiBtYWluX3doaWxlX3RvcEAxMwoKbWFpbl9hZnRlcl93aGlsZUAxODoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6NwogICAgLy8gY29uc3QgbWEgPSBuZXcgUmVmZXJlbmNlQXJyYXk8dWludDY0PigpCiAgICBieXRlY18wIC8vIDB4CiAgICBidXJ5IDMKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6OAogICAgLy8gZm9yIChsZXQgaTogdWludDY0ID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICBpbnRjXzIgLy8gMAogICAgYnVyeSAyCgptYWluX3doaWxlX3RvcEA5OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3JlZmVyZW5jZS1hcnJheXMuYWxnby50czo4CiAgICAvLyBmb3IgKGxldCBpOiB1aW50NjQgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgIGR1cDIKICAgIDwKICAgIGJ6IG1haW5fYWZ0ZXJfd2hpbGVAMTEKICAgIGRpZyAyCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvcmVmZXJlbmNlLWFycmF5cy5hbGdvLnRzOjkKICAgIC8vIG1hLnB1c2goaSkKICAgIGRpZyAyCiAgICBkdXAKICAgIGNvdmVyIDIKICAgIGl0b2IKICAgIGNvbmNhdCAvLyBvbiBlcnJvcjogbWF4IGFycmF5IGxlbmd0aCBleGNlZWRlZAogICAgYnVyeSA0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvcmVmZXJlbmNlLWFycmF5cy5hbGdvLnRzOjgKICAgIC8vIGZvciAobGV0IGk6IHVpbnQ2NCA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgaW50Y18xIC8vIDEKICAgICsKICAgIGJ1cnkgMgogICAgYiBtYWluX3doaWxlX3RvcEA5CgptYWluX2FmdGVyX3doaWxlQDExOgogICAgZGlnIDIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6MTIKICAgIC8vIGFzc2VydChtYS5sZW5ndGggPT09IGxlbmd0aCkKICAgIGR1cAogICAgbGVuCiAgICBkdXAKICAgIGludGNfMCAvLyA4CiAgICAvCiAgICBkaWcgMwogICAgZHVwCiAgICBjb3ZlciAyCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvcmVmZXJlbmNlLWFycmF5cy5hbGdvLnRzOjEzCiAgICAvLyBhc3NlcnQobGVuZ3RoLCAnaGFzIGxlbmd0aCcpCiAgICBkdXAKICAgIGFzc2VydCAvLyBoYXMgbGVuZ3RoCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvcmVmZXJlbmNlLWFycmF5cy5hbGdvLnRzOjE0CiAgICAvLyBjb25zdCBwb3BwZWQgPSBtYS5wb3AoKQogICAgZGlnIDEKICAgIGludGNfMCAvLyA4CiAgICAtCiAgICBkaWcgMwogICAgaW50Y18yIC8vIDAKICAgIGRpZyAyCiAgICBleHRyYWN0MwogICAgdW5jb3ZlciA0CiAgICB1bmNvdmVyIDIKICAgIHVuY292ZXIgNAogICAgc3Vic3RyaW5nMwogICAgYnRvaQogICAgZGlnIDEKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3JlZmVyZW5jZS1hcnJheXMuYWxnby50czoxNgogICAgLy8gYXNzZXJ0KHBvcHBlZCA9PT0gbGVuZ3RoIC0gMSkKICAgIGRpZyAyCiAgICBpbnRjXzEgLy8gMQogICAgLQogICAgPT0KICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3JlZmVyZW5jZS1hcnJheXMuYWxnby50czoxNwogICAgLy8gYXNzZXJ0KG1hLmF0KC0xKSA9PT0gbGVuZ3RoIC0gMikKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzAgLy8gOAogICAgLwogICAgaW50Y18xIC8vIDEKICAgIC0KICAgIGludGNfMCAvLyA4CiAgICAqCiAgICBkaWcgMQogICAgc3dhcAogICAgZXh0cmFjdF91aW50NjQKICAgIHVuY292ZXIgMgogICAgcHVzaGludCAyIC8vIDIKICAgIC0KICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6MTgKICAgIC8vIGFzc2VydChtYS5hdCgxKSA9PT0gMSkKICAgIGludGNfMCAvLyA4CiAgICBleHRyYWN0X3VpbnQ2NAogICAgaW50Y18xIC8vIDEKICAgID09CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvcmVmZXJlbmNlLWFycmF5cy5hbGdvLnRzOjUKICAgIC8vIHRlc3QobGVuZ3RoOiB1aW50NjQpIHsKICAgIHJldHVybgoKbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9yZWZlcmVuY2UtYXJyYXlzLmFsZ28udHM6NAogICAgLy8gY2xhc3MgUmVmZXJlbmNlQXJyYXlzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyADCAEAJgIAAwaBASQoSTEbQQCfgAQqM3dxNhoAjgEAAQAxGRQxGBBENhoBSRUiEkQXRQGB2g8yDA1BABaxgQayEIEFshkpsh4psh8ksgGzQv/hKEUDJEUCSgxBABJLAksCSU4CFlBFBCMIRQJC/+lLAkkVSSIKSwNJTgISRElESwEiCUsDJEsCWE8ETwJPBFIXSwFISwIjCRJESRUiCiMJIgtLAUxbTwKBAgkSRCJbIxJDMRkUMRgUEEQjQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}
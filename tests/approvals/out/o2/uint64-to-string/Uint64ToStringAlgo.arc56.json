{
    "name": "Uint64ToStringAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [
                {
                    "type": "uint64",
                    "name": "x"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        47
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        99
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        50
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAxMCAxMjMKICAgIGJ5dGVjYmxvY2sgIjEyMyIgMHgzMDMxMzIzMzM0MzUzNjM3MzgzOQogICAgLy8gdGVzdHMvYXBwcm92YWxzL3VpbnQ2NC10by1zdHJpbmcuYWxnby50czo0CiAgICAvLyBjbGFzcyBVaW50NjRUb1N0cmluZ0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4ZjY1ZjI0ZGYgLy8gbWV0aG9kICJ0ZXN0KHVpbnQ2NClzdHJpbmciCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVAMwoKbWFpbl9hZnRlcl9pZl9lbHNlQDEwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3VpbnQ2NC10by1zdHJpbmcuYWxnby50czo0CiAgICAvLyBjbGFzcyBVaW50NjRUb1N0cmluZ0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX3Rlc3Rfcm91dGVAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy91aW50NjQtdG8tc3RyaW5nLmFsZ28udHM6NQogICAgLy8gdGVzdCh4OiB1aW50NjQpOiBzdHJpbmcgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdWludDY0LXRvLXN0cmluZy5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIFVpbnQ2NFRvU3RyaW5nQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIC8vIHRlc3RzL2FwcHJvdmFscy91aW50NjQtdG8tc3RyaW5nLmFsZ28udHM6OAogICAgLy8gYXNzZXJ0KHkudG9TdHJpbmcoKSA9PT0gJzEyMycpCiAgICBpbnRjXzIgLy8gMTIzCiAgICBjYWxsc3ViIGl0b2EKICAgIGJ5dGVjXzAgLy8gIjEyMyIKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy91aW50NjQtdG8tc3RyaW5nLmFsZ28udHM6MTAKICAgIC8vIGFzc2VydChgJHt5fWAgPT09ICcxMjMnKQogICAgaW50Y18yIC8vIDEyMwogICAgY2FsbHN1YiBpdG9hCiAgICBieXRlY18wIC8vICIxMjMiCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdWludDY0LXRvLXN0cmluZy5hbGdvLnRzOjEyCiAgICAvLyByZXR1cm4geC50b1N0cmluZygpCiAgICBjYWxsc3ViIGl0b2EKICAgIC8vIHRlc3RzL2FwcHJvdmFscy91aW50NjQtdG8tc3RyaW5nLmFsZ28udHM6NQogICAgLy8gdGVzdCh4OiB1aW50NjQpOiBzdHJpbmcgewogICAgZHVwCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdANjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy91aW50NjQtdG8tc3RyaW5nLmFsZ28udHM6NAogICAgLy8gY2xhc3MgVWludDY0VG9TdHJpbmdBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBwdXlhLXRzOjppdG9hKGk6IHVpbnQ2NCkgLT4gYnl0ZXM6Cml0b2E6CiAgICBwcm90byAxIDEKICAgIGZyYW1lX2RpZyAtMQogICAgaW50Y18xIC8vIDEwCiAgICA8CiAgICBieiBpdG9hX2Vsc2VfYm9keUAyCiAgICBieXRlY18xIC8vIDB4MzAzMTMyMzMzNDM1MzYzNzM4MzkKICAgIGZyYW1lX2RpZyAtMQogICAgaW50Y18wIC8vIDEKICAgIGV4dHJhY3QzCiAgICByZXRzdWIKCml0b2FfZWxzZV9ib2R5QDI6CiAgICBmcmFtZV9kaWcgLTEKICAgIGludGNfMSAvLyAxMAogICAgLwogICAgY2FsbHN1YiBpdG9hCiAgICBmcmFtZV9kaWcgLTEKICAgIGludGNfMSAvLyAxMAogICAgJQogICAgYnl0ZWNfMSAvLyAweDMwMzEzMjMzMzQzNTM2MzczODM5CiAgICBzd2FwCiAgICBpbnRjXzAgLy8gMQogICAgZXh0cmFjdDMKICAgIGNvbmNhdAogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAQp7JgIDMTIzCjAxMjM0NTY3ODkxG0EAP4AE9l8k3zYaAI4BAAOBAEMxGRREMRhENhoBFySIACsoEkQkiAAkKBJEiAAeSRUWVwYCTFCABBUffHVMULAiQzEZQP/JMRgURCJDigEBi/8jDEEABimL/yJYiYv/IwqI/+mL/yMYKUwiWFCJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
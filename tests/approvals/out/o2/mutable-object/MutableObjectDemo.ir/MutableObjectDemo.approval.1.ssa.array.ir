main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@12
    block@2: // abi_routing_L10
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "testVectorCreationAndEquality()void" => block@3, method "addVectors((uint64,uint64),(uint64,uint64))(uint64,uint64)" => block@4, method "mutateVector((uint64,uint64),uint64,uint64)(uint64,uint64)" => block@5, method "implicitCastingAndSpreading((uint64,uint64))void" => block@6, method "getPlugin(string)(uint64,uint64,uint64,bool)" => block@7, method "getMain()(uint64,uint64,uint64,bool)" => block@8, method "setPlugin(string)void" => block@9, * => block@16}
    block@3: // testVectorCreationAndEquality_route_L11
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let val_as_bytes%0#3: bytes[8] = (itob 0u)
        (log val_as_bytes%0#3)
        (log val_as_bytes%0#3)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#0: bool = 1u
        goto block@17
    block@4: // addVectors_route_L19
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        (assert tmp%8#0) // OnCompletion is not NoOp
        let tmp%9#0: uint64 = (txn ApplicationID)
        (assert tmp%9#0) // can only call when not creating
        let v1#4: bytes[16] = (txna ApplicationArgs 1)
        let v2#1: bytes[16] = (txna ApplicationArgs 2)
        let tmp%0#5: uint64 = (extract_uint64 v1#4 0u)
        let tmp%1#4: uint64 = (extract_uint64 v2#1 0u)
        let tmp%2#3: uint64 = (+ tmp%0#5 tmp%1#4)
        let tmp%3#1: uint64 = (extract_uint64 v1#4 8u)
        let tmp%4#2: uint64 = (extract_uint64 v2#1 8u)
        let tmp%5#1: uint64 = (+ tmp%3#1 tmp%4#2)
        let val_as_bytes%0#2: bytes[8] = (itob tmp%2#3)
        let val_as_bytes%1#2: bytes[8] = (itob tmp%5#1)
        let encoded_tuple_buffer%2#1: bytes = (concat val_as_bytes%0#2 val_as_bytes%1#2)
        let tmp%12#0: bytes = (concat 0x151f7c75 encoded_tuple_buffer%2#1)
        (log tmp%12#0)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#1: bool = 1u
        goto block@17
    block@5: // mutateVector_route_L26
        let tmp%13#0: uint64 = (txn OnCompletion)
        let tmp%14#0: bool = (! tmp%13#0)
        (assert tmp%14#0) // OnCompletion is not NoOp
        let tmp%15#0: uint64 = (txn ApplicationID)
        (assert tmp%15#0) // can only call when not creating
        let v1#1: bytes[16] = (txna ApplicationArgs 1)
        let reinterpret_bytes[8]%0#0: bytes[8] = (txna ApplicationArgs 2)
        let newX#0: uint64 = (btoi reinterpret_bytes[8]%0#0)
        let reinterpret_bytes[8]%1#0: bytes[8] = (txna ApplicationArgs 3)
        let newY#0: uint64 = (btoi reinterpret_bytes[8]%1#0)
        let val_as_bytes%0#1: bytes[8] = (itob newX#0)
        let v1#2: bytes[16] = ((replace2 0) v1#1 val_as_bytes%0#1)
        let val_as_bytes%1#1: bytes[8] = (itob newY#0)
        let v1#3: bytes[16] = ((replace2 8) v1#2 val_as_bytes%1#1)
        let tmp%20#0: bytes = (concat 0x151f7c75 v1#3)
        (log tmp%20#0)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#2: bool = 1u
        goto block@17
    block@6: // implicitCastingAndSpreading_route_L32
        let tmp%21#0: uint64 = (txn OnCompletion)
        let tmp%22#0: bool = (! tmp%21#0)
        (assert tmp%22#0) // OnCompletion is not NoOp
        let tmp%23#0: uint64 = (txn ApplicationID)
        (assert tmp%23#0) // can only call when not creating
        let v1#0: bytes[16] = (txna ApplicationArgs 1)
        let item0%1#0: uint64 = (extract_uint64 v1#0 0u)
        let item1%1#0: uint64 = (extract_uint64 v1#0 8u)
        let val_as_bytes%0#0: bytes[8] = (itob item0%1#0)
        let val_as_bytes%1#0: bytes[8] = (itob item1%1#0)
        let v2#0: bytes[16] = (concat val_as_bytes%0#0 val_as_bytes%1#0)
        let tmp%0#4: uint64 = (extract_uint64 v2#0 0u)
        let tmp%1#3: uint64 = (extract_uint64 v2#0 8u)
        let val_as_bytes%2#0: bytes[8] = (itob tmp%0#4)
        let val_as_bytes%3#0: bytes[8] = (itob tmp%1#3)
        let v3#0: bytes[16] = (concat val_as_bytes%2#0 val_as_bytes%3#0)
        let tmp%4#1: bool = (== item0%1#0 tmp%0#4)
        (assert tmp%4#1)
        let tmp%7#1: bool = (== item1%1#0 tmp%1#3)
        (assert tmp%7#1)
        let tmp%8#1: uint64 = (extract_uint64 v3#0 0u)
        let tmp%10#1: bool = (== tmp%8#1 item0%1#0)
        (assert tmp%10#1)
        let tmp%11#1: uint64 = (extract_uint64 v3#0 8u)
        let tmp%13#1: bool = (== tmp%11#1 item1%1#0)
        (assert tmp%13#1)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#3: bool = 1u
        goto block@17
    block@7: // getPlugin_route_L45
        let tmp%25#0: uint64 = (txn OnCompletion)
        let tmp%26#0: bool = (! tmp%25#0)
        (assert tmp%26#0) // OnCompletion is not NoOp
        let tmp%27#0: uint64 = (txn ApplicationID)
        (assert tmp%27#0) // can only call when not creating
        let tmp%29#0: bytes = (txna ApplicationArgs 1)
        let key#1: bytes = ((extract 2 0) tmp%29#0)
        let box_prefixed_key%0#1: bytes = (concat "plugins" key#1)
        let (value#1: bytes[25], maybe_exists%0#1: bool) = (box_get box_prefixed_key%0#1)
        (assert maybe_exists%0#1) // Box must have value
        let tmp%1#2: uint64 = (extract_uint64 value#1 16u)
        (assert tmp%1#2) // Last called not zero
        let tmp%32#0: bytes = (concat 0x151f7c75 value#1)
        (log tmp%32#0)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#4: bool = 1u
        goto block@17
    block@8: // getMain_route_L51
        let tmp%33#0: uint64 = (txn OnCompletion)
        let tmp%34#0: bool = (! tmp%33#0)
        (assert tmp%34#0) // OnCompletion is not NoOp
        let tmp%35#0: uint64 = (txn ApplicationID)
        (assert tmp%35#0) // can only call when not creating
        let (value#0: bytes[25], maybe_exists%0#0: bool) = (box_get "main")
        (assert maybe_exists%0#0) // Box must have value
        let tmp%1#1: uint64 = (extract_uint64 value#0 16u)
        (assert tmp%1#1) // Last called not zero
        let tmp%38#0: bytes = (concat 0x151f7c75 value#0)
        (log tmp%38#0)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#5: bool = 1u
        goto block@17
    block@9: // setPlugin_route_L61
        let tmp%39#0: uint64 = (txn OnCompletion)
        let tmp%40#0: bool = (! tmp%39#0)
        (assert tmp%40#0) // OnCompletion is not NoOp
        let tmp%41#0: uint64 = (txn ApplicationID)
        (assert tmp%41#0) // can only call when not creating
        let tmp%43#0: bytes = (txna ApplicationArgs 1)
        let key#0: bytes = ((extract 2 0) tmp%43#0)
        let box_prefixed_key%0#0: bytes = (concat "plugins" key#0)
        (box_put box_prefixed_key%0#0 0x00000000000000010000000000000000000000000000000000)
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#6: bool = 1u
        goto block@17
    block@12: // bare_routing_L10
        let tmp%45#0: uint64 = (txn OnCompletion)
        goto tmp%45#0 ? block@16 : block@13
    block@13: // __algots__.defaultCreate_L10
        let tmp%46#0: uint64 = (txn ApplicationID)
        let tmp%47#0: bool = (! tmp%46#0)
        (assert tmp%47#0) // can only call when creating
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#7: bool = 1u
        goto block@17
    block@16: // after_if_else_L10
        let tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#8: bool = 0u
        goto block@17
    block@17: // after_inlined_tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#0 <- block@3, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#1 <- block@4, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#2 <- block@5, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#3 <- block@6, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#4 <- block@7, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#5 <- block@8, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#6 <- block@9, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#7 <- block@13, tests/approvals/mutable-object.algo.ts::MutableObjectDemo.__puya_arc4_router__%0#8 <- block@16)
        return tmp%0#0
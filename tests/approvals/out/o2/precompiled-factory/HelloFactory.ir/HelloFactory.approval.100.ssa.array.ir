main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@11
    block@2: // abi_routing_L6
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "test_compile_contract()void" => block@4, method "test_compile_contract_with_template()void" => block@5, method "test_compile_contract_with_template_and_custom_prefix()void" => block@6, method "test_compile_contract_large()void" => block@7, * => block@10}
    block@4: // test_compile_contract_route_L7
        itxn_begin
        let aggregate%length%0#0: uint64 = (len "hello")
        let aggregate%as_bytes%0#0: bytes[8] = (itob aggregate%length%0#0)
        let aggregate%length_uint16%0#0: bytes = ((extract 6 2) aggregate%as_bytes%0#0)
        let aggregate%encoded_value%0#0: bytes = (concat aggregate%length_uint16%0#0 "hello")
        let aggregate%as_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = aggregate%encoded_value%0#0
        let tmp%0#2: Encoded(len+utf8[]) = aggregate%as_Encoded(len+utf8[])%0#0
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyAEAAECBCYDCGdyZWV0aW5nASAEFR98dTEYQAAEKIAAZ4ICBCQ3jTwEoOgYcjYaAI4CAMkAvzEZFEQxGEEAk4ICBNCiggAEUYC6IDYaAI4CAFgAAQA2GgFJFUsBIllJJRJESwJLAUsDUiJZgQYISwMkWUlLAhJESwRLAUsFUkkiWSQITwMITwQSRCIoZUQpUE4ETgRSVwIAUExXAgBQSRUWVwYCTFAqTFCwI0M2GgFJIlkkCEsBFRJEVwIAIihlRClQTFBJFRZXBgJMUCpMULAjQ4AEAJIlrjYaAI4BAAEANhoBSSJZJAhLARUSRFcCAChMZyNDMRklEjEYEEQjQzEZgQUSMRgQRCND)
        ((itxn_field ApplicationArgs) method "helloCreate(string)void")
        ((itxn_field ApplicationArgs) tmp%0#2)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#2: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let aggregate%length%1#0: uint64 = (len "world")
        let aggregate%as_bytes%1#0: bytes[8] = (itob aggregate%length%1#0)
        let aggregate%length_uint16%1#0: bytes = ((extract 6 2) aggregate%as_bytes%1#0)
        let aggregate%encoded_value%1#0: bytes = (concat aggregate%length_uint16%1#0 "world")
        let aggregate%as_Encoded(len+utf8[])%1#0: Encoded(len+utf8[]) = aggregate%encoded_value%1#0
        let tmp%2#4: Encoded(len+utf8[]) = aggregate%as_Encoded(len+utf8[])%1#0
        ((itxn_field ApplicationID) helloApp#2)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) tmp%2#4)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#3: bytes = (itxn LastLog)
        let tmp%3#4: bytes = ((extract 4 0) txn.LastLog#3)
        let tmp%4#3: bytes = ((extract 0 4) txn.LastLog#3)
        let tmp%5#2: bool = (== tmp%4#3 0x151f7c75)
        (assert tmp%5#2) // Bytes has valid prefix
        let result#3: string = ((extract 2 0) tmp%3#4)
        let tmp%7#1: bool = (== result#3 "hello world")
        (assert tmp%7#1)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) helloApp#2)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@5: // test_compile_contract_with_template_route_L38
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyAEAAECBCYECGdyZWV0aW5nASAEFR98dQNoZXkxGEAAAygrZ4ICBCQ3jTwEoOgYcjYaAI4CALYArDEZFEQxGEEAk4ICBNCiggAEUYC6IDYaAI4CAFgAAQA2GgFJFUsBIllJJRJESwJLAUsDUiJZgQYISwMkWUlLAhJESwRLAUsFUkkiWSQITwMITwQSRCIoZUQpUE4ETgRSVwIAUExXAgBQSRUWVwYCTFAqTFCwI0M2GgFJIlkkCEsBFRJEVwIAIihlRClQTFBJFRZXBgJMUCpMULAjQ4AETFxhujYaAI4BAAEAI0MxGSUSMRgQRCNDMRmBBRIxGBBEI0M=)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#1: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let aggregate%length%2#0: uint64 = (len "world")
        let aggregate%as_bytes%2#0: bytes[8] = (itob aggregate%length%2#0)
        let aggregate%length_uint16%2#0: bytes = ((extract 6 2) aggregate%as_bytes%2#0)
        let aggregate%encoded_value%2#0: bytes = (concat aggregate%length_uint16%2#0 "world")
        let aggregate%as_Encoded(len+utf8[])%2#0: Encoded(len+utf8[]) = aggregate%encoded_value%2#0
        let tmp%1#3: Encoded(len+utf8[]) = aggregate%as_Encoded(len+utf8[])%2#0
        ((itxn_field ApplicationID) helloApp#1)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) tmp%1#3)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#2: bytes = (itxn LastLog)
        let tmp%2#3: bytes = ((extract 4 0) txn.LastLog#2)
        let tmp%3#3: bytes = ((extract 0 4) txn.LastLog#2)
        let tmp%4#2: bool = (== tmp%3#3 0x151f7c75)
        (assert tmp%4#2) // Bytes has valid prefix
        let result#2: string = ((extract 2 0) tmp%2#3)
        let tmp%6#2: bool = (== result#2 "hey world")
        (assert tmp%6#2)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) helloApp#1)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@6: // test_compile_contract_with_template_and_custom_prefix_route_L69
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyAEAAECBCYECGdyZWV0aW5nASAEFR98dQdib25qb3VyMRhAAAMoK2eCAgQkN408BKDoGHI2GgCOAgC2AKwxGRREMRhBAJOCAgTQooIABFGAuiA2GgCOAgBYAAEANhoBSRVLASJZSSUSREsCSwFLA1IiWYEGCEsDJFlJSwISREsESwFLBVJJIlkkCE8DCE8EEkQiKGVEKVBOBE4EUlcCAFBMVwIAUEkVFlcGAkxQKkxQsCNDNhoBSSJZJAhLARUSRFcCACIoZUQpUExQSRUWVwYCTFAqTFCwI0OABExcYbo2GgCOAQABACNDMRklEjEYEEQjQzEZgQUSMRgQRCND)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let aggregate%length%3#0: uint64 = (len "world")
        let aggregate%as_bytes%3#0: bytes[8] = (itob aggregate%length%3#0)
        let aggregate%length_uint16%3#0: bytes = ((extract 6 2) aggregate%as_bytes%3#0)
        let aggregate%encoded_value%3#0: bytes = (concat aggregate%length_uint16%3#0 "world")
        let aggregate%as_Encoded(len+utf8[])%3#0: Encoded(len+utf8[]) = aggregate%encoded_value%3#0
        let tmp%1#2: Encoded(len+utf8[]) = aggregate%as_Encoded(len+utf8[])%3#0
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) tmp%1#2)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#1: bytes = (itxn LastLog)
        let tmp%2#2: bytes = ((extract 4 0) txn.LastLog#1)
        let tmp%3#2: bytes = ((extract 0 4) txn.LastLog#1)
        let tmp%4#1: bool = (== tmp%3#2 0x151f7c75)
        (assert tmp%4#1) // Bytes has valid prefix
        let result#1: string = ((extract 2 0) tmp%2#2)
        let tmp%6#1: bool = (== result#1 "bonjour world")
        (assert tmp%6#1)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@7: // test_compile_contract_large_route_L100
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CzEbQQA7ggIEJDeNPAQCvzDPNhoAjgIAGgABADEZFDEYEESBgCCvFRaABBUffHVMULCBAUMxGYEFEjEYEESBAUMxGRQxGBQQRIEBQw==)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let largeApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) largeApp#0)
        ((itxn_field ApplicationArgs) method "getBigBytesLength()uint64")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%1#1: bytes = ((extract 4 0) txn.LastLog#0)
        let tmp%2#1: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%3#1: bool = (== tmp%2#1 0x151f7c75)
        (assert tmp%3#1) // Bytes has valid prefix
        let result#0: uint64 = (btoi tmp%1#1)
        let tmp%5#1: bool = (== result#0 4096u)
        (assert tmp%5#1)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) largeApp#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@10: // after_if_else_L6
        fail
    block@11: // __algots__.defaultCreate_L6
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u
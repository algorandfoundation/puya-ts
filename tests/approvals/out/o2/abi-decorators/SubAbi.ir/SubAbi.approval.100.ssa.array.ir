main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@6
    block@2: // abi_routing_L43
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "someMethod()string" => block@3, * => block@10}
    block@3: // someMethod_route_L44
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 OptIn)
        (assert tmp%4#0) // OnCompletion is not OptIn
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let aggregate%length%0#0: uint64 = (len "sub-abi:optin")
        let aggregate%as_bytes%0#0: bytes[8] = (itob aggregate%length%0#0)
        let aggregate%length_uint16%0#0: bytes = ((extract 6 2) aggregate%as_bytes%0#0)
        let aggregate%encoded_value%0#0: bytes = (concat aggregate%length_uint16%0#0 "sub-abi:optin")
        let aggregate%as_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = aggregate%encoded_value%0#0
        let tmp%8#0: Encoded(len+utf8[]) = aggregate%as_Encoded(len+utf8[])%0#0
        let tmp%9#0: bytes = (concat 0x151f7c75 tmp%8#0)
        (log tmp%9#0)
        let tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__%0#0: bool = 1u
        goto block@11
    block@6: // bare_routing_L43
        let tmp%10#0: uint64 = (txn OnCompletion)
        goto tmp%10#0 ? block@10 : block@7
    block@7: // __algots__.defaultCreate_L43
        let tmp%11#0: uint64 = (txn ApplicationID)
        let tmp%12#0: bool = (! tmp%11#0)
        (assert tmp%12#0) // can only call when creating
        let tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__%0#1: bool = 1u
        goto block@11
    block@10: // after_if_else_L43
        let tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__%0#2: bool = 0u
        goto block@11
    block@11: // after_inlined_tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__%0#0 <- block@3, tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__%0#1 <- block@7, tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__%0#2 <- block@10)
        return tmp%0#0
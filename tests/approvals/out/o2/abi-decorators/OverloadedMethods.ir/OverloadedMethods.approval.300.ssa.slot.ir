main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@7
    block@2: // abi_routing_L24
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "doThing(uint64)uint64" => block@3, method "doThing(uint64,uint64)uint64" => block@4, * => block@11}
    block@3: // doThing_route_L25
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let tmp%10#0: bytes = (concat 0x151f7c75 reinterpret_Encoded(uint64)%0#0)
        (log tmp%10#0)
        let tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#0: bool = 1u
        goto block@12
    block@4: // doThing_route_L30
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: bool = (! tmp%11#0)
        (assert tmp%12#0) // OnCompletion is not NoOp
        let tmp%13#0: uint64 = (txn ApplicationID)
        (assert tmp%13#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%1#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let x#0: uint64 = (btoi reinterpret_Encoded(uint64)%1#0)
        let reinterpret_Encoded(uint64)%2#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let y#0: uint64 = (btoi reinterpret_Encoded(uint64)%2#0)
        let tmp%0#2: uint64 = (* x#0 y#0)
        let aggregate%val_as_bytes%0#0: bytes[8] = (itob tmp%0#2)
        let tmp%19#0: bytes = (concat 0x151f7c75 aggregate%val_as_bytes%0#0)
        (log tmp%19#0)
        let tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#1: bool = 1u
        goto block@12
    block@7: // bare_routing_L24
        let tmp%20#0: uint64 = (txn OnCompletion)
        goto tmp%20#0 ? block@11 : block@8
    block@8: // __algots__.defaultCreate_L24
        let tmp%21#0: uint64 = (txn ApplicationID)
        let tmp%22#0: bool = (! tmp%21#0)
        (assert tmp%22#0) // can only call when creating
        let tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#2: bool = 1u
        goto block@12
    block@11: // after_if_else_L24
        let tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#3: bool = 0u
        goto block@12
    block@12: // after_inlined_tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#0 <- block@3, tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#1 <- block@4, tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#2 <- block@8, tests/approvals/abi-decorators.algo.ts::OverloadedMethods.__puya_arc4_router__%0#3 <- block@11)
        return tmp%0#0
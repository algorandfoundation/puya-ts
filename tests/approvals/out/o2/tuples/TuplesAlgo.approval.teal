#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // tests/approvals/tuples.algo.ts:6
    // class TuplesAlgo extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x37e7ce87 // method "test(uint64,uint64,uint64)void"
    txna ApplicationArgs 0
    match main_test_route@3

main_after_if_else@10:
    // tests/approvals/tuples.algo.ts:6
    // class TuplesAlgo extends Contract {
    pushint 0 // 0
    return

main_test_route@3:
    // tests/approvals/tuples.algo.ts:7
    // test(a: UintN64, b: UintN64, c: UintN64) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushint 1 // 1
    return

main_bare_routing@6:
    // tests/approvals/tuples.algo.ts:6
    // class TuplesAlgo extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return

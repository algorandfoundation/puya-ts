main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let reinterpret_bool%0#0: bool = (txn ApplicationID)
        goto reinterpret_bool%0#0 ? block@2 : block@1
    block@1: // if_body_L1
        (app_global_put "stateCommon" 123u)
        (app_global_put "stateOne" 45u)
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@4 : block@10
    block@4: // abi_routing_L22
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "methodOne()string" => block@5, method "methodCommon()string" => block@6, method "b2CantOverride()string" => block@7, * => block@14}
    block@5: // methodOne_route_L24
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let array%length%0#1: uint64 = (len "base-one")
        let array%as_bytes%0#1: bytes[8] = (itob array%length%0#1)
        let array%length_uint16%0#1: bytes = ((extract 6 2) array%as_bytes%0#1)
        let array%encoded_value%0#1: bytes = (concat array%length_uint16%0#1 "base-one")
        let array%as_Encoded(len+utf8[])%0#1: Encoded(len+utf8[]) = array%encoded_value%0#1
        let tmp%8#0: Encoded(len+utf8[]) = array%as_Encoded(len+utf8[])%0#1
        let tmp%9#0: bytes = (concat 0x151f7c75 tmp%8#0)
        (log tmp%9#0)
        let tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#0: bool = 1u
        goto block@15
    block@6: // methodCommon_route_L13
        let tmp%10#0: uint64 = (txn OnCompletion)
        let tmp%11#0: bool = (! tmp%10#0)
        (assert tmp%11#0) // OnCompletion is not NoOp
        let tmp%12#0: uint64 = (txn ApplicationID)
        (assert tmp%12#0) // can only call when not creating
        let array%length%1#1: uint64 = (len "common")
        let array%as_bytes%1#1: bytes[8] = (itob array%length%1#1)
        let array%length_uint16%1#1: bytes = ((extract 6 2) array%as_bytes%1#1)
        let array%encoded_value%1#1: bytes = (concat array%length_uint16%1#1 "common")
        let array%as_Encoded(len+utf8[])%1#1: Encoded(len+utf8[]) = array%encoded_value%1#1
        let tmp%15#0: Encoded(len+utf8[]) = array%as_Encoded(len+utf8[])%1#1
        let tmp%16#0: bytes = (concat 0x151f7c75 tmp%15#0)
        (log tmp%16#0)
        let tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#1: bool = 1u
        goto block@15
    block@7: // b2CantOverride_route_L17
        let tmp%17#0: uint64 = (txn OnCompletion)
        let tmp%18#0: bool = (! tmp%17#0)
        (assert tmp%18#0) // OnCompletion is not NoOp
        let tmp%19#0: uint64 = (txn ApplicationID)
        (assert tmp%19#0) // can only call when not creating
        let array%length%2#1: uint64 = (len "common")
        let array%as_bytes%2#1: bytes[8] = (itob array%length%2#1)
        let array%length_uint16%2#1: bytes = ((extract 6 2) array%as_bytes%2#1)
        let array%encoded_value%2#1: bytes = (concat array%length_uint16%2#1 "common")
        let array%as_Encoded(len+utf8[])%2#1: Encoded(len+utf8[]) = array%encoded_value%2#1
        let tmp%22#0: Encoded(len+utf8[]) = array%as_Encoded(len+utf8[])%2#1
        let tmp%23#0: bytes = (concat 0x151f7c75 tmp%22#0)
        (log tmp%23#0)
        let tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#2: bool = 1u
        goto block@15
    block@10: // bare_routing_L22
        let tmp%24#0: uint64 = (txn OnCompletion)
        goto tmp%24#0 ? block@14 : block@11
    block@11: // __algots__.defaultCreate_L22
        let tmp%25#0: uint64 = (txn ApplicationID)
        let tmp%26#0: bool = (! tmp%25#0)
        (assert tmp%26#0) // can only call when creating
        let tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#3: bool = 1u
        goto block@15
    block@14: // after_if_else_L22
        let tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#4: bool = 0u
        goto block@15
    block@15: // after_inlined_tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#0 <- block@5, tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#1 <- block@6, tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#2 <- block@7, tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#3 <- block@11, tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__%0#4 <- block@14)
        return tmp%0#0
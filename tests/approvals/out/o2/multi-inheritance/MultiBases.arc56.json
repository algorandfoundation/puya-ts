{
    "name": "MultiBases",
    "structs": {},
    "methods": [
        {
            "name": "methodMulti",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodCallsSuper",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "callB2CantOverride",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "callB2Common",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodOne",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodCommon",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "b2CantOverride",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodTwo",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "stateMulti": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RhdGVNdWx0aQ=="
                },
                "stateOne": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "c3RhdGVPbmU="
                },
                "stateCommon": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "c3RhdGVDb21tb24="
                },
                "stateTwo": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RhdGVUd28="
                }
            },
            "local": {
                "name": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "bmFtZQ=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        182,
                        193,
                        204,
                        215,
                        241,
                        252,
                        263,
                        274
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        308
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        185,
                        196,
                        207,
                        218,
                        244,
                        255,
                        266,
                        277
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAxMjMKICAgIGJ5dGVjYmxvY2sgMHgxNTFmN2M3NTAwMDg2MjYxNzM2NTJkNzQ3NzZmIDB4MTUxZjdjNzUwMDA2NjM2ZjZkNmQ2ZjZlICJzdGF0ZUNvbW1vbiIKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjExCiAgICAvLyBzdGF0ZUNvbW1vbiA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oeyBpbml0aWFsVmFsdWU6IDEyMyB9KQogICAgYnl0ZWNfMiAvLyAic3RhdGVDb21tb24iCiAgICBpbnRjXzEgLy8gMTIzCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6MjMKICAgIC8vIHN0YXRlT25lID0gR2xvYmFsU3RhdGUoeyBpbml0aWFsVmFsdWU6IFVpbnQ2NCg0NSkgfSkKICAgIHB1c2hieXRlcyAic3RhdGVPbmUiCiAgICBwdXNoaW50IDQ1IC8vIDQ1CiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6MTEKICAgIC8vIHN0YXRlQ29tbW9uID0gR2xvYmFsU3RhdGU8dWludDY0Pih7IGluaXRpYWxWYWx1ZTogMTIzIH0pCiAgICBieXRlY18yIC8vICJzdGF0ZUNvbW1vbiIKICAgIGludGNfMSAvLyAxMjMKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czozMAogICAgLy8gc3RhdGVUd28gPSBHbG9iYWxTdGF0ZSh7IGluaXRpYWxWYWx1ZTogJ0hlbGxvJyB9KQogICAgcHVzaGJ5dGVzcyAic3RhdGVUd28iICJIZWxsbyIgLy8gInN0YXRlVHdvIiwgIkhlbGxvIgogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjQ2CiAgICAvLyBzdGF0ZU11bHRpID0gR2xvYmFsU3RhdGUoeyBpbml0aWFsVmFsdWU6ICdIbW1tJyB9KQogICAgcHVzaGJ5dGVzcyAic3RhdGVNdWx0aSIgIkhtbW0iIC8vICJzdGF0ZU11bHRpIiwgIkhtbW0iCiAgICBhcHBfZ2xvYmFsX3B1dAoKbWFpbl9hZnRlcl9pZl9lbHNlQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czo0NQogICAgLy8gZXhwb3J0IGNsYXNzIE11bHRpQmFzZXMgZXh0ZW5kcyBjbGFzc2VzKE5hbWVTdG9yZSwgQmFzZU9uZSwgQmFzZVR3bykgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDE1CiAgICBwdXNoYnl0ZXNzIDB4MjkwZWJhOWYgMHg4MzlkOTZmZiAweGE5NzhjYTU2IDB4ODg1NDdlYjggMHhjMzI1MzNlMyAweDQ1NWM4ZDA5IDB4ZjlmNTE0MmMgMHgzNjNiMzI5ZSAvLyBtZXRob2QgIm1ldGhvZE11bHRpKClzdHJpbmciLCBtZXRob2QgIm1ldGhvZENhbGxzU3VwZXIoKXN0cmluZyIsIG1ldGhvZCAiY2FsbEIyQ2FudE92ZXJyaWRlKClzdHJpbmciLCBtZXRob2QgImNhbGxCMkNvbW1vbigpc3RyaW5nIiwgbWV0aG9kICJtZXRob2RPbmUoKXN0cmluZyIsIG1ldGhvZCAibWV0aG9kQ29tbW9uKClzdHJpbmciLCBtZXRob2QgImIyQ2FudE92ZXJyaWRlKClzdHJpbmciLCBtZXRob2QgIm1ldGhvZFR3bygpc3RyaW5nIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9tZXRob2RNdWx0aV9yb3V0ZUA1IG1haW5fbWV0aG9kQ2FsbHNTdXBlcl9yb3V0ZUA2IG1haW5fY2FsbEIyQ2FudE92ZXJyaWRlX3JvdXRlQDcgbWFpbl9jYWxsQjJDb21tb25fcm91dGVAOCBtYWluX21ldGhvZE9uZV9yb3V0ZUA5IG1haW5fbWV0aG9kQ29tbW9uX3JvdXRlQDEwIG1haW5fYjJDYW50T3ZlcnJpZGVfcm91dGVAMTEgbWFpbl9tZXRob2RUd29fcm91dGVAMTIKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxOToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjQ1CiAgICAvLyBleHBvcnQgY2xhc3MgTXVsdGlCYXNlcyBleHRlbmRzIGNsYXNzZXMoTmFtZVN0b3JlLCBCYXNlT25lLCBCYXNlVHdvKSB7CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX21ldGhvZFR3b19yb3V0ZUAxMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjMxCiAgICAvLyBtZXRob2RUd28oKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NTAwMDg2MjYxNzM2NTJkNzQ3NzZmCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYjJDYW50T3ZlcnJpZGVfcm91dGVAMTE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czoxNwogICAgLy8gYjJDYW50T3ZlcnJpZGUoKTogc3RyaW5nIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1MDAwNjYzNmY2ZDZkNmY2ZQogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX21ldGhvZENvbW1vbl9yb3V0ZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjEzCiAgICAvLyBtZXRob2RDb21tb24oKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NTAwMDY2MzZmNmQ2ZDZmNmUKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9tZXRob2RPbmVfcm91dGVAOToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjI0CiAgICAvLyBtZXRob2RPbmUoKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1MDAwODYyNjE3MzY1MmQ2ZjZlNjUKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9jYWxsQjJDb21tb25fcm91dGVAODoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjYwCiAgICAvLyBjYWxsQjJDb21tb24oKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NTAwMDY2MzZmNmQ2ZDZmNmUKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9jYWxsQjJDYW50T3ZlcnJpZGVfcm91dGVANzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjU2CiAgICAvLyBjYWxsQjJDYW50T3ZlcnJpZGUoKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NTAwMDg2MjYxNzM2NTJkNzQ3NzZmCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fbWV0aG9kQ2FsbHNTdXBlcl9yb3V0ZUA2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NTIKICAgIC8vIG1ldGhvZENhbGxzU3VwZXIoKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NTAwMDg2MjYxNzM2NTJkNzQ3NzZmCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fbWV0aG9kTXVsdGlfcm91dGVANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjQ4CiAgICAvLyBtZXRob2RNdWx0aSgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUwMDBiNmQ3NTZjNzQ2OTJkNjI2MTczNjU3MwogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0AxNToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjQ1CiAgICAvLyBleHBvcnQgY2xhc3MgTXVsdGlCYXNlcyBleHRlbmRzIGNsYXNzZXMoTmFtZVN0b3JlLCBCYXNlT25lLCBCYXNlVHdvKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDE5CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAXsmAw4VH3x1AAhiYXNlLXR3bwwVH3x1AAZjb21tb24Lc3RhdGVDb21tb24xGEAAOCojZ4AIc3RhdGVPbmWBLWcqI2eCAghzdGF0ZVR3bwVIZWxsb2eCAgpzdGF0ZU11bHRpBEhtbW1nMRtBALuCCAQpDrqfBIOdlv8EqXjKVgSIVH64BMMlM+MERVyNCQT59RQsBDY7Mp42GgCOCABfAFQASQA+ACQAGQAOAAOBAEMxGRREMRhEKLAiQzEZFEQxGEQpsCJDMRkURDEYRCmwIkMxGRREMRhEgA4VH3x1AAhiYXNlLW9uZbAiQzEZFEQxGEQpsCJDMRkURDEYRCiwIkMxGRREMRhEKLAiQzEZFEQxGESAERUffHUAC211bHRpLWJhc2VzsCJDMRlA/38xGBREIkM=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 8,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
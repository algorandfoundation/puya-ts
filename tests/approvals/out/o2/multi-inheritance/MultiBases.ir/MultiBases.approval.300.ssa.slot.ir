main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let reinterpret_bool%0#0: bool = (txn ApplicationID)
        goto reinterpret_bool%0#0 ? block@2 : block@1
    block@1: // if_body_L1
        (app_global_put "stateCommon" 123u)
        (app_global_put "stateOne" 45u)
        (app_global_put "stateCommon" 123u)
        (app_global_put "stateTwo" "Hello")
        (app_global_put "stateMulti" "Hmmm")
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@4 : block@17
    block@4: // abi_routing_L45
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "methodMulti()string" => block@6, method "methodCallsSuper()string" => block@7, method "callB2CantOverride()string" => block@8, method "callB2Common()string" => block@9, method "methodOne()string" => block@10, method "methodCommon()string" => block@11, method "b2CantOverride()string" => block@12, method "methodTwo()string" => block@13, * => block@16}
    block@6: // methodMulti_route_L48
        (log 0x151f7c75000b6d756c74692d6261736573)
        exit 1u
    block@7: // methodCallsSuper_route_L52
        (log 0x151f7c750008626173652d74776f)
        exit 1u
    block@8: // callB2CantOverride_route_L56
        (log 0x151f7c750008626173652d74776f)
        exit 1u
    block@9: // callB2Common_route_L60
        (log 0x151f7c750006636f6d6d6f6e)
        exit 1u
    block@10: // methodOne_route_L24
        (log 0x151f7c750008626173652d6f6e65)
        exit 1u
    block@11: // methodCommon_route_L13
        (log 0x151f7c750006636f6d6d6f6e)
        exit 1u
    block@12: // b2CantOverride_route_L17
        (log 0x151f7c750006636f6d6d6f6e)
        exit 1u
    block@13: // methodTwo_route_L31
        (log 0x151f7c750008626173652d74776f)
        exit 1u
    block@16: // after_if_else_L45
        fail
    block@17: // __algots__.defaultCreate_L45
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u
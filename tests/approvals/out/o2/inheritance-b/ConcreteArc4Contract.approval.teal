#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 8
    txn ApplicationID
    bnz main_after_if_else@2
    // tests/approvals/inheritance-b.algo.ts:17
    // concreteState = GlobalState({ initialValue: 'testing' })
    pushbytess "concreteState" "testing" // "concreteState", "testing"
    app_global_put

main_after_if_else@2:
    // tests/approvals/inheritance-b.algo.ts:16
    // export class ConcreteArc4Contract extends Arc4Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@11
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0xc73da9b9 0xf161dc37 // method "getVeryImportantValue()string", method "simpleAbiMethod(uint64,uint64)uint64"
    txna ApplicationArgs 0
    match main_getVeryImportantValue_route@6 main_simpleAbiMethod_route@7
    err

main_simpleAbiMethod_route@7:
    // tests/approvals/inheritance-a.algo.ts:17
    // public simpleAbiMethod(a: uint64, b: uint64): uint64 {
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    // tests/approvals/inheritance-a.algo.ts:18
    // return a + b
    +
    // tests/approvals/inheritance-a.algo.ts:17
    // public simpleAbiMethod(a: uint64, b: uint64): uint64 {
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_getVeryImportantValue_route@6:
    // tests/approvals/inheritance-b.algo.ts:18
    // public getVeryImportantValue() {
    pushbytes 0x151f7c750007343268656c6c6f
    log
    intc_0 // 1
    return

main___algots__.defaultCreate@11:
    // tests/approvals/inheritance-b.algo.ts:16
    // export class ConcreteArc4Contract extends Arc4Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    intc_0 // 1
    return

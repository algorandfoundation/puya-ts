{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/inheritance-a.algo.ts",
    "C:/Source/algorand/puya-ts/tests/approvals/inheritance-b.algo.ts"
  ],
  "mappings": ";;;;;;ACcE;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AADF;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;ADGE;;AAAA;AAAA;AAAA;;AAAA;ACHF;;;AAAA;AAAA;;;AAAA;ADIW;AADT;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;AAAA;AAAA;;;AAFF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "3": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "6": {
      "op": "pushbytess \"concreteState\" \"testing\" // \"concreteState\", \"testing\""
    },
    "30": {
      "op": "app_global_put"
    },
    "31": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "33": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "36": {
      "op": "pushbytess 0xc73da9b9 0xf161dc37 // method \"getVeryImportantValue()string\", method \"simpleAbiMethod(uint64,uint64)uint64\""
    },
    "48": {
      "op": "txna ApplicationArgs 0"
    },
    "51": {
      "op": "match main_getVeryImportantValue_route@5 main_simpleAbiMethod_route@6"
    },
    "57": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "59": {
      "op": "return"
    },
    "60": {
      "block": "main_simpleAbiMethod_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "62": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "63": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "64": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "66": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "67": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "70": {
      "op": "btoi",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "71": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "a#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "74": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "75": {
      "op": "+",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "76": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "77": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "83": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "84": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "85": {
      "op": "log",
      "stack_out": []
    },
    "86": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "88": {
      "op": "return"
    },
    "89": {
      "block": "main_getVeryImportantValue_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "91": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "92": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "93": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "95": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "96": {
      "op": "pushbytes 0x151f7c7500023432",
      "defined_out": [
        "0x151f7c7500023432"
      ],
      "stack_out": [
        "0x151f7c7500023432"
      ]
    },
    "106": {
      "op": "log",
      "stack_out": []
    },
    "107": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "109": {
      "op": "return"
    },
    "110": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "112": {
      "op": "bnz main_after_if_else@13",
      "stack_out": []
    },
    "115": {
      "op": "txn ApplicationID"
    },
    "117": {
      "op": "!"
    },
    "118": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "119": {
      "op": "pushint 1 // 1"
    },
    "121": {
      "op": "return"
    }
  }
}
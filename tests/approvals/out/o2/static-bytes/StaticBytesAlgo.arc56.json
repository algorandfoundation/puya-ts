{
    "name": "StaticBytesAlgo",
    "structs": {},
    "methods": [
        {
            "name": "hashAddresses",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "a1"
                },
                {
                    "type": "byte[32]",
                    "name": "a2"
                }
            ],
            "returns": {
                "type": "byte[32]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveB32",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[32]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveBytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "returnLength",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testArray",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        89,
                        98,
                        182,
                        209,
                        224,
                        242,
                        265,
                        289
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        315
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        92,
                        101,
                        185,
                        212,
                        227,
                        245,
                        268,
                        292
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        196
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        279
                    ],
                    "errorMessage": "invalid size"
                },
                {
                    "pc": [
                        195
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAQAgJgEEFR98dSOAADEbQQEegggEJbs0ZQRj++2+BFxvSZwE1xKA6gSngADeBLl2eI8EnVLDjwTfkg83NhoAjggAygCyAJsAiQB6AF8ACwACI0MxGRREMRhEIkMxGRREMRhEgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUCI0UBSYEFDEEAD0sBSVABRQJJIghFAUL/6ksBSRUWVwYCTFAoTFCwIkMxGRREMRhEMQBHAksCTwJQUFcAIKwxABJEIkMxGRREMRhEMQCIAGRIIkMxGRREMRhENhoBFRYoTFCwIkMxGRREMRhENhoBVwIANhoCF0wVEkQiQzEZFEQxGEQ2GgGIACtJFSQSRChMULAiQzEZFEQxGEQ2GgE2GgJQAyhMULAiQzEZQP8cMRgURCJDigEBi/8VJBJEi/8DiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@21
    block@2: // abi_routing_L6
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "readonlyArray()void" => block@3, method "arrayInObject()void" => block@4, method "buildArray()uint64[]" => block@5, method "arrayFromCtor()uint64[]" => block@6, method "buildReadonly()uint64[]" => block@7, method "doThings()void" => block@8, method "fixedArray(uint64[50])void" => block@9, method "arc4Interop()void" => block@10, method "structs((uint64,uint64))(uint64,uint64)[]" => block@11, method "booleans()bool[]" => block@12, method "booleansStatic()(bool,bool,bool)" => block@13, method "arc4Booleans()bool[]" => block@14, method "arc4BooleansStatic()(bool,bool,bool)" => block@15, method "aliasing(uint64[],uint64[])void" => block@16, method "receiveMutable(uint64[])void" => block@17, method "receiveReadonly(uint64[])void" => block@18, * => block@25}
    block@3: // readonlyArray_route_L7
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#0: bool = 1u
        goto block@26
    block@4: // arrayInObject_route_L20
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        (assert tmp%8#0) // OnCompletion is not NoOp
        let tmp%9#0: uint64 = (txn ApplicationID)
        (assert tmp%9#0) // can only call when not creating
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#1: bool = 1u
        goto block@26
    block@5: // buildArray_route_L30
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: bool = (! tmp%11#0)
        (assert tmp%12#0) // OnCompletion is not NoOp
        let tmp%13#0: uint64 = (txn ApplicationID)
        (assert tmp%13#0) // can only call when not creating
        (log 0x151f7c7500040000000000000001000000000000000200000000000000030000000000000004)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#2: bool = 1u
        goto block@26
    block@6: // arrayFromCtor_route_L34
        let tmp%17#0: uint64 = (txn OnCompletion)
        let tmp%18#0: bool = (! tmp%17#0)
        (assert tmp%18#0) // OnCompletion is not NoOp
        let tmp%19#0: uint64 = (txn ApplicationID)
        (assert tmp%19#0) // can only call when not creating
        (log 0x151f7c750003000000000000000100000000000000020000000000000003)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#3: bool = 1u
        goto block@26
    block@7: // buildReadonly_route_L38
        let tmp%23#0: uint64 = (txn OnCompletion)
        let tmp%24#0: bool = (! tmp%23#0)
        (assert tmp%24#0) // OnCompletion is not NoOp
        let tmp%25#0: uint64 = (txn ApplicationID)
        (assert tmp%25#0) // can only call when not creating
        (log 0x151f7c7500040000000000000001000000000000000200000000000000030000000000000004)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#4: bool = 1u
        goto block@26
    block@8: // doThings_route_L42
        let tmp%29#0: uint64 = (txn OnCompletion)
        let tmp%30#0: bool = (! tmp%29#0)
        (assert tmp%30#0) // OnCompletion is not NoOp
        let tmp%31#0: uint64 = (txn ApplicationID)
        (assert tmp%31#0) // can only call when not creating
        goto block@48
    block@48: // while_top_L20
        let tmp%1#8: uint64 = (global OpcodeBudget)
        let tmp%2#5: bool = (> 1410u tmp%1#8)
        goto tmp%2#5 ? block@49 : block@51
    block@49: // while_body_L21
        itxn_begin
        ((itxn_field TypeEnum) appl)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApprovalProgram) 0x068101)
        ((itxn_field ClearStateProgram) 0x068101)
        ((itxn_field Fee) 0u)
        itxn_submit
        goto block@48
    block@51: // after_while_L20
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#5: bool = 1u
        goto block@26
    block@9: // fixedArray_route_L109
        let tmp%33#0: uint64 = (txn OnCompletion)
        let tmp%34#0: bool = (! tmp%33#0)
        (assert tmp%34#0) // OnCompletion is not NoOp
        let tmp%35#0: uint64 = (txn ApplicationID)
        (assert tmp%35#0) // can only call when not creating
        let y#1: Encoded(uint64[50]) = (txna ApplicationArgs 1)
        let values%1#2: uint64 = (extract_uint64 y#1 0u)
        let tmp%0#7: bool = (! values%1#2)
        (assert tmp%0#7)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#6: bool = 1u
        goto block@26
    block@10: // arc4Interop_route_L151
        let tmp%37#0: uint64 = (txn OnCompletion)
        let tmp%38#0: bool = (! tmp%37#0)
        (assert tmp%38#0) // OnCompletion is not NoOp
        let tmp%39#0: uint64 = (txn ApplicationID)
        (assert tmp%39#0) // can only call when not creating
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#7: bool = 1u
        goto block@26
    block@11: // structs_route_L164
        let tmp%41#0: uint64 = (txn OnCompletion)
        let tmp%42#0: bool = (! tmp%41#0)
        (assert tmp%42#0) // OnCompletion is not NoOp
        let tmp%43#0: uint64 = (txn ApplicationID)
        (assert tmp%43#0) // can only call when not creating
        let p#0: Encoded(uint64,uint64) = (txna ApplicationArgs 1)
        let x#0: uint64 = (extract_uint64 p#0 0u)
        let y#0: uint64 = (extract_uint64 p#0 8u)
        let aggregate%val_as_bytes%49#0: bytes[8] = (itob x#0)
        let aggregate%val_as_bytes%50#0: bytes[8] = (itob y#0)
        let aggregate%head%50#0: bytes = (concat aggregate%val_as_bytes%49#0 aggregate%val_as_bytes%50#0)
        let myVectors#1: Encoded(len+(uint64,uint64)[]) = (concat 0x0001 aggregate%head%50#0)
        let array_length%0#0: uint64 = (extract_uint16 myVectors#1 0u)
        let tmp%1#4: bool = (== array_length%0#0 1u)
        let aggregate%encoded_element%170#0: bytes = ((extract 2 16) myVectors#1)
        let values%3#0: uint64 = (extract_uint64 aggregate%encoded_element%170#0 0u)
        let tmp%2#1: bool = (== values%3#0 x#0)
        let values%5#0: uint64 = (extract_uint64 aggregate%encoded_element%170#0 8u)
        let tmp%3#1: bool = (== values%5#0 y#0)
        let tmp%4#1: bool = (&& tmp%2#1 tmp%3#1)
        let tmp%5#1: bool = (&& tmp%1#4 tmp%4#1)
        (assert tmp%5#1) // assert target is match for conditions
        let tmp%46#0: bytes = (concat 0x151f7c75 myVectors#1)
        (log tmp%46#0)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#8: bool = 1u
        goto block@26
    block@12: // booleans_route_L173
        let tmp%47#0: uint64 = (txn OnCompletion)
        let tmp%48#0: bool = (! tmp%47#0)
        (assert tmp%48#0) // OnCompletion is not NoOp
        let tmp%49#0: uint64 = (txn ApplicationID)
        (assert tmp%49#0) // can only call when not creating
        (log 0x151f7c750003a0)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#9: bool = 1u
        goto block@26
    block@13: // booleansStatic_route_L177
        let tmp%53#0: uint64 = (txn OnCompletion)
        let tmp%54#0: bool = (! tmp%53#0)
        (assert tmp%54#0) // OnCompletion is not NoOp
        let tmp%55#0: uint64 = (txn ApplicationID)
        (assert tmp%55#0) // can only call when not creating
        (log 0x151f7c75a0)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#10: bool = 1u
        goto block@26
    block@14: // arc4Booleans_route_L181
        let tmp%62#0: uint64 = (txn OnCompletion)
        let tmp%63#0: bool = (! tmp%62#0)
        (assert tmp%63#0) // OnCompletion is not NoOp
        let tmp%64#0: uint64 = (txn ApplicationID)
        (assert tmp%64#0) // can only call when not creating
        (log 0x151f7c750003a0)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#11: bool = 1u
        goto block@26
    block@15: // arc4BooleansStatic_route_L185
        let tmp%68#0: uint64 = (txn OnCompletion)
        let tmp%69#0: bool = (! tmp%68#0)
        (assert tmp%69#0) // OnCompletion is not NoOp
        let tmp%70#0: uint64 = (txn ApplicationID)
        (assert tmp%70#0) // can only call when not creating
        (log 0x151f7c75a0)
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#12: bool = 1u
        goto block@26
    block@16: // aliasing_route_L189
        let tmp%77#0: uint64 = (txn OnCompletion)
        let tmp%78#0: bool = (! tmp%77#0)
        (assert tmp%78#0) // OnCompletion is not NoOp
        let tmp%79#0: uint64 = (txn ApplicationID)
        (assert tmp%79#0) // can only call when not creating
        let mutable#0: Encoded(len+uint64[]) = (txna ApplicationArgs 1)
        let values%0#0: uint64 = (extract_uint64 mutable#0 10u)
        let tmp%0#2: uint64 = (+ values%0#0 2u)
        let aggregate%val_as_bytes%52#0: bytes[8] = (itob tmp%0#2)
        let mutable#1: Encoded(len+uint64[]) = ((replace2 10) mutable#0 aggregate%val_as_bytes%52#0)
        let values%1#0: uint64 = (extract_uint64 mutable#1 10u)
        let tmp%1#1: bool = (!= values%1#0 values%0#0)
        (assert tmp%1#1) // These should not match
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#13: bool = 1u
        goto block@26
    block@17: // receiveMutable_route_L215
        let tmp%81#0: uint64 = (txn OnCompletion)
        let tmp%82#0: bool = (! tmp%81#0)
        (assert tmp%82#0) // OnCompletion is not NoOp
        let tmp%83#0: uint64 = (txn ApplicationID)
        (assert tmp%83#0) // can only call when not creating
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#14: bool = 1u
        goto block@26
    block@18: // receiveReadonly_route_L219
        let tmp%85#0: uint64 = (txn OnCompletion)
        let tmp%86#0: bool = (! tmp%85#0)
        (assert tmp%86#0) // OnCompletion is not NoOp
        let tmp%87#0: uint64 = (txn ApplicationID)
        (assert tmp%87#0) // can only call when not creating
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#15: bool = 1u
        goto block@26
    block@21: // bare_routing_L6
        let tmp%89#0: uint64 = (txn OnCompletion)
        goto tmp%89#0 ? block@25 : block@22
    block@22: // __algots__.defaultCreate_L6
        let tmp%90#0: uint64 = (txn ApplicationID)
        let tmp%91#0: bool = (! tmp%90#0)
        (assert tmp%91#0) // can only call when creating
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#16: bool = 1u
        goto block@26
    block@25: // after_if_else_L6
        let tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#17: bool = 0u
        goto block@26
    block@26: // after_inlined_tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router___L1
        let tmp%0#0: bool = φ(tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#0 <- block@3, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#1 <- block@4, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#2 <- block@5, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#3 <- block@6, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#4 <- block@7, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#5 <- block@51, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#6 <- block@9, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#7 <- block@10, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#8 <- block@11, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#9 <- block@12, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#10 <- block@13, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#11 <- block@14, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#12 <- block@15, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#13 <- block@16, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#14 <- block@17, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#15 <- block@18, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#16 <- block@22, tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__%0#17 <- block@25)
        return tmp%0#0
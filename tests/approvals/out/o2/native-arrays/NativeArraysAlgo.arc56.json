{
    "name": "NativeArraysAlgo",
    "structs": {
        "Vector": [
            {
                "name": "x",
                "type": "uint64"
            },
            {
                "name": "y",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "readonlyArray",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arrayInObject",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "buildArray",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arrayFromCtor",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "buildReadonly",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "doThings",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixedArray",
            "args": [
                {
                    "type": "uint64[50]",
                    "name": "y"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4Interop",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "structs",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "Vector",
                    "name": "p"
                }
            ],
            "returns": {
                "type": "(uint64,uint64)[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "booleans",
            "args": [],
            "returns": {
                "type": "bool[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "booleansStatic",
            "args": [],
            "returns": {
                "type": "(bool,bool,bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4Booleans",
            "args": [],
            "returns": {
                "type": "bool[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4BooleansStatic",
            "args": [],
            "returns": {
                "type": "(bool,bool,bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "aliasing",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "mutable"
                },
                {
                    "type": "uint64[]",
                    "name": "readOnly"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveMutable",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveReadonly",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        21
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        438
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        219
                    ],
                    "errorMessage": "These should not match"
                },
                {
                    "pc": [
                        294
                    ],
                    "errorMessage": "assert target is match for conditions"
                },
                {
                    "pc": [
                        213
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        158,
                        172,
                        187,
                        201
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint64[])"
                },
                {
                    "pc": [
                        250
                    ],
                    "errorMessage": "invalid number of bytes for (uint64,uint64)"
                },
                {
                    "pc": [
                        317
                    ],
                    "errorMessage": "invalid number of bytes for uint64[50]"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAAEIAiYBAwaBATEbQQGdMRkURDEYRIIQBH0xhYkEsKyQZgQPTBHKBKqin3AE4tXgNQQTpYjIBNbsweYEeHtQsgTrh6BkBLxh1rgEj1REcwRD5+5FBMvjpPgEFD8iOwTZiVRCBOIT9bY2GgCOEACiAKIA0QD8ANEAsgCkAKIAYgBWAEwAVgBMAB0ADwABADYaAUkiWSQLJQhMFRJDNhoBSSJZJAslCEwVEkM2GgFJIlkkCyUISwEVEkQ2GgJJIlkkCyUITBUSREmBCltJJQgWTwJMXAqBClsTQ4AFFR98daCwI0OABxUffHUAA6CwI0M2GgFJFYEQEkRJIltMJFtLARZLARZQgAIAAUxQSSJZIxJLAVcCEEkiW08FEkwkW08EEhAQRIAEFR98dUxQsCNDI0M2GgFJFYGQAxJEIlsUQ4GCCzIMDUH/57GBBrIQgQWyGSiyHiiyHyKyAbNC/+GAJhUffHUABAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAAwAAAAAAAAAEsCNDgB4VH3x1AAMAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAOwI0MxGRQxGBQQQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/native-arrays.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;AAKA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AAgDE;;AAAA;AAAA;AAAA;;AAAA;AAhDF;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAgDU;AAAA;AAAA;AAAA;AAAA;AAGO;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAEb;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AALF;;;;;;AAAA;;AAAA;AAAA;AAAA;;;;;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AADF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8"
    },
    "6": {
      "op": "intc_1 // 0",
      "stack_out": [
        "arc4_item%0#0"
      ]
    },
    "7": {
      "op": "dup",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1"
      ]
    },
    "8": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0"
      ]
    },
    "10": {
      "op": "dup",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "11": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#1"
      ]
    },
    "13": {
      "op": "bz main_bare_routing@9",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "16": {
      "op": "pushbytess 0x0f4c11ca 0x13a588c8 0x787b50b2 0xeb87a064 // method \"buildArray()uint64[]\", method \"doThings()void\", method \"arc4Interop()void\", method \"structs((uint64,uint64))(uint64,uint64)[]\""
    },
    "38": {
      "op": "txna ApplicationArgs 0"
    },
    "41": {
      "op": "match main_buildArray_route@3 main_doThings_route@4 main_arc4Interop_route@5 main_structs_route@6"
    },
    "51": {
      "block": "main_after_if_else@13",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#0"
      ]
    },
    "52": {
      "op": "return"
    },
    "53": {
      "block": "main_structs_route@6",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%17#0"
      ]
    },
    "55": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%18#0"
      ]
    },
    "56": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "57": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%19#0"
      ]
    },
    "59": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "60": {
      "op": "txna ApplicationArgs 1"
    },
    "63": {
      "op": "dup"
    },
    "64": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)",
        "0"
      ]
    },
    "65": {
      "op": "extract_uint64",
      "defined_out": [
        "p.x#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "reinterpret_bytes[16]%0#0",
        "p.x#0"
      ]
    },
    "66": {
      "op": "dup",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "reinterpret_bytes[16]%0#0",
        "p.x#0",
        "p.x#0 (copy)"
      ]
    },
    "67": {
      "op": "cover 2",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.x#0",
        "reinterpret_bytes[16]%0#0",
        "p.x#0"
      ]
    },
    "69": {
      "op": "bury 4",
      "defined_out": [
        "p.x#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.x#0",
        "reinterpret_bytes[16]%0#0"
      ]
    },
    "71": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "p.x#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.x#0",
        "reinterpret_bytes[16]%0#0",
        "8"
      ]
    },
    "72": {
      "op": "extract_uint64",
      "defined_out": [
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.x#0",
        "p.y#0"
      ]
    },
    "73": {
      "op": "dup",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.x#0",
        "p.y#0",
        "p.y#0"
      ]
    },
    "74": {
      "op": "bury 3",
      "defined_out": [
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.x#0",
        "p.y#0"
      ]
    },
    "76": {
      "op": "swap",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.y#0",
        "p.x#0"
      ]
    },
    "77": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%16#1",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "p.y#0",
        "array%sub_item%16#1"
      ]
    },
    "78": {
      "op": "swap",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%sub_item%16#1",
        "p.y#0"
      ]
    },
    "79": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%16#1",
        "array%sub_item%17#1",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%sub_item%16#1",
        "array%sub_item%17#1"
      ]
    },
    "80": {
      "op": "concat",
      "defined_out": [
        "array%encoded%19#1",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1"
      ]
    },
    "81": {
      "op": "dup",
      "defined_out": [
        "array%encoded%19#1",
        "array%encoded%19#1 (copy)",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1",
        "array%encoded%19#1 (copy)"
      ]
    },
    "82": {
      "op": "len",
      "defined_out": [
        "array%encoded%19#1",
        "byte_len%0#0",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1",
        "byte_len%0#0"
      ]
    },
    "83": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array%encoded%19#1",
        "byte_len%0#0",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1",
        "byte_len%0#0",
        "16"
      ]
    },
    "85": {
      "op": "/",
      "defined_out": [
        "array%encoded%19#1",
        "len_%0#0",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1",
        "len_%0#0"
      ]
    },
    "86": {
      "op": "itob",
      "defined_out": [
        "array%encoded%19#1",
        "as_bytes%0#0",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1",
        "as_bytes%0#0"
      ]
    },
    "87": {
      "op": "extract 6 2",
      "defined_out": [
        "array%encoded%19#1",
        "len_16_bit%0#0",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "array%encoded%19#1",
        "len_16_bit%0#0"
      ]
    },
    "90": {
      "op": "swap",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "len_16_bit%0#0",
        "array%encoded%19#1"
      ]
    },
    "91": {
      "op": "concat",
      "defined_out": [
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "myVectors#1"
      ]
    },
    "92": {
      "op": "dup",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "myVectors#1",
        "myVectors#1"
      ]
    },
    "93": {
      "op": "bury 4",
      "defined_out": [
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "myVectors#1"
      ]
    },
    "95": {
      "op": "intc_1 // 0",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "myVectors#1",
        "0"
      ]
    },
    "96": {
      "op": "extract_uint16",
      "defined_out": [
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#1"
      ]
    },
    "97": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#1",
        "1"
      ]
    },
    "98": {
      "op": "==",
      "defined_out": [
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%1#1"
      ]
    },
    "99": {
      "op": "bz main_bool_false@21",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "102": {
      "op": "dig 2"
    },
    "104": {
      "op": "extract 2 16"
    },
    "107": {
      "op": "dup"
    },
    "108": {
      "op": "bury 5"
    },
    "110": {
      "op": "intc_1 // 0"
    },
    "111": {
      "op": "extract_uint64"
    },
    "112": {
      "op": "dig 2"
    },
    "114": {
      "op": "=="
    },
    "115": {
      "op": "bz main_bool_false@21"
    },
    "118": {
      "op": "dig 3"
    },
    "120": {
      "op": "intc_2 // 8"
    },
    "121": {
      "op": "extract_uint64"
    },
    "122": {
      "op": "dig 1"
    },
    "124": {
      "op": "=="
    },
    "125": {
      "op": "bz main_bool_false@21"
    },
    "128": {
      "op": "intc_0 // 1"
    },
    "129": {
      "block": "main_bool_merge@22",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "130": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "0x151f7c75"
      ]
    },
    "136": {
      "op": "dig 3",
      "defined_out": [
        "0x151f7c75",
        "myVectors#1"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "0x151f7c75",
        "myVectors#1"
      ]
    },
    "138": {
      "op": "concat",
      "defined_out": [
        "myVectors#1",
        "tmp%22#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%22#0"
      ]
    },
    "139": {
      "op": "log",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "140": {
      "op": "intc_0 // 1",
      "defined_out": [
        "myVectors#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "return"
    },
    "142": {
      "block": "main_bool_false@21",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "and_result%0#0"
      ]
    },
    "143": {
      "op": "b main_bool_merge@22"
    },
    "146": {
      "block": "main_arc4Interop_route@5",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%13#0"
      ]
    },
    "148": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%14#0"
      ]
    },
    "149": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "150": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%15#0"
      ]
    },
    "152": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "153": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#0"
      ]
    },
    "154": {
      "op": "return"
    },
    "155": {
      "block": "main_doThings_route@4",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%9#0"
      ]
    },
    "157": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%10#0"
      ]
    },
    "158": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "159": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%11#0"
      ]
    },
    "161": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "162": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#0"
      ]
    },
    "163": {
      "op": "return"
    },
    "164": {
      "block": "main_buildArray_route@3",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%3#0"
      ]
    },
    "166": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%4#0"
      ]
    },
    "167": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "168": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%5#0"
      ]
    },
    "170": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "171": {
      "op": "pushbytes 0x151f7c7500040000000000000001000000000000000200000000000000030000000000000004",
      "defined_out": [
        "0x151f7c7500040000000000000001000000000000000200000000000000030000000000000004"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "0x151f7c7500040000000000000001000000000000000200000000000000030000000000000004"
      ]
    },
    "211": {
      "op": "log",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "212": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%0#0"
      ]
    },
    "213": {
      "op": "return"
    },
    "214": {
      "block": "main_bare_routing@9",
      "stack_in": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0",
        "tmp%23#0"
      ]
    },
    "216": {
      "op": "bnz main_after_if_else@13",
      "stack_out": [
        "arc4_item%0#0",
        "myVectors#1",
        "p.x#0",
        "p.y#0"
      ]
    },
    "219": {
      "op": "txn ApplicationID"
    },
    "221": {
      "op": "!"
    },
    "222": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "223": {
      "op": "intc_0 // 1"
    },
    "224": {
      "op": "return"
    }
  }
}
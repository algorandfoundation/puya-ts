{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/avm11.algo.ts"
  ],
  "mappings": ";;;;;AAWA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AAEE;;AAAA;AAAA;AAAA;;AAAA;AAEY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACH;;AAAP;AAAA;AACO;AAAP;AAQ4B;AAArB;;AAAmC;;AAAnC;AAAP;AACiC;AAA1B;;AAAP;AACyB;AAAlB;;AAAP;AAC0B;AAAnB;;AAAP;AAAA;AAC2B;AAApB;;AAAkC;;AAAlC;AAAP;AAC4B;AAArB;;AAAP;AAAA;AAC8B;AAAvB;;AAAP;AACkC;AAA3B;;AAAP;AAGiB;;AAAjB;AACiB;;AAAjB;AACiB;;AAAjB;AACiB;;AAAjB;AACiB;;AAAjB;AAE2C;AAA5B;;AAAA;;AACsC;AAAtC;;AAAA;;AA7BjB;;AAFF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "10": {
      "op": "pushbytes 0x52448a31 // method \"testNewOps()void\""
    },
    "16": {
      "op": "txna ApplicationArgs 0"
    },
    "19": {
      "op": "match main_testNewOps_route@3"
    },
    "23": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "return"
    },
    "25": {
      "block": "main_testNewOps_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "29": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "31": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "32": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000499602d2",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000499602d2"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000499602d2"
      ]
    },
    "66": {
      "op": "mimc BLS12_381Mp111",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "68": {
      "op": "len",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "69": {
      "op": "assert",
      "stack_out": []
    },
    "70": {
      "op": "online_stake",
      "defined_out": [
        "reinterpret_bool%1#0"
      ],
      "stack_out": [
        "reinterpret_bool%1#0"
      ]
    },
    "71": {
      "op": "assert",
      "stack_out": []
    },
    "72": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "73": {
      "op": "block BlkProposer",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "75": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "77": {
      "op": "!=",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "78": {
      "error": "proposer",
      "op": "assert // proposer",
      "stack_out": []
    },
    "79": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "80": {
      "op": "block BlkFeesCollected",
      "defined_out": [
        "reinterpret_bool%2#0"
      ],
      "stack_out": [
        "reinterpret_bool%2#0"
      ]
    },
    "82": {
      "error": "fees collected",
      "op": "assert // fees collected",
      "stack_out": []
    },
    "83": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "84": {
      "op": "block BlkBonus",
      "defined_out": [
        "reinterpret_bool%3#0"
      ],
      "stack_out": [
        "reinterpret_bool%3#0"
      ]
    },
    "86": {
      "error": "bonus",
      "op": "assert // bonus",
      "stack_out": []
    },
    "87": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "88": {
      "op": "block BlkBranch",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "90": {
      "op": "len",
      "defined_out": [
        "reinterpret_bool%4#0"
      ],
      "stack_out": [
        "reinterpret_bool%4#0"
      ]
    },
    "91": {
      "error": "branch",
      "op": "assert // branch",
      "stack_out": []
    },
    "92": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "93": {
      "op": "block BlkFeeSink",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "95": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%8#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%8#1",
        "tmp%9#1"
      ]
    },
    "97": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "98": {
      "error": "fee sink",
      "op": "assert // fee sink",
      "stack_out": []
    },
    "99": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "100": {
      "op": "block BlkProtocol",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "102": {
      "op": "len",
      "defined_out": [
        "reinterpret_bool%5#0"
      ],
      "stack_out": [
        "reinterpret_bool%5#0"
      ]
    },
    "103": {
      "error": "protocol",
      "op": "assert // protocol",
      "stack_out": []
    },
    "104": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "105": {
      "op": "block BlkTxnCounter",
      "defined_out": [
        "reinterpret_bool%6#0"
      ],
      "stack_out": [
        "reinterpret_bool%6#0"
      ]
    },
    "107": {
      "error": "txn counter",
      "op": "assert // txn counter",
      "stack_out": []
    },
    "108": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "109": {
      "op": "block BlkProposerPayout",
      "defined_out": [
        "reinterpret_bool%7#0"
      ],
      "stack_out": [
        "reinterpret_bool%7#0"
      ]
    },
    "111": {
      "error": "proposer payout",
      "op": "assert // proposer payout",
      "stack_out": []
    },
    "112": {
      "op": "global PayoutsEnabled",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "114": {
      "error": "payouts_enabled",
      "op": "assert // payouts_enabled",
      "stack_out": []
    },
    "115": {
      "op": "global PayoutsGoOnlineFee",
      "defined_out": [
        "reinterpret_bool%8#0"
      ],
      "stack_out": [
        "reinterpret_bool%8#0"
      ]
    },
    "117": {
      "error": "payouts_go_online_fee",
      "op": "assert // payouts_go_online_fee",
      "stack_out": []
    },
    "118": {
      "op": "global PayoutsPercent",
      "defined_out": [
        "reinterpret_bool%9#0"
      ],
      "stack_out": [
        "reinterpret_bool%9#0"
      ]
    },
    "120": {
      "error": "payouts_percent",
      "op": "assert // payouts_percent",
      "stack_out": []
    },
    "121": {
      "op": "global PayoutsMinBalance",
      "defined_out": [
        "reinterpret_bool%10#0"
      ],
      "stack_out": [
        "reinterpret_bool%10#0"
      ]
    },
    "123": {
      "error": "payouts_min_balance",
      "op": "assert // payouts_min_balance",
      "stack_out": []
    },
    "124": {
      "op": "global PayoutsMaxBalance",
      "defined_out": [
        "reinterpret_bool%11#0"
      ],
      "stack_out": [
        "reinterpret_bool%11#0"
      ]
    },
    "126": {
      "error": "payouts_max_balance",
      "op": "assert // payouts_max_balance",
      "stack_out": []
    },
    "127": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "128": {
      "op": "voter_params_get VoterBalance",
      "defined_out": [
        "g#0",
        "h#0"
      ],
      "stack_out": [
        "g#0",
        "h#0"
      ]
    },
    "130": {
      "op": "popn 2",
      "stack_out": []
    },
    "132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "133": {
      "op": "voter_params_get VoterIncentiveEligible",
      "defined_out": [
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "i#0",
        "j#0"
      ]
    },
    "135": {
      "op": "popn 2",
      "stack_out": []
    },
    "137": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "138": {
      "op": "return"
    },
    "139": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "141": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "144": {
      "op": "txn ApplicationID"
    },
    "146": {
      "op": "!"
    },
    "147": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "148": {
      "op": "intc_1 // 1"
    },
    "149": {
      "op": "return"
    }
  }
}
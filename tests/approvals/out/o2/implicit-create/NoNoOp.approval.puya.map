{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/implicit-create.algo.ts"
  ],
  "mappings": ";;;;;AAOA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;;;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AACG;;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bnz main_after_if_else@8",
      "stack_out": []
    },
    "10": {
      "op": "pushint 4 // 4"
    },
    "12": {
      "op": "intc_0 // 0"
    },
    "13": {
      "op": "txn OnCompletion"
    },
    "15": {
      "op": "match main_handleUpdate@4 main___algots__.defaultCreate@5"
    },
    "21": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "22": {
      "op": "return"
    },
    "23": {
      "block": "main___algots__.defaultCreate@5",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "25": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "26": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "27": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "28": {
      "op": "return"
    },
    "29": {
      "block": "main_handleUpdate@4",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "31": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "32": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "return"
    }
  }
}
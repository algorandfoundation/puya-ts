{
    "name": "SingleEvalAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "myState": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bXlTdGF0ZQ=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        38
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        60
                    ],
                    "errorMessage": "a() should only be called once"
                },
                {
                    "pc": [
                        71
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        41
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        48,
                        57
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJteVN0YXRlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NAogICAgLy8gY2xhc3MgU2luZ2xlRXZhbEFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4YTc4MDAwZGUgLy8gbWV0aG9kICJ0ZXN0KCl2b2lkIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl90ZXN0X3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIFNpbmdsZUV2YWxBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18wIC8vIDAKICAgIHJldHVybgoKbWFpbl90ZXN0X3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czoxNgogICAgLy8gdGVzdCgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NQogICAgLy8gbXlTdGF0ZSA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgYnl0ZWNfMCAvLyAibXlTdGF0ZSIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjE3CiAgICAvLyB0aGlzLm15U3RhdGUudmFsdWUgPSAwCiAgICBpbnRjXzAgLy8gMAogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjUKICAgIC8vIG15U3RhdGUgPSBHbG9iYWxTdGF0ZTx1aW50NjQ+KCkKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJteVN0YXRlIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjgKICAgIC8vIHRoaXMubXlTdGF0ZS52YWx1ZSArPSAxCiAgICBpbnRjXzEgLy8gMQogICAgKwogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NQogICAgLy8gbXlTdGF0ZSA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgYnl0ZWNfMCAvLyAibXlTdGF0ZSIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjgKICAgIC8vIHRoaXMubXlTdGF0ZS52YWx1ZSArPSAxCiAgICBzd2FwCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NQogICAgLy8gbXlTdGF0ZSA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzAgLy8gIm15U3RhdGUiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTkKICAgIC8vIGFzc2VydCh0aGlzLm15U3RhdGUudmFsdWUgPT09IDEsICdhKCkgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIG9uY2UnKQogICAgaW50Y18xIC8vIDEKICAgID09CiAgICBhc3NlcnQgLy8gYSgpIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBvbmNlCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czoxNgogICAgLy8gdGVzdCgpIHsKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo0CiAgICAvLyBjbGFzcyBTaW5nbGVFdmFsQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAEmAQdteVN0YXRlMRtBACuABKeAAN42GgCOAQACIkMxGRREMRhEKCJnIihlRCMIKExnIihlRCMSRCNDMRlA/90xGBREI0M=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}
main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@9
    block@2: // abi_routing_L7
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "test()void" => block@4, method "test2(uint64)void" => block@5, * => block@8}
    block@4: // test_route_L8
        let tmp%6#1: uint64 = (txn GroupIndex)
        let tmp%7#1: uint64 = ((gtxns ApplicationID) tmp%6#1)
        let tmp%8#1: uint64 = (txn ApplicationID)
        let tmp%9#1: bool = (== tmp%7#1 tmp%8#1)
        (assert tmp%9#1)
        let tmp%10#1: bytes = ((txnas ApplicationArgs) 0u)
        let tmp%11#1: bool = (== tmp%10#1 method "test()void")
        (assert tmp%11#1)
        let tmp%12#0: uint64 = (txn GroupIndex)
        let tmp%13#0: bytes = ((gtxnsas ApplicationArgs) tmp%12#0 0u)
        let tmp%14#0: bool = (== tmp%13#0 method "test()void")
        (assert tmp%14#0)
        exit 1u
    block@5: // test2_route_L23
        let tmp%0#2: bytes = (txna ApplicationArgs 1)
        let len%0#0: uint64 = (len tmp%0#2)
        let eq%0#0: bool = (== len%0#0 8u)
        (assert eq%0#0) // invalid number of bytes for arc4.uint64
        let size#0: uint64 = (btoi tmp%0#2)
        let a#0: bytes = (bzero size#0)
        let tmp%1#2: uint64 = (len a#0)
        let tmp%2#1: bool = (== tmp%1#2 size#0)
        (assert tmp%2#1)
        exit 1u
    block@8: // after_if_else_L7
        fail
    block@9: // __algots__.defaultCreate_L7
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u
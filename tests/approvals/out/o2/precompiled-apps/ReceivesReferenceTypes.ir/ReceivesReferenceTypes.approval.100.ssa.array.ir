main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@6
    block@2: // abi_routing_L110
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "receivesReferenceTypes(uint64,address,uint64)void" => block@3, * => block@10}
    block@3: // receivesReferenceTypes_route_L111
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let app#0: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        let reinterpret_Encoded(uint8[32])%0#0: Encoded(uint8[32]) = (txna ApplicationArgs 2)
        let acc#0: account = reinterpret_Encoded(uint8[32])%0#0
        let reinterpret_Encoded(uint64)%1#0: Encoded(uint64) = (txna ApplicationArgs 3)
        let asset#0: uint64 = (btoi reinterpret_Encoded(uint64)%1#0)
        let (value%0#0: account, check%0#0: bool) = ((app_params_get AppAddress) app#0)
        (assert check%0#0) // application exists
        (log value%0#0)
        (log acc#0)
        let (value%1#0: bytes, check%1#0: bool) = ((asset_params_get AssetName) asset#0)
        (assert check%1#0) // asset exists
        (log value%1#0)
        let tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__%0#0: bool = 1u
        goto block@11
    block@6: // bare_routing_L110
        let tmp%10#0: uint64 = (txn OnCompletion)
        goto tmp%10#0 ? block@10 : block@7
    block@7: // __algots__.defaultCreate_L110
        let tmp%11#0: uint64 = (txn ApplicationID)
        let tmp%12#0: bool = (! tmp%11#0)
        (assert tmp%12#0) // can only call when creating
        let tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__%0#1: bool = 1u
        goto block@11
    block@10: // after_if_else_L110
        let tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__%0#2: bool = 0u
        goto block@11
    block@11: // after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__%0#0 <- block@3, tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__%0#1 <- block@7, tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__%0#2 <- block@10)
        return tmp%0#0
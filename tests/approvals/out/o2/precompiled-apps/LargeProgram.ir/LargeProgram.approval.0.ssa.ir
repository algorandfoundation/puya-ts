main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#0: bool = tests/approvals/precompiled-apps.algo.ts::LargeProgram.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/precompiled-apps.algo.ts::LargeProgram.__puya_arc4_router__() -> bool:
    block@0: // L48
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@6
    block@1: // abi_routing_L48
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "getBigBytesLength()uint64" => block@2, method "delete()void" => block@3, * => block@4}
    block@2: // getBigBytesLength_route_L49
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let to_encode%0#0: uint64 = tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength()
        let val_as_bytes%0#0: bytes = (itob to_encode%0#0)
        let tmp%7#0: bytes = (concat 0x151f7c75 val_as_bytes%0#0)
        (log tmp%7#0)
        return 1u
    block@3: // delete_route_L53
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 DeleteApplication)
        (assert tmp%9#0) // OnCompletion is not DeleteApplication
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (!= tmp%10#0 0u)
        (assert tmp%11#0) // can only call when not creating
        tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete()
        return 1u
    block@4: // switch_case_default_L48
        goto block@5
    block@5: // switch_case_next_L48
        goto block@10
    block@6: // bare_routing_L48
        let tmp%12#0: uint64 = (txn OnCompletion)
        switch tmp%12#0 {0u => block@7, * => block@8}
    block@7: // __algots__.defaultCreate_L48
        let tmp%13#0: uint64 = (txn ApplicationID)
        let tmp%14#0: bool = (== tmp%13#0 0u)
        (assert tmp%14#0) // can only call when creating
        tests/approvals/precompiled-apps.algo.ts::LargeProgram.__algots__.defaultCreate()
        return 1u
    block@8: // switch_case_default_L48
        goto block@9
    block@9: // switch_case_next_L48
        goto block@10
    block@10: // after_if_else_L48
        return 0u

subroutine tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength() -> uint64:
    block@0: // L49
        let tmp%0#0: bytes = tests/approvals/precompiled-apps.algo.ts::getBigBytes()
        let tmp%1#0: uint64 = (len tmp%0#0)
        return tmp%1#0

subroutine tests/approvals/precompiled-apps.algo.ts::getBigBytes() -> bytes:
    block@0: // L44
        let tmp%0#0: bytes = (bzero 4096u)
        return tmp%0#0

subroutine tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete() -> void:
    block@0: // L53
        return 

subroutine tests/approvals/precompiled-apps.algo.ts::LargeProgram.__algots__.defaultCreate() -> void:
    block@0: // L48
        return 
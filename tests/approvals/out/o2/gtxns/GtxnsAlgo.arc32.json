{
    "hints": {
        "test()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test2()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test3()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test4(appl)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "reflectAllPay(pay)(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "Object3488A93F",
                    "elements": [
                        [
                            "sender",
                            "byte[32]"
                        ],
                        [
                            "fee",
                            "uint64"
                        ],
                        [
                            "firstValid",
                            "uint64"
                        ],
                        [
                            "firstValidTime",
                            "uint64"
                        ],
                        [
                            "lastValid",
                            "uint64"
                        ],
                        [
                            "note",
                            "byte[]"
                        ],
                        [
                            "lease",
                            "byte[32]"
                        ],
                        [
                            "typeBytes",
                            "byte[]"
                        ],
                        [
                            "groupIndex",
                            "uint64"
                        ],
                        [
                            "txnId",
                            "byte[32]"
                        ],
                        [
                            "rekeyTo",
                            "byte[32]"
                        ],
                        [
                            "receiver",
                            "byte[32]"
                        ],
                        [
                            "amount",
                            "uint64"
                        ],
                        [
                            "closeRemainderTo",
                            "byte[32]"
                        ]
                    ]
                }
            }
        },
        "test5(txn)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "GtxnsAlgo",
        "methods": [
            {
                "name": "test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test2",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test3",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test4",
                "args": [
                    {
                        "type": "appl",
                        "name": "other"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "reflectAllPay",
                "args": [
                    {
                        "type": "pay",
                        "name": "pay"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])"
                }
            },
            {
                "name": "test5",
                "args": [
                    {
                        "type": "txn",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
{
    "name": "GtxnsAlgo",
    "structs": {
        "reflectAllPayResult": [
            {
                "name": "sender",
                "type": "byte[32]"
            },
            {
                "name": "fee",
                "type": "uint64"
            },
            {
                "name": "firstValid",
                "type": "uint64"
            },
            {
                "name": "firstValidTime",
                "type": "uint64"
            },
            {
                "name": "lastValid",
                "type": "uint64"
            },
            {
                "name": "note",
                "type": "byte[]"
            },
            {
                "name": "lease",
                "type": "byte[32]"
            },
            {
                "name": "typeBytes",
                "type": "byte[]"
            },
            {
                "name": "groupIndex",
                "type": "uint64"
            },
            {
                "name": "txnId",
                "type": "byte[32]"
            },
            {
                "name": "rekeyTo",
                "type": "byte[32]"
            },
            {
                "name": "receiver",
                "type": "byte[32]"
            },
            {
                "name": "amount",
                "type": "uint64"
            },
            {
                "name": "closeRemainderTo",
                "type": "byte[32]"
            }
        ]
    },
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test4",
            "args": [
                {
                    "type": "appl",
                    "name": "other"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "reflectAllPay",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])",
                "struct": "reflectAllPayResult"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        308
                    ],
                    "errorMessage": "OCA must be NoOp"
                },
                {
                    "pc": [
                        79,
                        253,
                        301,
                        321,
                        443
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        273
                    ],
                    "errorMessage": "Other txn must be NoOp"
                },
                {
                    "pc": [
                        467
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        82,
                        256,
                        304,
                        324,
                        446
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        267
                    ],
                    "errorMessage": "transaction type is appl"
                },
                {
                    "pc": [
                        92,
                        452
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAQAGJgIE35IPNwtIZWxsbyB0ZXN0NIAARwIxG0EBqYICBKeAAN4E8ZCFJCiCAgTttPlzBBPealQ2GgCOBQFuAPQA4ACwAAIjQzEZFEQxGEQxFiIJSTgQIhJESTgASwE4AUsCOAJLAzgDSwQ4BEsFOAVLBjgGSwc4D0sIOBZLCTgXSwo4IEsLOAdLDDgITw04CU8MFk8NTFBPDBZQTwsWUE8KFlBLCRUWVwYCTwpQSRWB9AEITwKAAgD0UE8KUEsJFRZXBgJPClBPA0xQTwIWVwYCTwJMUE8HFlBPBlBPBVBPBFBPAxZQTwJQTFCABBUffHVMULAiQzEZFEQxGEQxFiIJSTgQSSQSREsBOBkURCQSREk4PikSREkjwhooEkQ4GDIIEkQiQzEZFEQxGEQxGRREMRAkEkQpsCJDMRkURDEYRDIERQEjRQJKDEEAZUsBOBBJRQQkEkEAD0sBOBgWsEsBIghFAkL/4EsCgQQSQQAJSwE4ERawQv/mSwKBAxJBAAlLATghFrBC/9VLAiISQQAISwE4B7BC/8ZLAoECEkEACEsBOAqwQv+2SwE4LRawQv+tIkMxGRREMRhEIzgQIhJEIzgIRCJDMRlA/noxGBREIkM=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 9,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
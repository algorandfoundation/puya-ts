#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock 0x151f7c75
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/resource-encoding.algo.ts:16
    // class ByIndex extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@9
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/resource-encoding.algo.ts:16
    // class ByIndex extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    bz main_create_NoOp@7
    b main_call_NoOp@3

main_call_NoOp@3:
    // tests/approvals/resource-encoding.algo.ts:16
    // class ByIndex extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x34359fb6 // method "testExplicitIndex(account)uint64"
    pushbytes 0x129c3321 // method "testImplicitValue(address)uint64"
    uncover 2
    match main_testExplicitIndex_route@4 main_testImplicitValue_route@5
    b main_switch_case_next@6

main_switch_case_next@6:
    b main_after_if_else@8

main_after_if_else@8:
    b main_after_if_else@10

main_after_if_else@10:
    // tests/approvals/resource-encoding.algo.ts:16
    // class ByIndex extends Contract {
    err

main_testImplicitValue_route@5:
    // tests/approvals/resource-encoding.algo.ts:26
    // testImplicitValue(account: Account) {
    callsub testImplicitValue
    b main_switch_case_next@6

main_testExplicitIndex_route@4:
    // tests/approvals/resource-encoding.algo.ts:17
    // @abimethod({ resourceEncoding: 'index' })
    callsub testExplicitIndex
    b main_switch_case_next@6

main_create_NoOp@7:
    b main_after_if_else@8

main___algots__.defaultCreate@9:
    // tests/approvals/resource-encoding.algo.ts:16
    // class ByIndex extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::ByIndex.testExplicitIndex[routing]() -> void:
testExplicitIndex:
    b testExplicitIndex_block@0

testExplicitIndex_block@0:
    // tests/approvals/resource-encoding.algo.ts:17
    // @abimethod({ resourceEncoding: 'index' })
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 1
    ==
    assert // invalid number of bytes for uint8
    btoi
    txnas Accounts
    callsub tests/approvals/resource-encoding.algo.ts::ByIndex.testExplicitIndex
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::ByIndex.testImplicitValue[routing]() -> void:
testImplicitValue:
    b testImplicitValue_block@0

testImplicitValue_block@0:
    // tests/approvals/resource-encoding.algo.ts:26
    // testImplicitValue(account: Account) {
    txna ApplicationArgs 1
    dup
    len
    pushint 32 // 32
    ==
    assert // invalid number of bytes for uint8[32]
    callsub tests/approvals/resource-encoding.algo.ts::ByIndex.testImplicitValue
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::ByIndex.testExplicitIndex(account: bytes) -> uint64:
tests/approvals/resource-encoding.algo.ts::ByIndex.testExplicitIndex:
    // tests/approvals/resource-encoding.algo.ts:17-18
    // @abimethod({ resourceEncoding: 'index' })
    // testExplicitIndex(account: Account) {
    proto 1 1
    b tests/approvals/resource-encoding.algo.ts::ByIndex.testExplicitIndex_block@0

tests/approvals/resource-encoding.algo.ts::ByIndex.testExplicitIndex_block@0:
    // tests/approvals/resource-encoding.algo.ts:19
    // return account.balance
    frame_dig -1
    acct_params_get AcctBalance
    assert // account funded
    retsub


// tests/approvals/resource-encoding.algo.ts::ByIndex.testImplicitValue(account: bytes) -> uint64:
tests/approvals/resource-encoding.algo.ts::ByIndex.testImplicitValue:
    // tests/approvals/resource-encoding.algo.ts:26
    // testImplicitValue(account: Account) {
    proto 1 1
    b tests/approvals/resource-encoding.algo.ts::ByIndex.testImplicitValue_block@0

tests/approvals/resource-encoding.algo.ts::ByIndex.testImplicitValue_block@0:
    // tests/approvals/resource-encoding.algo.ts:27
    // return account.balance
    frame_dig -1
    acct_params_get AcctBalance
    assert // account funded
    retsub


// tests/approvals/resource-encoding.algo.ts::ByIndex.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 8 1 6
    bytecblock 0x 0x151f7c75 0x01
    bytec_0 // ""
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@8
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x134c76a8 // method "testCallToIndex(address,uint64)void"
    pushbytes 0x0fefd6f7 // method "testCallToValue(address,uint64)void"
    pushbytes 0xe7bc0f52 // method "testCallToEchoResource()void"
    uncover 3
    match main_testCallToIndex_route@3 main_testCallToValue_route@4 main_testCallToEchoResource_route@5
    b main_switch_case_default@6

main_switch_case_default@6:
    b main_switch_case_next@7

main_switch_case_next@7:
    b main_after_if_else@12

main_after_if_else@12:
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    intc_0 // 0
    bury 1
    b main_after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__@13

main_after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__@13:
    return

main_testCallToEchoResource_route@5:
    // tests/approvals/resource-encoding.algo.ts:80
    // testCallToEchoResource() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub testCallToEchoResource
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__@13

main_testCallToValue_route@4:
    // tests/approvals/resource-encoding.algo.ts:71
    // testCallToValue(account: Account, appId: Application) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    // tests/approvals/resource-encoding.algo.ts:71
    // testCallToValue(account: Account, appId: Application) {
    callsub testCallToValue
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__@13

main_testCallToIndex_route@3:
    // tests/approvals/resource-encoding.algo.ts:63
    // testCallToIndex(account: Account, appId: Application) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    // tests/approvals/resource-encoding.algo.ts:63
    // testCallToIndex(account: Account, appId: Application) {
    callsub testCallToIndex
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__@13

main_bare_routing@8:
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    txn OnCompletion
    intc_0 // 0
    uncover 1
    match main___algots__.defaultCreate@9
    b main_switch_case_default@10

main_switch_case_default@10:
    b main_switch_case_next@11

main_switch_case_next@11:
    b main_after_if_else@12

main___algots__.defaultCreate@9:
    // tests/approvals/resource-encoding.algo.ts:62
    // class C2C extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__@13


// tests/approvals/resource-encoding.algo.ts::C2C.testCallToIndex(account: bytes, appId: uint64) -> void:
testCallToIndex:
    // tests/approvals/resource-encoding.algo.ts:63
    // testCallToIndex(account: Account, appId: Application) {
    proto 2 0
    b testCallToIndex_block@0

testCallToIndex_block@0:
    // tests/approvals/resource-encoding.algo.ts:64-67
    // const { returnValue: res1 } = abiCall(ByIndex.prototype.testExplicitIndex, {
    //   appId,
    //   args: [account],
    // })
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:65
    // appId,
    frame_dig -1
    // tests/approvals/resource-encoding.algo.ts:66
    // args: [account],
    frame_dig -2
    itxn_field Accounts
    // tests/approvals/resource-encoding.algo.ts:64-67
    // const { returnValue: res1 } = abiCall(ByIndex.prototype.testExplicitIndex, {
    //   appId,
    //   args: [account],
    // })
    pushbytes 0x34359fb6 // method "testExplicitIndex(account)uint64"
    itxn_field ApplicationArgs
    bytec_2 // 0x01
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    // tests/approvals/resource-encoding.algo.ts:64-67
    // const { returnValue: res1 } = abiCall(ByIndex.prototype.testExplicitIndex, {
    //   appId,
    //   args: [account],
    // })
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b testCallToIndex_next_txn@1

testCallToIndex_next_txn@1:
    // tests/approvals/resource-encoding.algo.ts:64-67
    // const { returnValue: res1 } = abiCall(ByIndex.prototype.testExplicitIndex, {
    //   appId,
    //   args: [account],
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    btoi
    // tests/approvals/resource-encoding.algo.ts:69
    // assert(res1 === account.balance)
    frame_dig -2
    acct_params_get AcctBalance
    assert // account funded
    ==
    assert
    retsub


// tests/approvals/resource-encoding.algo.ts::C2C.testCallToValue(account: bytes, appId: uint64) -> void:
testCallToValue:
    // tests/approvals/resource-encoding.algo.ts:71
    // testCallToValue(account: Account, appId: Application) {
    proto 2 0
    b testCallToValue_block@0

testCallToValue_block@0:
    // tests/approvals/resource-encoding.algo.ts:72-75
    // const { returnValue: res1 } = abiCall(ByValue.prototype.testExplicitValue, {
    //   appId,
    //   args: [account],
    // })
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:73
    // appId,
    frame_dig -1
    // tests/approvals/resource-encoding.algo.ts:74
    // args: [account],
    frame_dig -2
    // tests/approvals/resource-encoding.algo.ts:72-75
    // const { returnValue: res1 } = abiCall(ByValue.prototype.testExplicitValue, {
    //   appId,
    //   args: [account],
    // })
    pushbytes 0xd7308a13 // method "testExplicitValue(address)uint64"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b testCallToValue_next_txn@1

testCallToValue_next_txn@1:
    // tests/approvals/resource-encoding.algo.ts:72-75
    // const { returnValue: res1 } = abiCall(ByValue.prototype.testExplicitValue, {
    //   appId,
    //   args: [account],
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    btoi
    // tests/approvals/resource-encoding.algo.ts:77
    // assert(res1 === account.balance)
    frame_dig -2
    acct_params_get AcctBalance
    assert // account funded
    ==
    assert
    retsub


// tests/approvals/resource-encoding.algo.ts::C2C.testCallToEchoResource() -> void:
testCallToEchoResource:
    // tests/approvals/resource-encoding.algo.ts:80
    // testCallToEchoResource() {
    proto 0 0
    bytec_0 // ""
    bytec_0 // ""
    b testCallToEchoResource_block@0

testCallToEchoResource_block@0:
    // tests/approvals/resource-encoding.algo.ts:83
    // const appId = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:81
    // const compiled = compileArc4(EchoResource)
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    pushbytes base64(CkIAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CiAEAAECAyYCAAQVH3x1KEIAAEIAADEbIhNBAINCAAA2GgCABHfijXSABE03AnZPAo4CADkAEEIAAEIAAEIAACJFAUIAAEMxGSISRDEYIhNENhoBFzYaAhc2GgNPAk8CTwKIAI4pTwFQsCNFAUL/1jEZIhJEMRgiE0Q2GgEXwDA2GgIXwDI2GgMXwBxPAk8CTwKIACspTwFQsCNFAUL/pjEZIk8BjgEACUIAAEIAAEL/jjEYIhJEiABlI0UBQv+GigMBQgAAI8AaF8Awi/0SRCTAGhfAMov+EkQlwBoXwByL/xJEi/0WKE8BUIv+FlCL/1CJigMBQgAAI8AaF4v9EkQkwBoXi/4SRCXAGov/EkSL/RYoTwFQi/4WUIv/UIlCAACJ)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/resource-encoding.algo.ts:83
    // const appId = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b testCallToEchoResource_next_txn@1

testCallToEchoResource_next_txn@1:
    // tests/approvals/resource-encoding.algo.ts:83
    // const appId = compiled.bareCreate().createdApp
    itxn_submit
    itxn CreatedApplicationID
    frame_bury 0
    // tests/approvals/resource-encoding.algo.ts:84-90
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:88
    // assetName: 'TEST',
    pushbytes "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/resource-encoding.algo.ts:87
    // unitName: 'T',
    pushbytes "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/resource-encoding.algo.ts:86
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/resource-encoding.algo.ts:84-89
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    pushint 3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b testCallToEchoResource_next_txn@2

testCallToEchoResource_next_txn@2:
    // tests/approvals/resource-encoding.algo.ts:84-90
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_submit
    // tests/approvals/resource-encoding.algo.ts:90
    // .submit().createdAsset
    itxn CreatedAssetID
    // tests/approvals/resource-encoding.algo.ts:84-90
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    dup
    frame_bury 1
    // tests/approvals/resource-encoding.algo.ts:92-95
    // const { returnValue: indexes } = compiled.call.echoResourceByIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:94
    // appId,
    frame_dig 0
    cover 1
    // tests/approvals/resource-encoding.algo.ts:93
    // args: [asset, Global.currentApplicationId, Txn.sender],
    global CurrentApplicationID
    cover 1
    txn Sender
    itxn_field Accounts
    itxn_field Assets
    itxn_field Applications
    // tests/approvals/resource-encoding.algo.ts:92-95
    // const { returnValue: indexes } = compiled.call.echoResourceByIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    pushbytes 0x77e28d74 // method "echoResourceByIndex(asset,application,account)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    pushbytes 0x00
    itxn_field ApplicationArgs
    bytec_2 // 0x01
    itxn_field ApplicationArgs
    bytec_2 // 0x01
    itxn_field ApplicationArgs
    // tests/approvals/resource-encoding.algo.ts:92-95
    // const { returnValue: indexes } = compiled.call.echoResourceByIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b testCallToEchoResource_next_txn@3

testCallToEchoResource_next_txn@3:
    // tests/approvals/resource-encoding.algo.ts:92-95
    // const { returnValue: indexes } = compiled.call.echoResourceByIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/resource-encoding.algo.ts:96
    // assertMatch(indexes, [asset, Global.currentApplicationId, Txn.sender])
    pushint 3 // 3
    pushint 3 // 3
    ==
    cover 1
    dup
    intc_0 // 0
    intc_1 // 8
    extract3
    btoi
    frame_dig 1
    dup
    cover 4
    ==
    uncover 2
    &&
    dig 1
    intc_1 // 8
    intc_1 // 8
    extract3
    btoi
    global CurrentApplicationID
    ==
    &&
    uncover 1
    pushint 16 // 16
    pushint 32 // 32
    extract3
    txn Sender
    ==
    &&
    assert // assert target is match for conditions
    // tests/approvals/resource-encoding.algo.ts:98-101
    // const { returnValue: resources } = compiled.call.echoResourceByValue({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:100
    // appId,
    frame_dig 0
    // tests/approvals/resource-encoding.algo.ts:99
    // args: [asset, Global.currentApplicationId, Txn.sender],
    uncover 1
    itob
    global CurrentApplicationID
    itob
    txn Sender
    uncover 2
    cover 1
    cover 2
    // tests/approvals/resource-encoding.algo.ts:98-101
    // const { returnValue: resources } = compiled.call.echoResourceByValue({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    pushbytes 0x4d370276 // method "echoResourceByValue(uint64,uint64,address)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b testCallToEchoResource_next_txn@4

testCallToEchoResource_next_txn@4:
    // tests/approvals/resource-encoding.algo.ts:98-101
    // const { returnValue: resources } = compiled.call.echoResourceByValue({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/resource-encoding.algo.ts:103
    // assertMatch(resources, [asset, Global.currentApplicationId, Txn.sender])
    pushint 3 // 3
    pushint 3 // 3
    ==
    cover 1
    dup
    intc_0 // 0
    intc_1 // 8
    extract3
    btoi
    frame_dig 1
    ==
    uncover 2
    &&
    dig 1
    intc_1 // 8
    intc_1 // 8
    extract3
    btoi
    global CurrentApplicationID
    ==
    &&
    uncover 1
    pushint 16 // 16
    pushint 32 // 32
    extract3
    txn Sender
    ==
    &&
    assert // assert target is match for conditions
    retsub


// tests/approvals/resource-encoding.algo.ts::C2C.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

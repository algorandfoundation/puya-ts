main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#0: bool = tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/resource-encoding.algo.ts::C2C.__puya_arc4_router__() -> bool:
    block@0: // L62
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@7
    block@1: // abi_routing_L62
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "testCallToIndex(address,uint64)void" => block@2, method "testCallToValue(address,uint64)void" => block@3, method "testCallToEchoResource()void" => block@4, * => block@5}
    block@2: // testCallToIndex_route_L63
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let reinterpret_Encoded(uint8[32])%0#0: Encoded(uint8[32]) = (txna ApplicationArgs 1)
        let tmp%7#0: account = decode_bytes<account>(reinterpret_Encoded(uint8[32])%0#0)
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let tmp%8#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%0#0)
        tests/approvals/resource-encoding.algo.ts::C2C.testCallToIndex(tmp%7#0, tmp%8#0)
        return 1u
    block@3: // testCallToValue_route_L72
        let tmp%9#0: uint64 = (txn OnCompletion)
        let tmp%10#0: bool = (== tmp%9#0 NoOp)
        (assert tmp%10#0) // OnCompletion is not NoOp
        let tmp%11#0: uint64 = (txn ApplicationID)
        let tmp%12#0: bool = (!= tmp%11#0 0u)
        (assert tmp%12#0) // can only call when not creating
        let reinterpret_Encoded(uint8[32])%1#0: Encoded(uint8[32]) = (txna ApplicationArgs 1)
        let tmp%13#0: account = decode_bytes<account>(reinterpret_Encoded(uint8[32])%1#0)
        let reinterpret_Encoded(uint64)%1#0: Encoded(uint64) = (txna ApplicationArgs 2)
        let tmp%14#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%1#0)
        tests/approvals/resource-encoding.algo.ts::C2C.testCallToValue(tmp%13#0, tmp%14#0)
        return 1u
    block@4: // testCallToEchoResource_route_L81
        let tmp%15#0: uint64 = (txn OnCompletion)
        let tmp%16#0: bool = (== tmp%15#0 NoOp)
        (assert tmp%16#0) // OnCompletion is not NoOp
        let tmp%17#0: uint64 = (txn ApplicationID)
        let tmp%18#0: bool = (!= tmp%17#0 0u)
        (assert tmp%18#0) // can only call when not creating
        tests/approvals/resource-encoding.algo.ts::C2C.testCallToEchoResource()
        return 1u
    block@5: // switch_case_default_L62
        goto block@6
    block@6: // switch_case_next_L62
        goto block@11
    block@7: // bare_routing_L62
        let tmp%19#0: uint64 = (txn OnCompletion)
        switch tmp%19#0 {0u => block@8, * => block@9}
    block@8: // __algots__.defaultCreate_L62
        let tmp%20#0: uint64 = (txn ApplicationID)
        let tmp%21#0: bool = (== tmp%20#0 0u)
        (assert tmp%21#0) // can only call when creating
        tests/approvals/resource-encoding.algo.ts::C2C.__algots__.defaultCreate()
        return 1u
    block@9: // switch_case_default_L62
        goto block@10
    block@10: // switch_case_next_L62
        goto block@11
    block@11: // after_if_else_L62
        return 0u

subroutine tests/approvals/resource-encoding.algo.ts::C2C.testCallToIndex(account: account, appId: uint64) -> void:
    block@0: // L63
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = appId#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "testExplicitIndex(account)uint64"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes[1] = 0x01
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
        let inner_txn_params%0%%param_Accounts_idx_0#0: account = account#0
        let inner_txn_params%0%%Accounts_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field Accounts) inner_txn_params%0%%param_Accounts_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L64
        itxn_submit
        let awst_tmp%0#0: bytes = itxn[itxn_group_idx(0)].LastLog
        let tmp%0#0: bytes = ((extract 4 0) awst_tmp%0#0)
        let tmp%1#0: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
        (assert tmp%2#0) // Bytes has valid prefix
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = tmp%0#0
        let tmp%3#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%0#0)
        let res1#0: uint64 = tmp%3#0
        let (value%0#0: uint64, check%0#0: bool) = ((acct_params_get AcctBalance) account#0)
        (assert check%0#0) // account funded
        let tmp%4#0: bool = (== res1#0 value%0#0)
        (assert tmp%4#0)
        return 

subroutine tests/approvals/resource-encoding.algo.ts::C2C.testCallToValue(account: account, appId: uint64) -> void:
    block@0: // L72
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = appId#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let tmp%0#0: Encoded(uint8[32]) = bytes_encode<uint8[32]>(account#0)
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "testExplicitValue(address)uint64"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: Encoded(uint8[32]) = tmp%0#0
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L73
        itxn_submit
        let awst_tmp%0#0: bytes = itxn[itxn_group_idx(0)].LastLog
        let tmp%1#0: bytes = ((extract 4 0) awst_tmp%0#0)
        let tmp%2#0: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%3#0: bool = (== tmp%2#0 0x151f7c75)
        (assert tmp%3#0) // Bytes has valid prefix
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = tmp%1#0
        let tmp%4#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%0#0)
        let res1#0: uint64 = tmp%4#0
        let (value%0#0: uint64, check%0#0: bool) = ((acct_params_get AcctBalance) account#0)
        (assert check%0#0) // account funded
        let tmp%5#0: bool = (== res1#0 value%0#0)
        (assert tmp%5#0)
        return 

subroutine tests/approvals/resource-encoding.algo.ts::C2C.testCallToEchoResource() -> void:
    block@0: // L81
        let (compiled.approvalProgram.0#0: bytes, compiled.approvalProgram.1#0: bytes, compiled.clearStateProgram.0#0: bytes, compiled.clearStateProgram.1#0: bytes, compiled.extraProgramPages#0: uint64, compiled.globalUints#0: uint64, compiled.globalBytes#0: uint64, compiled.localUints#0: uint64, compiled.localBytes#0: uint64) = (compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=ApprovalProgramPages, program_page=0), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=ApprovalProgramPages, program_page=1), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=ClearStateProgramPages, program_page=0), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=ClearStateProgramPages, program_page=1), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=ExtraProgramPages, program_page=None), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=GlobalNumUint, program_page=None), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=GlobalNumByteSlice, program_page=None), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=LocalNumUint, program_page=None), compiled_contract('tests/approvals/resource-encoding.algo.ts::EchoResource', field=LocalNumByteSlice, program_page=None))
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_OnCompletion_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 1u
        let inner_txn_params%0%%param_ApprovalProgramPages_idx_0#0: bytes = compiled.approvalProgram.0#0
        let inner_txn_params%0%%param_ApprovalProgramPages_idx_1#0: bytes = compiled.approvalProgram.1#0
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 2u
        let inner_txn_params%0%%param_ClearStateProgramPages_idx_0#0: bytes = compiled.clearStateProgram.0#0
        let inner_txn_params%0%%param_ClearStateProgramPages_idx_1#0: bytes = compiled.clearStateProgram.1#0
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 2u
        let inner_txn_params%0%%param_GlobalNumUint_idx_0#0: uint64 = compiled.globalUints#0
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 1u
        let inner_txn_params%0%%param_GlobalNumByteSlice_idx_0#0: uint64 = compiled.globalBytes#0
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 1u
        let inner_txn_params%0%%param_LocalNumByteSlice_idx_0#0: uint64 = compiled.localBytes#0
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 1u
        let inner_txn_params%0%%param_LocalNumUint_idx_0#0: uint64 = compiled.localUints#0
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 1u
        let inner_txn_params%0%%param_ExtraProgramPages_idx_0#0: uint64 = compiled.extraProgramPages#0
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        ((itxn_field ExtraProgramPages) inner_txn_params%0%%param_ExtraProgramPages_idx_0#0)
        ((itxn_field LocalNumUint) inner_txn_params%0%%param_LocalNumUint_idx_0#0)
        ((itxn_field LocalNumByteSlice) inner_txn_params%0%%param_LocalNumByteSlice_idx_0#0)
        ((itxn_field GlobalNumByteSlice) inner_txn_params%0%%param_GlobalNumByteSlice_idx_0#0)
        ((itxn_field GlobalNumUint) inner_txn_params%0%%param_GlobalNumUint_idx_0#0)
        ((itxn_field ClearStateProgramPages) inner_txn_params%0%%param_ClearStateProgramPages_idx_0#0)
        ((itxn_field ClearStateProgramPages) inner_txn_params%0%%param_ClearStateProgramPages_idx_1#0)
        ((itxn_field ApprovalProgramPages) inner_txn_params%0%%param_ApprovalProgramPages_idx_0#0)
        ((itxn_field ApprovalProgramPages) inner_txn_params%0%%param_ApprovalProgramPages_idx_1#0)
        ((itxn_field OnCompletion) inner_txn_params%0%%param_OnCompletion_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L84
        itxn_submit
        let tmp%0#0: uint64 = itxn[itxn_group_idx(0)].CreatedApplicationID
        let appId#0: uint64 = tmp%0#0
        itxn_begin
        let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
        let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%1%%Fee_length#0: uint64 = 1u
        let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = 3u
        let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%1%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 1u
        let inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0: bytes[1] = "T"
        let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 1u
        let inner_txn_params%1%%param_ConfigAssetName_idx_0#0: bytes[4] = "TEST"
        let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 1u
        let inner_txn_params%1%%Sender_length#0: uint64 = 0u
        let inner_txn_params%1%%Note_length#0: uint64 = 0u
        let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%1%%Amount_length#0: uint64 = 0u
        let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%1%%Type_length#0: uint64 = 0u
        let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%1%%ApplicationID_length#0: uint64 = 0u
        let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 0u
        let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%1%%Assets_length#0: uint64 = 0u
        let inner_txn_params%1%%Applications_length#0: uint64 = 0u
        let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ConfigAssetName) inner_txn_params%1%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field ConfigAssetTotal) inner_txn_params%1%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L85
        itxn_submit
        let tmp%1#0: uint64 = itxn[itxn_group_idx(0)].CreatedAssetID
        let asset#0: uint64 = tmp%1#0
        itxn_begin
        let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
        let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%2%%Fee_length#0: uint64 = 1u
        let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = appId#0
        let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%2%%param_OnCompletion_idx_0#0: uint64 = 0u
        let inner_txn_params%2%%OnCompletion_length#0: uint64 = 1u
        let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes[4] = method "echoResourceByIndex(asset,application,account)(uint64,uint64,address)"
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes[1] = 0x00
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes[1] = 0x01
        let inner_txn_params%2%%param_ApplicationArgs_idx_3#0: bytes[1] = 0x01
        let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 4u
        let tmp%2#0: uint64 = (global CurrentApplicationID)
        let inner_txn_params%2%%param_Applications_idx_0#0: uint64 = tmp%2#0
        let inner_txn_params%2%%Applications_length#0: uint64 = 1u
        let inner_txn_params%2%%param_Assets_idx_0#0: uint64 = asset#0
        let inner_txn_params%2%%Assets_length#0: uint64 = 1u
        let tmp%3#0: account = (txn Sender)
        let inner_txn_params%2%%param_Accounts_idx_0#0: account = tmp%3#0
        let inner_txn_params%2%%Accounts_length#0: uint64 = 1u
        let inner_txn_params%2%%Sender_length#0: uint64 = 0u
        let inner_txn_params%2%%Note_length#0: uint64 = 0u
        let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%2%%Amount_length#0: uint64 = 0u
        let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%2%%Type_length#0: uint64 = 0u
        let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field Accounts) inner_txn_params%2%%param_Accounts_idx_0#0)
        ((itxn_field Assets) inner_txn_params%2%%param_Assets_idx_0#0)
        ((itxn_field Applications) inner_txn_params%2%%param_Applications_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_3#0)
        ((itxn_field OnCompletion) inner_txn_params%2%%param_OnCompletion_idx_0#0)
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
        goto block@3
    block@3: // next_txn_L93
        itxn_submit
        let awst_tmp%0#0: bytes = itxn[itxn_group_idx(0)].LastLog
        let tmp%4#0: bytes = ((extract 4 0) awst_tmp%0#0)
        let tmp%5#0: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%6#0: bool = (== tmp%5#0 0x151f7c75)
        (assert tmp%6#0) // Bytes has valid prefix
        let reinterpret_Encoded(uint64,uint64,uint8[32])%0#0: Encoded(uint64,uint64,uint8[32]) = tmp%4#0
        let indexes#0: Encoded(uint64,uint64,uint8[32]) = reinterpret_Encoded(uint64,uint64,uint8[32])%0#0
        let tmp%7#0: bool = (== 3u 3u)
        let tuple_item%0#0: Encoded(uint64) = extract_value(indexes#0, 0)
        let values%0#0: uint64 = decode_bytes<uint64>(tuple_item%0#0)
        let tmp%8#0: bool = (== values%0#0 asset#0)
        let tmp%9#0: bool = (&& tmp%7#0 tmp%8#0)
        let tuple_item%1#0: Encoded(uint64) = extract_value(indexes#0, 1)
        let values%1#0: uint64 = decode_bytes<uint64>(tuple_item%1#0)
        let tmp%10#0: uint64 = (global CurrentApplicationID)
        let tmp%11#0: bool = (== values%1#0 tmp%10#0)
        let tmp%12#0: bool = (&& tmp%9#0 tmp%11#0)
        let tuple_item%2#0: Encoded(uint8[32]) = extract_value(indexes#0, 2)
        let values%2#0: account = decode_bytes<account>(tuple_item%2#0)
        let tmp%13#0: account = (txn Sender)
        let tmp%14#0: bool = (== values%2#0 tmp%13#0)
        let tmp%15#0: bool = (&& tmp%12#0 tmp%14#0)
        (assert tmp%15#0) // assert target is match for conditions
        itxn_begin
        let inner_txn_params%3#0: itxn_field_set = itxn_field_set(3)
        let inner_txn_params%3%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%3%%Fee_length#0: uint64 = 1u
        let inner_txn_params%3%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%3%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = appId#0
        let inner_txn_params%3%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%3%%param_OnCompletion_idx_0#0: uint64 = 0u
        let inner_txn_params%3%%OnCompletion_length#0: uint64 = 1u
        let tmp%16#0: Encoded(uint64) = bytes_encode<uint64>(asset#0)
        let tmp%17#0: uint64 = (global CurrentApplicationID)
        let tmp%18#0: Encoded(uint64) = bytes_encode<uint64>(tmp%17#0)
        let tmp%19#0: account = (txn Sender)
        let tmp%20#0: Encoded(uint8[32]) = bytes_encode<uint8[32]>(tmp%19#0)
        let inner_txn_params%3%%param_ApplicationArgs_idx_0#0: bytes[4] = method "echoResourceByValue(uint64,uint64,address)(uint64,uint64,address)"
        let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: Encoded(uint64) = tmp%16#0
        let inner_txn_params%3%%param_ApplicationArgs_idx_2#0: Encoded(uint64) = tmp%18#0
        let inner_txn_params%3%%param_ApplicationArgs_idx_3#0: Encoded(uint8[32]) = tmp%20#0
        let inner_txn_params%3%%ApplicationArgs_length#0: uint64 = 4u
        let inner_txn_params%3%%Sender_length#0: uint64 = 0u
        let inner_txn_params%3%%Note_length#0: uint64 = 0u
        let inner_txn_params%3%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%3%%Amount_length#0: uint64 = 0u
        let inner_txn_params%3%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%3%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%3%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%3%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%3%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%3%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%3%%Type_length#0: uint64 = 0u
        let inner_txn_params%3%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%3%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%3%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%3%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%3%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%3%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%3%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%3%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%3%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%3%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%3%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%3%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%3%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%3%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%3%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%3%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%3%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%3%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%3%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%3%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%3%%Assets_length#0: uint64 = 0u
        let inner_txn_params%3%%Applications_length#0: uint64 = 0u
        let inner_txn_params%3%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%3%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_2#0)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_3#0)
        ((itxn_field OnCompletion) inner_txn_params%3%%param_OnCompletion_idx_0#0)
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%3%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%3%%param_Fee_idx_0#0)
        goto block@4
    block@4: // next_txn_L99
        itxn_submit
        let awst_tmp%1#0: bytes = itxn[itxn_group_idx(0)].LastLog
        let tmp%21#0: bytes = ((extract 4 0) awst_tmp%1#0)
        let tmp%22#0: bytes = ((extract 0 4) awst_tmp%1#0)
        let tmp%23#0: bool = (== tmp%22#0 0x151f7c75)
        (assert tmp%23#0) // Bytes has valid prefix
        let reinterpret_Encoded(uint64,uint64,uint8[32])%1#0: Encoded(uint64,uint64,uint8[32]) = tmp%21#0
        let resources#0: Encoded(uint64,uint64,uint8[32]) = reinterpret_Encoded(uint64,uint64,uint8[32])%1#0
        let tmp%24#0: bool = (== 3u 3u)
        let tuple_item%3#0: Encoded(uint64) = extract_value(resources#0, 0)
        let values%3#0: uint64 = decode_bytes<uint64>(tuple_item%3#0)
        let tmp%25#0: bool = (== values%3#0 asset#0)
        let tmp%26#0: bool = (&& tmp%24#0 tmp%25#0)
        let tuple_item%4#0: Encoded(uint64) = extract_value(resources#0, 1)
        let values%4#0: uint64 = decode_bytes<uint64>(tuple_item%4#0)
        let tmp%27#0: uint64 = (global CurrentApplicationID)
        let tmp%28#0: bool = (== values%4#0 tmp%27#0)
        let tmp%29#0: bool = (&& tmp%26#0 tmp%28#0)
        let tuple_item%5#0: Encoded(uint8[32]) = extract_value(resources#0, 2)
        let values%5#0: account = decode_bytes<account>(tuple_item%5#0)
        let tmp%30#0: account = (txn Sender)
        let tmp%31#0: bool = (== values%5#0 tmp%30#0)
        let tmp%32#0: bool = (&& tmp%29#0 tmp%31#0)
        (assert tmp%32#0) // assert target is match for conditions
        return 

subroutine tests/approvals/resource-encoding.algo.ts::C2C.__algots__.defaultCreate() -> void:
    block@0: // L62
        return 
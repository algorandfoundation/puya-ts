#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/resource-encoding.algo.ts:31
    // class ByValue extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@5
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/resource-encoding.algo.ts:31
    // class ByValue extends Contract {
    txna ApplicationArgs 0
    pushbytes 0xd7308a13 // method "testExplicitValue(address)uint64"
    uncover 1
    match main_testExplicitValue_route@3
    b main_switch_case_next@4

main_switch_case_next@4:
    b main_after_if_else@6

main_after_if_else@6:
    // tests/approvals/resource-encoding.algo.ts:31
    // class ByValue extends Contract {
    err

main_testExplicitValue_route@3:
    // tests/approvals/resource-encoding.algo.ts:32
    // @abimethod({ resourceEncoding: 'value' })
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub testExplicitValue
    b main_switch_case_next@4

main___algots__.defaultCreate@5:
    // tests/approvals/resource-encoding.algo.ts:31
    // class ByValue extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::ByValue.testExplicitValue[routing]() -> void:
testExplicitValue:
    b testExplicitValue_block@0

testExplicitValue_block@0:
    // tests/approvals/resource-encoding.algo.ts:32
    // @abimethod({ resourceEncoding: 'value' })
    txna ApplicationArgs 1
    callsub tests/approvals/resource-encoding.algo.ts::ByValue.testExplicitValue
    itob
    pushbytes 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::ByValue.testExplicitValue(account: bytes) -> uint64:
tests/approvals/resource-encoding.algo.ts::ByValue.testExplicitValue:
    // tests/approvals/resource-encoding.algo.ts:32-33
    // @abimethod({ resourceEncoding: 'value' })
    // testExplicitValue(account: Account) {
    proto 1 1
    b tests/approvals/resource-encoding.algo.ts::ByValue.testExplicitValue_block@0

tests/approvals/resource-encoding.algo.ts::ByValue.testExplicitValue_block@0:
    // tests/approvals/resource-encoding.algo.ts:34
    // return account.balance
    frame_dig -1
    acct_params_get AcctBalance
    assert // account funded
    retsub


// tests/approvals/resource-encoding.algo.ts::ByValue.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

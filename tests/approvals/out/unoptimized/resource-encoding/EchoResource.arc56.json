{
    "name": "EchoResource",
    "structs": {},
    "methods": [
        {
            "name": "echoResourceByIndex",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echoResourceByValue",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        75,
                        116
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        182
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        80,
                        121
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        227
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        271
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        217
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        264
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        207
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        256
                    ],
                    "errorMessage": "expected asset to be passed by value"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiAEAAECAyYCAAQVH3x1KEIAAEIAADEbIhNBAINCAAA2GgCABHfijXSABE03AnZPAo4CADkAEEIAAEIAAEIAACJFAUIAAEMxGSISRDEYIhNENhoBFzYaAhc2GgNPAk8CTwKIAI4pTwFQsCNFAUL/1jEZIhJEMRgiE0Q2GgEXwDA2GgIXwDI2GgMXwBxPAk8CTwKIACspTwFQsCNFAUL/pjEZIk8BjgEACUIAAEIAAEL/jjEYIhJEiABlI0UBQv+GigMBQgAAI8AaF8Awi/0SRCTAGhfAMov+EkQlwBoXwByL/xJEi/0WKE8BUIv+FlCL/1CJigMBQgAAI8AaF4v9EkQkwBoXi/4SRCXAGov/EkSL/RYoTwFQi/4WUIv/UIlCAACJ",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
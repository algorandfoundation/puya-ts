subroutine test(a: uint64, b: uint64, c: string, d: bytes, e: uint64): bool
{
  x: uint64 = (Boolean((#0 = (Boolean(a) ? a : b))) ? #0 : e)
  assert(Boolean((Boolean((#1 = (Boolean(a) ? b : a))) ? e : #1)), comment=a or b)
  y: uint64 = (Boolean(a) ? b : a)
  z: uint64 = (Boolean(a) and Boolean(len(d)) or Boolean(y) ? (Boolean(x) ? x : y) : (Boolean(x) ? y : x))
  if (Boolean(a) or Boolean(len(c)) and Boolean(len(d))) {
    return True
  }
  f: uint64 = 0
  if (Boolean((f = (Boolean(a) ? a : b)))) {
    return True
  }
  return False
}
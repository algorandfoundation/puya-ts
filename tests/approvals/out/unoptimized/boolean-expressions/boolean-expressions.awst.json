[
  {
    "_type": "Subroutine",
    "source_location": {
      "file": "tests/approvals/boolean-expressions.algo.ts",
      "line": 4,
      "end_line": 4,
      "column": 0,
      "end_column": 67
    },
    "args": [
      {
        "_type": "SubroutineArgument",
        "name": "a",
        "source_location": {
          "file": "tests/approvals/boolean-expressions.algo.ts",
          "line": 4,
          "end_line": 4,
          "column": 14,
          "end_column": 23
        },
        "wtype": {
          "_type": "WType",
          "name": "uint64",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 2
        }
      },
      {
        "_type": "SubroutineArgument",
        "name": "b",
        "source_location": {
          "file": "tests/approvals/boolean-expressions.algo.ts",
          "line": 4,
          "end_line": 4,
          "column": 25,
          "end_column": 34
        },
        "wtype": {
          "_type": "WType",
          "name": "uint64",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 2
        }
      },
      {
        "_type": "SubroutineArgument",
        "name": "c",
        "source_location": {
          "file": "tests/approvals/boolean-expressions.algo.ts",
          "line": 4,
          "end_line": 4,
          "column": 36,
          "end_column": 45
        },
        "wtype": {
          "_type": "WType",
          "name": "string",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 1
        }
      },
      {
        "_type": "SubroutineArgument",
        "name": "d",
        "source_location": {
          "file": "tests/approvals/boolean-expressions.algo.ts",
          "line": 4,
          "end_line": 4,
          "column": 47,
          "end_column": 55
        },
        "wtype": {
          "_type": "WType",
          "name": "bytes",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 1
        }
      },
      {
        "_type": "SubroutineArgument",
        "name": "e",
        "source_location": {
          "file": "tests/approvals/boolean-expressions.algo.ts",
          "line": 4,
          "end_line": 4,
          "column": 57,
          "end_column": 66
        },
        "wtype": {
          "_type": "WType",
          "name": "uint64",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 2
        }
      }
    ],
    "return_type": {
      "_type": "WType",
      "name": "bool",
      "immutable": true,
      "ephemeral": false,
      "scalar_type": 2
    },
    "body": {
      "_type": "Block",
      "source_location": {
        "file": "tests/approvals/boolean-expressions.algo.ts",
        "line": 4,
        "end_line": 18,
        "column": 68,
        "end_column": 1
      },
      "body": [
        {
          "_type": "AssignmentStatement",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 5,
            "end_line": 5,
            "column": 8,
            "end_column": 23
          },
          "target": {
            "_type": "VarExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 5,
              "end_line": 5,
              "column": 8,
              "end_column": 9
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "name": "x"
          },
          "value": {
            "_type": "ConditionalExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 5,
              "end_line": 5,
              "column": 12,
              "end_column": 23
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 5,
                "end_line": 5,
                "column": 12,
                "end_column": 18
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "expr": {
                "_type": "SingleEvaluation",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 5,
                  "end_line": 5,
                  "column": 12,
                  "end_column": 18
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "source": {
                  "_type": "ConditionalExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 5,
                    "end_line": 5,
                    "column": 12,
                    "end_column": 18
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "condition": {
                    "_type": "ReinterpretCast",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 5,
                      "end_line": 5,
                      "column": 12,
                      "end_column": 13
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "expr": {
                      "_type": "VarExpression",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 5,
                        "end_line": 5,
                        "column": 12,
                        "end_column": 13
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "name": "a"
                    }
                  },
                  "true_expr": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 5,
                      "end_line": 5,
                      "column": 12,
                      "end_column": 13
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "a"
                  },
                  "false_expr": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 5,
                      "end_line": 5,
                      "column": 17,
                      "end_column": 18
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "b"
                  }
                },
                "_id": "0"
              }
            },
            "true_expr": {
              "_type": "SingleEvaluation",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 5,
                "end_line": 5,
                "column": 12,
                "end_column": 18
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "source": {
                "_type": "ConditionalExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 5,
                  "end_line": 5,
                  "column": 12,
                  "end_column": 18
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "condition": {
                  "_type": "ReinterpretCast",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 5,
                    "end_line": 5,
                    "column": 12,
                    "end_column": 13
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "expr": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 5,
                      "end_line": 5,
                      "column": 12,
                      "end_column": 13
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "a"
                  }
                },
                "true_expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 5,
                    "end_line": 5,
                    "column": 12,
                    "end_column": 13
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "a"
                },
                "false_expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 5,
                    "end_line": 5,
                    "column": 17,
                    "end_column": 18
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "b"
                }
              },
              "_id": "0"
            },
            "false_expr": {
              "_type": "VarExpression",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 5,
                "end_line": 5,
                "column": 22,
                "end_column": 23
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "name": "e"
            }
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 6,
            "end_line": 6,
            "column": 2,
            "end_column": 31
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 6,
              "end_line": 6,
              "column": 2,
              "end_column": 31
            },
            "wtype": {
              "_type": "WType",
              "name": "void",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": null
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 6,
                "end_line": 6,
                "column": 2,
                "end_column": 31
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "expr": {
                "_type": "ConditionalExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 6,
                  "end_line": 6,
                  "column": 9,
                  "end_column": 20
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "condition": {
                  "_type": "ReinterpretCast",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 6,
                    "end_line": 6,
                    "column": 9,
                    "end_column": 15
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "expr": {
                    "_type": "SingleEvaluation",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 6,
                      "end_line": 6,
                      "column": 9,
                      "end_column": 15
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "source": {
                      "_type": "ConditionalExpression",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 6,
                        "end_line": 6,
                        "column": 9,
                        "end_column": 15
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "condition": {
                        "_type": "ReinterpretCast",
                        "source_location": {
                          "file": "tests/approvals/boolean-expressions.algo.ts",
                          "line": 6,
                          "end_line": 6,
                          "column": 9,
                          "end_column": 10
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "bool",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 2
                        },
                        "expr": {
                          "_type": "VarExpression",
                          "source_location": {
                            "file": "tests/approvals/boolean-expressions.algo.ts",
                            "line": 6,
                            "end_line": 6,
                            "column": 9,
                            "end_column": 10
                          },
                          "wtype": {
                            "_type": "WType",
                            "name": "uint64",
                            "immutable": true,
                            "ephemeral": false,
                            "scalar_type": 2
                          },
                          "name": "a"
                        }
                      },
                      "true_expr": {
                        "_type": "VarExpression",
                        "source_location": {
                          "file": "tests/approvals/boolean-expressions.algo.ts",
                          "line": 6,
                          "end_line": 6,
                          "column": 14,
                          "end_column": 15
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "uint64",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 2
                        },
                        "name": "b"
                      },
                      "false_expr": {
                        "_type": "VarExpression",
                        "source_location": {
                          "file": "tests/approvals/boolean-expressions.algo.ts",
                          "line": 6,
                          "end_line": 6,
                          "column": 9,
                          "end_column": 10
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "uint64",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 2
                        },
                        "name": "a"
                      }
                    },
                    "_id": "1"
                  }
                },
                "true_expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 6,
                    "end_line": 6,
                    "column": 19,
                    "end_column": 20
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "e"
                },
                "false_expr": {
                  "_type": "SingleEvaluation",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 6,
                    "end_line": 6,
                    "column": 9,
                    "end_column": 15
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "source": {
                    "_type": "ConditionalExpression",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 6,
                      "end_line": 6,
                      "column": 9,
                      "end_column": 15
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "condition": {
                      "_type": "ReinterpretCast",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 6,
                        "end_line": 6,
                        "column": 9,
                        "end_column": 10
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "bool",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "expr": {
                        "_type": "VarExpression",
                        "source_location": {
                          "file": "tests/approvals/boolean-expressions.algo.ts",
                          "line": 6,
                          "end_line": 6,
                          "column": 9,
                          "end_column": 10
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "uint64",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 2
                        },
                        "name": "a"
                      }
                    },
                    "true_expr": {
                      "_type": "VarExpression",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 6,
                        "end_line": 6,
                        "column": 14,
                        "end_column": 15
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "name": "b"
                    },
                    "false_expr": {
                      "_type": "VarExpression",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 6,
                        "end_line": 6,
                        "column": 9,
                        "end_column": 10
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "name": "a"
                    }
                  },
                  "_id": "1"
                }
              }
            },
            "error_message": "a or b"
          }
        },
        {
          "_type": "AssignmentStatement",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 7,
            "end_line": 7,
            "column": 8,
            "end_column": 18
          },
          "target": {
            "_type": "VarExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 7,
              "end_line": 7,
              "column": 8,
              "end_column": 9
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "name": "y"
          },
          "value": {
            "_type": "ConditionalExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 7,
              "end_line": 7,
              "column": 12,
              "end_column": 18
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 7,
                "end_line": 7,
                "column": 12,
                "end_column": 13
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "expr": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 7,
                  "end_line": 7,
                  "column": 12,
                  "end_column": 13
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "a"
              }
            },
            "true_expr": {
              "_type": "VarExpression",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 7,
                "end_line": 7,
                "column": 17,
                "end_column": 18
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "name": "b"
            },
            "false_expr": {
              "_type": "VarExpression",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 7,
                "end_line": 7,
                "column": 12,
                "end_column": 13
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "name": "a"
            }
          }
        },
        {
          "_type": "AssignmentStatement",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 8,
            "end_line": 8,
            "column": 8,
            "end_column": 43
          },
          "target": {
            "_type": "VarExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 8,
              "end_line": 8,
              "column": 8,
              "end_column": 9
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "name": "z"
          },
          "value": {
            "_type": "ConditionalExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 8,
              "end_line": 8,
              "column": 12,
              "end_column": 43
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "condition": {
              "_type": "BooleanBinaryOperation",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 8,
                "end_line": 8,
                "column": 12,
                "end_column": 25
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "left": {
                "_type": "BooleanBinaryOperation",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 13,
                  "end_column": 19
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "left": {
                  "_type": "ReinterpretCast",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 13,
                    "end_column": 19
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "expr": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 8,
                      "end_line": 8,
                      "column": 13,
                      "end_column": 14
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "a"
                  }
                },
                "op": "and",
                "right": {
                  "_type": "ReinterpretCast",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 13,
                    "end_column": 19
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "expr": {
                    "_type": "IntrinsicCall",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 8,
                      "end_line": 8,
                      "column": 13,
                      "end_column": 19
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "op_code": "len",
                    "immediates": [],
                    "stack_args": [
                      {
                        "_type": "VarExpression",
                        "source_location": {
                          "file": "tests/approvals/boolean-expressions.algo.ts",
                          "line": 8,
                          "end_line": 8,
                          "column": 18,
                          "end_column": 19
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "bytes",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 1
                        },
                        "name": "d"
                      }
                    ]
                  }
                }
              },
              "op": "or",
              "right": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 12,
                  "end_column": 25
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 24,
                    "end_column": 25
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "y"
                }
              }
            },
            "true_expr": {
              "_type": "ConditionalExpression",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 8,
                "end_line": 8,
                "column": 28,
                "end_column": 34
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "condition": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 28,
                  "end_column": 29
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 28,
                    "end_column": 29
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "x"
                }
              },
              "true_expr": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 28,
                  "end_column": 29
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "x"
              },
              "false_expr": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 33,
                  "end_column": 34
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "y"
              }
            },
            "false_expr": {
              "_type": "ConditionalExpression",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 8,
                "end_line": 8,
                "column": 37,
                "end_column": 43
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "condition": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 37,
                  "end_column": 38
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 37,
                    "end_column": 38
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "x"
                }
              },
              "true_expr": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 42,
                  "end_column": 43
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "y"
              },
              "false_expr": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 37,
                  "end_column": 38
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "x"
              }
            }
          }
        },
        {
          "_type": "IfElse",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 9,
            "end_line": 9,
            "column": 2,
            "end_column": 20
          },
          "condition": {
            "_type": "BooleanBinaryOperation",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 9,
              "end_line": 9,
              "column": 6,
              "end_column": 19
            },
            "wtype": {
              "_type": "WType",
              "name": "bool",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "left": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 9,
                "end_line": 9,
                "column": 6,
                "end_column": 19
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "expr": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 9,
                  "end_line": 9,
                  "column": 6,
                  "end_column": 7
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "a"
              }
            },
            "op": "or",
            "right": {
              "_type": "BooleanBinaryOperation",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 9,
                "end_line": 9,
                "column": 12,
                "end_column": 18
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "left": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 9,
                  "end_line": 9,
                  "column": 12,
                  "end_column": 18
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "expr": {
                  "_type": "IntrinsicCall",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 9,
                    "end_line": 9,
                    "column": 12,
                    "end_column": 18
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "op_code": "len",
                  "immediates": [],
                  "stack_args": [
                    {
                      "_type": "VarExpression",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 9,
                        "end_line": 9,
                        "column": 12,
                        "end_column": 13
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "string",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 1
                      },
                      "name": "c"
                    }
                  ]
                }
              },
              "op": "and",
              "right": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 9,
                  "end_line": 9,
                  "column": 12,
                  "end_column": 18
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "expr": {
                  "_type": "IntrinsicCall",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 9,
                    "end_line": 9,
                    "column": 12,
                    "end_column": 18
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "op_code": "len",
                  "immediates": [],
                  "stack_args": [
                    {
                      "_type": "VarExpression",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 9,
                        "end_line": 9,
                        "column": 17,
                        "end_column": 18
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "bytes",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 1
                      },
                      "name": "d"
                    }
                  ]
                }
              }
            }
          },
          "if_branch": {
            "_type": "Block",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 9,
              "end_line": 11,
              "column": 21,
              "end_column": 3
            },
            "body": [
              {
                "_type": "Block",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 9,
                  "end_line": 11,
                  "column": 21,
                  "end_column": 3
                },
                "body": [
                  {
                    "_type": "ReturnStatement",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 10,
                      "end_line": 10,
                      "column": 4,
                      "end_column": 15
                    },
                    "value": {
                      "_type": "BoolConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 10,
                        "end_line": 10,
                        "column": 11,
                        "end_column": 15
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "bool",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "value": true
                    }
                  }
                ],
                "label": null,
                "comment": null
              }
            ],
            "label": null,
            "comment": null
          },
          "else_branch": null
        },
        {
          "_type": "AssignmentStatement",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 13,
            "end_line": 13,
            "column": 6,
            "end_column": 19
          },
          "target": {
            "_type": "VarExpression",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 13,
              "end_line": 13,
              "column": 6,
              "end_column": 7
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "name": "f"
          },
          "value": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 13,
              "end_line": 13,
              "column": 18,
              "end_column": 19
            },
            "wtype": {
              "_type": "WType",
              "name": "uint64",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "value": 0,
            "teal_alias": null
          }
        },
        {
          "_type": "IfElse",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 14,
            "end_line": 14,
            "column": 2,
            "end_column": 19
          },
          "condition": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 14,
              "end_line": 14,
              "column": 6,
              "end_column": 18
            },
            "wtype": {
              "_type": "WType",
              "name": "bool",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "expr": {
              "_type": "AssignmentExpression",
              "source_location": {
                "file": "tests/approvals/boolean-expressions.algo.ts",
                "line": 14,
                "end_line": 14,
                "column": 7,
                "end_column": 17
              },
              "wtype": {
                "_type": "WType",
                "name": "uint64",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "target": {
                "_type": "VarExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 14,
                  "end_line": 14,
                  "column": 7,
                  "end_column": 8
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "name": "f"
              },
              "value": {
                "_type": "ConditionalExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 14,
                  "end_line": 14,
                  "column": 11,
                  "end_column": 17
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "condition": {
                  "_type": "ReinterpretCast",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 14,
                    "end_line": 14,
                    "column": 11,
                    "end_column": 12
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "expr": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 14,
                      "end_line": 14,
                      "column": 11,
                      "end_column": 12
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "a"
                  }
                },
                "true_expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 14,
                    "end_line": 14,
                    "column": 11,
                    "end_column": 12
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "a"
                },
                "false_expr": {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/boolean-expressions.algo.ts",
                    "line": 14,
                    "end_line": 14,
                    "column": 16,
                    "end_column": 17
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "b"
                }
              }
            }
          },
          "if_branch": {
            "_type": "Block",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 14,
              "end_line": 16,
              "column": 20,
              "end_column": 3
            },
            "body": [
              {
                "_type": "Block",
                "source_location": {
                  "file": "tests/approvals/boolean-expressions.algo.ts",
                  "line": 14,
                  "end_line": 16,
                  "column": 20,
                  "end_column": 3
                },
                "body": [
                  {
                    "_type": "ReturnStatement",
                    "source_location": {
                      "file": "tests/approvals/boolean-expressions.algo.ts",
                      "line": 15,
                      "end_line": 15,
                      "column": 4,
                      "end_column": 15
                    },
                    "value": {
                      "_type": "BoolConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-expressions.algo.ts",
                        "line": 15,
                        "end_line": 15,
                        "column": 11,
                        "end_column": 15
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "bool",
                        "immutable": true,
                        "ephemeral": false,
                        "scalar_type": 2
                      },
                      "value": true
                    }
                  }
                ],
                "label": null,
                "comment": null
              }
            ],
            "label": null,
            "comment": null
          },
          "else_branch": null
        },
        {
          "_type": "ReturnStatement",
          "source_location": {
            "file": "tests/approvals/boolean-expressions.algo.ts",
            "line": 17,
            "end_line": 17,
            "column": 2,
            "end_column": 14
          },
          "value": {
            "_type": "BoolConstant",
            "source_location": {
              "file": "tests/approvals/boolean-expressions.algo.ts",
              "line": 17,
              "end_line": 17,
              "column": 9,
              "end_column": 14
            },
            "wtype": {
              "_type": "WType",
              "name": "bool",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 2
            },
            "value": false
          }
        }
      ],
      "label": null,
      "comment": null
    },
    "documentation": {
      "_type": "MethodDocumentation",
      "description": null,
      "args": {},
      "returns": null
    },
    "inline": null,
    "id": "tests/approvals/boolean-expressions.algo.ts::test",
    "name": "test"
  }
]
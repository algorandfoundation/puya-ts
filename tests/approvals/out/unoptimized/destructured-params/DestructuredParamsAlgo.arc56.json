{
    "name": "DestructuredParamsAlgo",
    "structs": {
        "Arc4": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "byte[]"
            },
            {
                "name": "c",
                "type": "bool"
            }
        ],
        "Object4B7314A9": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "byte[]"
            },
            {
                "name": "c",
                "type": "bool"
            }
        ]
    },
    "methods": [
        {
            "name": "test",
            "args": [
                {
                    "type": "(uint64,byte[],bool)",
                    "struct": "Object4B7314A9",
                    "name": "p"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testMutable",
            "args": [
                {
                    "type": "(uint64,byte[],bool)",
                    "struct": "Arc4",
                    "name": "p"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "init",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        38
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        120
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        151,
                        194
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        206
                    ],
                    "errorMessage": "invalid number of bytes for Arc4"
                },
                {
                    "pc": [
                        163
                    ],
                    "errorMessage": "invalid number of bytes for Object4B7314A9"
                },
                {
                    "pc": [
                        142,
                        185
                    ],
                    "errorMessage": "invalid tail pointer at index 1 of (uint64,(len+uint8[]),bool1)"
                },
                {
                    "pc": [
                        138,
                        181
                    ],
                    "errorMessage": "invalid tuple encoding"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyAEAAEICyYDAAEABUhlbGxvQgAAQgAAMRsiE0EAUEIAADEZIhJEMRgiE0EAPkIAADYaAIAE/v6nZoAENDmdtIAEg/FHSE8DjgMAFgAQAApCAABCAABCAAAAiAB3Qv/ziABGQv/tiAAVQv/nQv/nMRkiEjEYIhIQRIgBFyNDQgAANhoBSRVOAUkkWUklEkRLAU8BTwNSIlkjC4ECCCUISwEVEkSIADUjQ0IAADYaAUkVTgFJJFlJJRJESwFPAU8DUiJZIwuBAgglCEsBFRJEiAA+I0NCAACIAGkjQ4oBAUIAAIv/i/8iJFgXi/8kWYv/FYv/TwJPAlJXAgCL/4FQU08CTgFOAhZPAVBPARZQsImKAQBCAACL/yIkWIv/JFmL/xWL/08CTwJSi/+BUFMpIk8CVE8CTgFPAk8BTgJQTwFQsImKAABCAACByAMWKE8BUCgVFlcGAihQJRZXBgJPAk8BUCkiIlRQTwFQiP9ugQIWKE8BUCoVFlcGAipQJRZXBgJPAk8BUCkiI1RQTwFQiP9KiUIAAIk=",
        "clear": "C0IAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}
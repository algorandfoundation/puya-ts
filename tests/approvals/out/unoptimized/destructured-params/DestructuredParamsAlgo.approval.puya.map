{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/destructured-params.algo.ts"
  ],
  "mappings": ";;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;AAKE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADF;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AACE;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AADF;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AACE;;;AAAK;;AAAA;;AAAA;AAAA;;AAAA;;AACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIe;;;AAAc;;AAAQ;AAArC;;;AACyB;;AAAa;;;;;;;AAAa;AACnD;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8"
    },
    "6": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "8": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "9": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "10": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "13": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "16": {
      "op": "pushbytes 0xfefea766 // method \"test((uint64,byte[],bool))void\"",
      "defined_out": [
        "Method(test((uint64,byte[],bool))void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test((uint64,byte[],bool))void)"
      ]
    },
    "22": {
      "op": "pushbytes 0x83f14748 // method \"init()void\"",
      "defined_out": [
        "Method(init()void)",
        "Method(test((uint64,byte[],bool))void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test((uint64,byte[],bool))void)",
        "Method(init()void)"
      ]
    },
    "28": {
      "op": "uncover 2",
      "stack_out": [
        "Method(test((uint64,byte[],bool))void)",
        "Method(init()void)",
        "tmp%2#0"
      ]
    },
    "30": {
      "op": "match main_test_route@3 main_init_route@4",
      "stack_out": []
    },
    "36": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "37": {
      "block": "main_after_inlined_tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "38": {
      "block": "main_init_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "40": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "41": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "42": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "43": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "45": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "46": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "47": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "48": {
      "callsub": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.init",
      "op": "callsub init"
    },
    "51": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "52": {
      "op": "b main_after_inlined_tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__@12"
    },
    "55": {
      "block": "main_test_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "57": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "58": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "59": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "60": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "62": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "63": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "64": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "65": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "68": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "0"
      ]
    },
    "70": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "0",
        "8"
      ]
    },
    "71": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item0%0#0"
      ]
    },
    "72": {
      "op": "btoi",
      "defined_out": [
        "item0%0%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "item0%0%0#0"
      ]
    },
    "73": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0"
      ]
    },
    "74": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "75": {
      "op": "intc_2 // 8",
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "8"
      ]
    },
    "76": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0",
        "item_start_offset%0#0"
      ]
    },
    "77": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%7#0"
      ]
    },
    "78": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "79": {
      "op": "len",
      "defined_out": [
        "item0%0%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "item_end_offset%0#0"
      ]
    },
    "80": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%7#0"
      ]
    },
    "81": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "82": {
      "op": "uncover 3",
      "stack_out": [
        "item0%0%0#0",
        "item_end_offset%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "84": {
      "op": "uncover 3",
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "86": {
      "op": "substring3",
      "defined_out": [
        "item0%0%0#0",
        "item1%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0",
        "item1%0#0"
      ]
    },
    "87": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "tmp%7#0",
        "item1%0%0#0"
      ]
    },
    "90": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "tmp%7#0"
      ]
    },
    "91": {
      "op": "pushint 80 // 80",
      "defined_out": [
        "80",
        "item0%0%0#0",
        "item1%0%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "tmp%7#0",
        "80"
      ]
    },
    "93": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "is_true%0#0"
      ]
    },
    "94": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "97": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "98": {
      "op": "uncover 2",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "100": {
      "op": "setbit",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0"
      ]
    },
    "101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0",
        "0"
      ]
    },
    "102": {
      "op": "getbit",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ]
    },
    "103": {
      "op": "uncover 2",
      "stack_out": [
        "item1%0%0#0",
        "item2%0%0#0",
        "item0%0%0#0"
      ]
    },
    "105": {
      "op": "uncover 2",
      "stack_out": [
        "item2%0%0#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ]
    },
    "107": {
      "op": "uncover 2",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ]
    },
    "109": {
      "callsub": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test",
      "op": "callsub test",
      "stack_out": []
    },
    "112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "b main_after_inlined_tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__@12"
    },
    "116": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "118": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "119": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%12#0"
      ]
    },
    "120": {
      "op": "match main___algots__.defaultCreate@8",
      "stack_out": []
    },
    "124": {
      "block": "main_switch_case_next@10",
      "stack_in": [],
      "op": "b main_after_if_else@11"
    },
    "127": {
      "block": "main___algots__.defaultCreate@8",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "129": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "130": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "131": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "132": {
      "callsub": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "135": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "136": {
      "op": "b main_after_inlined_tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__@12"
    },
    "139": {
      "subroutine": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test",
      "params": {
        "p.a#0": "uint64",
        "p.b#0": "bytes",
        "p.c#0": "uint64"
      },
      "block": "test",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "142": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "144": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "146": {
      "op": "swap",
      "stack_out": [
        "b#0",
        "a#0"
      ]
    },
    "147": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "c#0"
      ]
    },
    "149": {
      "op": "cover 2",
      "stack_out": [
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "151": {
      "op": "itob",
      "defined_out": [
        "b#0",
        "c#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "tmp%0#0"
      ]
    },
    "152": {
      "op": "swap",
      "stack_out": [
        "c#0",
        "tmp%0#0",
        "b#0"
      ]
    },
    "153": {
      "op": "concat",
      "defined_out": [
        "c#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "c#0",
        "tmp%1#0"
      ]
    },
    "154": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "c#0"
      ]
    },
    "155": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "156": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "157": {
      "op": "log",
      "stack_out": []
    },
    "158": {
      "retsub": true,
      "op": "retsub"
    },
    "159": {
      "subroutine": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.init",
      "params": {},
      "block": "init",
      "stack_in": [],
      "op": "pushint 456 // 456",
      "defined_out": [
        "456"
      ],
      "stack_out": [
        "456"
      ]
    },
    "162": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "456"
      ],
      "stack_out": [
        "456",
        "\"\""
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"\"",
        "0",
        "456"
      ],
      "stack_out": [
        "456",
        "\"\"",
        "0"
      ]
    },
    "165": {
      "callsub": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test",
      "op": "callsub test",
      "stack_out": []
    },
    "168": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "170": {
      "op": "pushbytes \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "2"
      ],
      "stack_out": [
        "2",
        "\"Hello\""
      ]
    },
    "177": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"Hello\"",
        "1",
        "2"
      ],
      "stack_out": [
        "2",
        "\"Hello\"",
        "1"
      ]
    },
    "178": {
      "callsub": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test",
      "op": "callsub test",
      "stack_out": []
    },
    "181": {
      "retsub": true,
      "op": "retsub"
    },
    "182": {
      "subroutine": "tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}
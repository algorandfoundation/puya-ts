{
    "hints": {
        "test(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test2()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxIDgKICAgIGIgbWFpbl9ibG9ja0AwCgptYWluX2Jsb2NrQDA6CiAgICBiIG1haW5fYmxvY2tAMQoKbWFpbl9ibG9ja0AxOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6OQogICAgLy8gY2xhc3MgQXJyYXlMaXRlcmFsc0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBieiBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA5CiAgICBiIG1haW5fYWJpX3JvdXRpbmdAMgoKbWFpbl9hYmlfcm91dGluZ0AyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6OQogICAgLy8gY2xhc3MgQXJyYXlMaXRlcmFsc0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBieiBtYWluX2NyZWF0ZV9Ob09wQDcKICAgIGIgbWFpbl9jYWxsX05vT3BAMwoKbWFpbl9jYWxsX05vT3BAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjkKICAgIC8vIGNsYXNzIEFycmF5TGl0ZXJhbHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgcHVzaGJ5dGVzIDB4ZTA0YWMxOWUgLy8gbWV0aG9kICJ0ZXN0KHVpbnQ2NCx1aW50NjQpdm9pZCIKICAgIHB1c2hieXRlcyAweDM0MWEzNzk0IC8vIG1ldGhvZCAidGVzdDIoKXVpbnQ2NCIKICAgIHVuY292ZXIgMgogICAgbWF0Y2ggbWFpbl90ZXN0X3JvdXRlQDQgbWFpbl90ZXN0Ml9yb3V0ZUA1CiAgICBiIG1haW5fc3dpdGNoX2Nhc2VfbmV4dEA2CgptYWluX3N3aXRjaF9jYXNlX25leHRANjoKICAgIGIgbWFpbl9hZnRlcl9pZl9lbHNlQDgKCm1haW5fYWZ0ZXJfaWZfZWxzZUA4OgogICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjkKICAgIC8vIGNsYXNzIEFycmF5TGl0ZXJhbHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgZXJyCgptYWluX3Rlc3QyX3JvdXRlQDU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czoyMgogICAgLy8gdGVzdDIoKTogdWludDY0IHsKICAgIGNhbGxzdWIgdGVzdDIKICAgIGIgbWFpbl9zd2l0Y2hfY2FzZV9uZXh0QDYKCm1haW5fdGVzdF9yb3V0ZUA0OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6MTAKICAgIC8vIHRlc3QoYTogdWludDY0LCBiOiB1aW50NjQpIHsKICAgIGNhbGxzdWIgdGVzdAogICAgYiBtYWluX3N3aXRjaF9jYXNlX25leHRANgoKbWFpbl9jcmVhdGVfTm9PcEA3OgogICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAOAoKbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVAOToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjkKICAgIC8vIGNsYXNzIEFycmF5TGl0ZXJhbHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIE5vT3AKICAgID09CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgID09CiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBjYWxsc3ViIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZQogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0W3JvdXRpbmddKCkgLT4gdm9pZDoKdGVzdDoKICAgIGIgdGVzdF9ibG9ja0AwCgp0ZXN0X2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czoxMAogICAgLy8gdGVzdChhOiB1aW50NjQsIGI6IHVpbnQ2NCkgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBsZW4KICAgIGludGNfMiAvLyA4CiAgICA9PQogICAgYXNzZXJ0IC8vIGludmFsaWQgbnVtYmVyIG9mIGJ5dGVzIGZvciBhcmM0LnVpbnQ2NAogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgZHVwCiAgICBsZW4KICAgIGludGNfMiAvLyA4CiAgICA9PQogICAgYXNzZXJ0IC8vIGludmFsaWQgbnVtYmVyIG9mIGJ5dGVzIGZvciBhcmM0LnVpbnQ2NAogICAgYnRvaQogICAgY2FsbHN1YiB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28udGVzdAogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0Mltyb3V0aW5nXSgpIC0+IHZvaWQ6CnRlc3QyOgogICAgYiB0ZXN0Ml9ibG9ja0AwCgp0ZXN0Ml9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6MjIKICAgIC8vIHRlc3QyKCk6IHVpbnQ2NCB7CiAgICBjYWxsc3ViIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0MgogICAgaXRvYgogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHVuY292ZXIgMQogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28udGVzdChhOiB1aW50NjQsIGI6IHVpbnQ2NCkgLT4gdm9pZDoKdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6OkFycmF5TGl0ZXJhbHNBbGdvLnRlc3Q6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czoxMAogICAgLy8gdGVzdChhOiB1aW50NjQsIGI6IHVpbnQ2NCkgewogICAgcHJvdG8gMiAwCiAgICBiIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0X2Jsb2NrQDAKCnRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0X2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czoxNAogICAgLy8gY29uc3QgY29uZGl0aW9uYWxFeHBsaWNpdFR1cGxlOiBbdWludDY0LCB1aW50NjRdID0gYSA8IGIgPyBbYSwgYl0gOiBbYiwgYV0KICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfZGlnIC0xCiAgICA8CiAgICBieiB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28udGVzdF90ZXJuYXJ5X2ZhbHNlQDIKICAgIGIgdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6OkFycmF5TGl0ZXJhbHNBbGdvLnRlc3RfdGVybmFyeV90cnVlQDEKCnRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0X3Rlcm5hcnlfdHJ1ZUAxOgogICAgYiB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28udGVzdF90ZXJuYXJ5X21lcmdlQDMKCnRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0X3Rlcm5hcnlfbWVyZ2VAMzoKICAgIHJldHN1YgoKdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6OkFycmF5TGl0ZXJhbHNBbGdvLnRlc3RfdGVybmFyeV9mYWxzZUAyOgogICAgYiB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28udGVzdF90ZXJuYXJ5X21lcmdlQDMKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28udGVzdDIoKSAtPiB1aW50NjQ6CnRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0MjoKICAgIGIgdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6OkFycmF5TGl0ZXJhbHNBbGdvLnRlc3QyX2Jsb2NrQDAKCnRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjpBcnJheUxpdGVyYWxzQWxnby50ZXN0Ml9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6MjMtMjUKICAgIC8vIGNvbnN0IHg6IFNvbWVPYmogPSB7CiAgICAvLyAgIHRoaW5nczogW10sCiAgICAvLyB9CiAgICBpbnRjXzAgLy8gMAogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHB1c2hpbnQgMiAvLyAyCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgcHVzaGJ5dGVzIDB4CiAgICB1bmNvdmVyIDEKICAgIGNvbmNhdAogICAgdW5jb3ZlciAxCiAgICBjb25jYXQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1saXRlcmFscy5hbGdvLnRzOjI3CiAgICAvLyB4LnRoaW5ncy5wdXNoKG5ldyBVaW50MzIoMTIzKSkKICAgIGR1cAogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBjb3ZlciAxCiAgICBkdXAKICAgIGxlbgogICAgY292ZXIgMQogICAgZHVwCiAgICB1bmNvdmVyIDMKICAgIHVuY292ZXIgMwogICAgc3Vic3RyaW5nMwogICAgcHVzaGJ5dGVzIDB4CiAgICBwdXNoYnl0ZXMgMHgwMDAwMDA3YgogICAgY29uY2F0CiAgICBkaWcgMQogICAgdW5jb3ZlciAxCiAgICBjb25jYXQgLy8gb24gZXJyb3I6IG1heCBhcnJheSBsZW5ndGggZXhjZWVkZWQKICAgIGNvdmVyIDEKICAgIGludGNfMCAvLyAwCiAgICBleHRyYWN0X3VpbnQxNgogICAgaW50Y18xIC8vIDEKICAgICsKICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICB1bmNvdmVyIDEKICAgIGludGNfMCAvLyAwCiAgICB1bmNvdmVyIDIKICAgIHJlcGxhY2UzCiAgICBkaWcgMQogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICB1bmNvdmVyIDIKICAgIGludGNfMCAvLyAwCiAgICB1bmNvdmVyIDIKICAgIGV4dHJhY3QzCiAgICB1bmNvdmVyIDEKICAgIGNvbmNhdAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWxpdGVyYWxzLmFsZ28udHM6MjgKICAgIC8vIHJldHVybiB4LnRoaW5ncy5sZW5ndGgKICAgIGR1cAogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBjb3ZlciAxCiAgICBkdXAKICAgIGxlbgogICAgY292ZXIgMQogICAgdW5jb3ZlciAyCiAgICB1bmNvdmVyIDIKICAgIHN1YnN0cmluZzMKICAgIGludGNfMCAvLyAwCiAgICBleHRyYWN0X3VpbnQxNiAvLyBvbiBlcnJvcjogaW52YWxpZCBhcnJheSBsZW5ndGggaGVhZGVyCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktbGl0ZXJhbHMuYWxnby50czo6QXJyYXlMaXRlcmFsc0FsZ28uX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlKCkgLT4gdm9pZDoKX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlOgogICAgYiBfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMAoKX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlX2Jsb2NrQDA6CiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ArrayLiteralsAlgo",
        "methods": [
            {
                "name": "test",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test2",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock "greeting" "" TMPL_GREETING
    txn ApplicationID
    bnz main_after_if_else@2

main_if_body@1:
    callsub constructor

main_after_if_else@2:

main_block@3:
    // tests/approvals/precompiled-apps.algo.ts:24
    // export class HelloTemplate extends HelloBase {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@11

main_abi_routing@4:
    // tests/approvals/precompiled-apps.algo.ts:24
    // export class HelloTemplate extends HelloBase {
    txna ApplicationArgs 0
    pushbytes 0x4c5c61ba // method "create()void"
    pushbytes 0x24378d3c // method "delete()void"
    pushbytes 0xa0e81872 // method "update()void"
    pushbytes 0xd0a28200 // method "greet(string)string"
    uncover 4
    match main_create_route@5 main_delete_route@6 main_update_route@7 main_greet_route@8

main_switch_case_default@9:

main_switch_case_next@10:

main_after_if_else@12:
    // tests/approvals/precompiled-apps.algo.ts:24
    // export class HelloTemplate extends HelloBase {
    intc_0 // 0

main_after_inlined_tests/approvals/precompiled-apps.algo.ts::HelloTemplate.__puya_arc4_router__@13:
    return

main_greet_route@8:
    // tests/approvals/precompiled-apps.algo.ts:12
    // greet(name: string): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:24
    // export class HelloTemplate extends HelloBase {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/precompiled-apps.algo.ts:12
    // greet(name: string): string {
    callsub greet
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::HelloTemplate.__puya_arc4_router__@13

main_update_route@7:
    // tests/approvals/precompiled-apps.algo.ts:9
    // @abimethod({ allowActions: 'UpdateApplication' })
    txn OnCompletion
    pushint 4 // UpdateApplication
    ==
    assert // OnCompletion is not UpdateApplication
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub update
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::HelloTemplate.__puya_arc4_router__@13

main_delete_route@6:
    // tests/approvals/precompiled-apps.algo.ts:6
    // @abimethod({ allowActions: 'DeleteApplication' })
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub delete
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::HelloTemplate.__puya_arc4_router__@13

main_create_route@5:
    // tests/approvals/precompiled-apps.algo.ts:30
    // @abimethod({ onCreate: 'require' })
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub create
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::HelloTemplate.__puya_arc4_router__@13

main_bare_routing@11:
    b main_after_if_else@12


// tests/approvals/precompiled-apps.algo.ts::HelloTemplate.constructor() -> void:
constructor:
    // tests/approvals/precompiled-apps.algo.ts:25-28
    // constructor() {
    //   super()
    //   this.greeting.value = TemplateVar<string>('GREETING')
    // }
    proto 0 0
    // tests/approvals/precompiled-apps.algo.ts:26
    // super()
    callsub tests/approvals/precompiled-apps.algo.ts::HelloBase.constructor
    // tests/approvals/precompiled-apps.algo.ts:4
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:27
    // this.greeting.value = TemplateVar<string>('GREETING')
    bytec_2 // TMPL_GREETING
    app_global_put
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.constructor() -> void:
tests/approvals/precompiled-apps.algo.ts::HelloBase.constructor:
    // tests/approvals/precompiled-apps.algo.ts:3
    // abstract class HelloBase extends Contract {
    proto 0 0
    // tests/approvals/precompiled-apps.algo.ts:4
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    bytec_1 // ""
    app_global_put
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloTemplate.create() -> void:
create:
    // tests/approvals/precompiled-apps.algo.ts:30-31
    // @abimethod({ onCreate: 'require' })
    // create() { }
    proto 0 0
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.delete() -> void:
delete:
    // tests/approvals/precompiled-apps.algo.ts:6-7
    // @abimethod({ allowActions: 'DeleteApplication' })
    // delete() { }
    proto 0 0
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.update() -> void:
update:
    // tests/approvals/precompiled-apps.algo.ts:9-10
    // @abimethod({ allowActions: 'UpdateApplication' })
    // update() { }
    proto 0 0
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.greet(name: bytes) -> bytes:
greet:
    // tests/approvals/precompiled-apps.algo.ts:12
    // greet(name: string): string {
    proto 1 1
    // tests/approvals/precompiled-apps.algo.ts:13
    // return `${this.greeting.value} ${name}`
    intc_0 // 0
    // tests/approvals/precompiled-apps.algo.ts:4
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:13
    // return `${this.greeting.value} ${name}`
    app_global_get_ex
    assert // check GlobalState exists
    bytec_1 // ""
    swap
    concat
    pushbytes " "
    concat
    frame_dig -1
    concat
    retsub

#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1

main_block@0:

main_block@1:
    // tests/approvals/precompiled-apps.algo.ts:110
    // export class ReceivesReferenceTypes extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@6

main_abi_routing@2:
    // tests/approvals/precompiled-apps.algo.ts:110
    // export class ReceivesReferenceTypes extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x66698d18 // method "receivesReferenceTypes(uint64,address,uint64)void"
    swap
    match main_receivesReferenceTypes_route@3

main_switch_case_default@4:

main_switch_case_next@5:

main_after_if_else@10:
    // tests/approvals/precompiled-apps.algo.ts:110
    // export class ReceivesReferenceTypes extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__@11:
    return

main_receivesReferenceTypes_route@3:
    // tests/approvals/precompiled-apps.algo.ts:111
    // receivesReferenceTypes(app: Application, acc: Account, asset: Asset) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:110
    // export class ReceivesReferenceTypes extends Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    btoi
    // tests/approvals/precompiled-apps.algo.ts:111
    // receivesReferenceTypes(app: Application, acc: Account, asset: Asset) {
    uncover 2
    uncover 2
    uncover 2
    callsub receivesReferenceTypes
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__@11

main_bare_routing@6:
    // tests/approvals/precompiled-apps.algo.ts:110
    // export class ReceivesReferenceTypes extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@7

main_switch_case_default@8:

main_switch_case_next@9:
    b main_after_if_else@10

main___algots__.defaultCreate@7:
    // tests/approvals/precompiled-apps.algo.ts:110
    // export class ReceivesReferenceTypes extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__puya_arc4_router__@11


// tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.receivesReferenceTypes(app: uint64, acc: bytes, asset: uint64) -> void:
receivesReferenceTypes:
    // tests/approvals/precompiled-apps.algo.ts:111
    // receivesReferenceTypes(app: Application, acc: Account, asset: Asset) {
    proto 3 0

receivesReferenceTypes_block@0:
    // tests/approvals/precompiled-apps.algo.ts:112
    // log(app.address)
    frame_dig -3
    app_params_get AppAddress
    assert // application exists
    log
    // tests/approvals/precompiled-apps.algo.ts:113
    // log(acc.bytes)
    frame_dig -2
    log
    // tests/approvals/precompiled-apps.algo.ts:114
    // log(asset.name)
    frame_dig -1
    asset_params_get AssetName
    assert // asset exists
    log
    retsub


// tests/approvals/precompiled-apps.algo.ts::ReceivesReferenceTypes.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

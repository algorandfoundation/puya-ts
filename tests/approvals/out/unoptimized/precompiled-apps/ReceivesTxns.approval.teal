#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 3
    bytecblock 0x151f7c75

main_block@0:

main_block@1:
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@9

main_abi_routing@2:
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x8f6892ef // method "getOne()uint64"
    pushbytes 0x9cd87de3 // method "receivesAnyTxn(txn)uint64"
    pushbytes 0xd366c869 // method "receivesAssetConfig(acfg)byte[]"
    pushbytes 0x81b67352 // method "receivesAssetConfigAndPay(acfg,pay)void"
    uncover 4
    match main_getOne_route@3 main_receivesAnyTxn_route@4 main_receivesAssetConfig_route@5 main_receivesAssetConfigAndPay_route@6

main_switch_case_default@7:

main_switch_case_next@8:

main_after_if_else@13:
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__puya_arc4_router__@14:
    return

main_receivesAssetConfigAndPay_route@6:
    // tests/approvals/precompiled-apps.algo.ts:105
    // receivesAssetConfigAndPay(assetCfg: gtxn.AssetConfigTxn, payTxn: gtxn.PaymentTxn): void {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txn GroupIndex
    pushint 2 // 2
    -
    dup
    gtxns TypeEnum
    intc_2 // acfg
    ==
    assert // transaction type is acfg
    txn GroupIndex
    intc_1 // 1
    -
    dup
    gtxns TypeEnum
    intc_1 // pay
    ==
    assert // transaction type is pay
    // tests/approvals/precompiled-apps.algo.ts:105
    // receivesAssetConfigAndPay(assetCfg: gtxn.AssetConfigTxn, payTxn: gtxn.PaymentTxn): void {
    callsub receivesAssetConfigAndPay
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__puya_arc4_router__@14

main_receivesAssetConfig_route@5:
    // tests/approvals/precompiled-apps.algo.ts:102
    // receivesAssetConfig(assetCfg: gtxn.AssetConfigTxn): bytes {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txn GroupIndex
    intc_1 // 1
    -
    dup
    gtxns TypeEnum
    intc_2 // acfg
    ==
    assert // transaction type is acfg
    // tests/approvals/precompiled-apps.algo.ts:102
    // receivesAssetConfig(assetCfg: gtxn.AssetConfigTxn): bytes {
    callsub receivesAssetConfig
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__puya_arc4_router__@14

main_receivesAnyTxn_route@4:
    // tests/approvals/precompiled-apps.algo.ts:91
    // receivesAnyTxn(txn: gtxn.Transaction): uint64 {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txn GroupIndex
    intc_1 // 1
    -
    // tests/approvals/precompiled-apps.algo.ts:91
    // receivesAnyTxn(txn: gtxn.Transaction): uint64 {
    callsub receivesAnyTxn
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__puya_arc4_router__@14

main_getOne_route@3:
    // tests/approvals/precompiled-apps.algo.ts:87
    // getOne(): uint64 {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub getOne
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@10

main_switch_case_default@11:

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/precompiled-apps.algo.ts:86
    // export class ReceivesTxns extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__puya_arc4_router__@14


// tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.getOne() -> uint64:
getOne:

getOne_block@0:
    // tests/approvals/precompiled-apps.algo.ts:88
    // return 1
    intc_1 // 1
    retsub


// tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.receivesAnyTxn(txn: uint64) -> uint64:
receivesAnyTxn:
    // tests/approvals/precompiled-apps.algo.ts:91
    // receivesAnyTxn(txn: gtxn.Transaction): uint64 {
    proto 1 1
    pushbytes ""
    dup

receivesAnyTxn_block@0:
    // tests/approvals/precompiled-apps.algo.ts:92
    // switch (txn.type) {
    frame_dig -1
    gtxns TypeEnum
    dup
    // tests/approvals/precompiled-apps.algo.ts:93
    // case TransactionType.AssetConfig:
    intc_2 // 3
    ==
    // tests/approvals/precompiled-apps.algo.ts:93-94
    // case TransactionType.AssetConfig:
    //   return txn.createdAsset.id || txn.configAsset.id
    bz receivesAnyTxn_after_if_else@6

receivesAnyTxn_if_body@1:

receivesAnyTxn_block@2:
    // tests/approvals/precompiled-apps.algo.ts:94
    // return txn.createdAsset.id || txn.configAsset.id
    frame_dig -1
    gtxns CreatedAssetID
    dup
    frame_bury 0
    bz receivesAnyTxn_ternary_false@4

receivesAnyTxn_ternary_true@3:
    // tests/approvals/precompiled-apps.algo.ts:94
    // return txn.createdAsset.id || txn.configAsset.id
    frame_dig 0

receivesAnyTxn_ternary_merge@5:
    // tests/approvals/precompiled-apps.algo.ts:94
    // return txn.createdAsset.id || txn.configAsset.id
    frame_bury 0
    retsub

receivesAnyTxn_ternary_false@4:
    // tests/approvals/precompiled-apps.algo.ts:94
    // return txn.createdAsset.id || txn.configAsset.id
    frame_dig -1
    gtxns ConfigAsset
    b receivesAnyTxn_ternary_merge@5

receivesAnyTxn_after_if_else@6:
    // tests/approvals/precompiled-apps.algo.ts:95
    // case TransactionType.ApplicationCall:
    frame_dig 2
    pushint 6 // 6
    ==
    // tests/approvals/precompiled-apps.algo.ts:95-96
    // case TransactionType.ApplicationCall:
    //   return txn.createdApp.id || txn.appId.id
    bz receivesAnyTxn_after_if_else@12

receivesAnyTxn_if_body@7:

receivesAnyTxn_block@8:
    // tests/approvals/precompiled-apps.algo.ts:96
    // return txn.createdApp.id || txn.appId.id
    frame_dig -1
    gtxns CreatedApplicationID
    dup
    frame_bury 1
    bz receivesAnyTxn_ternary_false@10

receivesAnyTxn_ternary_true@9:
    // tests/approvals/precompiled-apps.algo.ts:96
    // return txn.createdApp.id || txn.appId.id
    frame_dig 1

receivesAnyTxn_ternary_merge@11:
    // tests/approvals/precompiled-apps.algo.ts:96
    // return txn.createdApp.id || txn.appId.id
    frame_bury 0
    retsub

receivesAnyTxn_ternary_false@10:
    // tests/approvals/precompiled-apps.algo.ts:96
    // return txn.createdApp.id || txn.appId.id
    frame_dig -1
    gtxns ApplicationID
    b receivesAnyTxn_ternary_merge@11

receivesAnyTxn_after_if_else@12:

receivesAnyTxn_block@13:
    // tests/approvals/precompiled-apps.algo.ts:98
    // return 0
    intc_0 // 0
    frame_bury 0
    retsub


// tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.receivesAssetConfig(assetCfg: uint64) -> bytes:
receivesAssetConfig:
    // tests/approvals/precompiled-apps.algo.ts:102
    // receivesAssetConfig(assetCfg: gtxn.AssetConfigTxn): bytes {
    proto 1 1

receivesAssetConfig_block@0:
    // tests/approvals/precompiled-apps.algo.ts:103
    // return assetCfg.txnId
    frame_dig -1
    gtxns TxID
    retsub


// tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.receivesAssetConfigAndPay(assetCfg: uint64, payTxn: uint64) -> void:
receivesAssetConfigAndPay:
    // tests/approvals/precompiled-apps.algo.ts:105
    // receivesAssetConfigAndPay(assetCfg: gtxn.AssetConfigTxn, payTxn: gtxn.PaymentTxn): void {
    proto 2 0

receivesAssetConfigAndPay_block@0:
    // tests/approvals/precompiled-apps.algo.ts:106
    // assert(assetCfg.type === TransactionType.AssetConfig)
    frame_dig -2
    gtxns TypeEnum
    intc_2 // 3
    ==
    assert
    // tests/approvals/precompiled-apps.algo.ts:107
    // assert(payTxn.type === TransactionType.Payment)
    frame_dig -1
    gtxns TypeEnum
    intc_1 // 1
    ==
    assert
    retsub


// tests/approvals/precompiled-apps.algo.ts::ReceivesTxns.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

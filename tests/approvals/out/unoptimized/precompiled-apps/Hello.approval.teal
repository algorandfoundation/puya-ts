#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 2
    bytecblock "greeting" "" 0x151f7c75 " "

main_block@0:
    txn ApplicationID
    bnz main_after_if_else@2

main_if_body@1:
    callsub constructor

main_after_if_else@2:

main_block@3:
    // tests/approvals/precompiled-apps.algo.ts:35
    // export class Hello extends HelloBase {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@12

main_abi_routing@4:
    // tests/approvals/precompiled-apps.algo.ts:35
    // export class Hello extends HelloBase {
    txna ApplicationArgs 0
    pushbytes 0x009225ae // method "helloCreate(string)void"
    pushbytes 0x24378d3c // method "delete()void"
    pushbytes 0xa0e81872 // method "update()void"
    pushbytes 0xd0a28200 // method "greet(string)string"
    pushbytes 0x5180ba20 // method "sendGreetings((string,string))string"
    uncover 5
    match main_helloCreate_route@5 main_delete_route@6 main_update_route@7 main_greet_route@8 main_sendGreetings_route@9

main_switch_case_default@10:

main_switch_case_next@11:

main_after_if_else@13:
    // tests/approvals/precompiled-apps.algo.ts:35
    // export class Hello extends HelloBase {
    intc_0 // 0

main_after_inlined_tests/approvals/precompiled-apps.algo.ts::Hello.__puya_arc4_router__@14:
    return

main_sendGreetings_route@9:
    // tests/approvals/precompiled-apps.algo.ts:30
    // sendGreetings(a: Greeting): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:35
    // export class Hello extends HelloBase {
    txna ApplicationArgs 1
    // tests/approvals/precompiled-apps.algo.ts:30
    // sendGreetings(a: Greeting): string {
    callsub sendGreetings
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_2 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::Hello.__puya_arc4_router__@14

main_greet_route@8:
    // tests/approvals/precompiled-apps.algo.ts:26
    // greet(name: string): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/precompiled-apps.algo.ts:35
    // export class Hello extends HelloBase {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/precompiled-apps.algo.ts:26
    // greet(name: string): string {
    callsub greet
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_2 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::Hello.__puya_arc4_router__@14

main_update_route@7:
    // tests/approvals/precompiled-apps.algo.ts:23
    // @abimethod({ allowActions: 'UpdateApplication' })
    txn OnCompletion
    pushint 4 // UpdateApplication
    ==
    assert // OnCompletion is not UpdateApplication
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub update
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::Hello.__puya_arc4_router__@14

main_delete_route@6:
    // tests/approvals/precompiled-apps.algo.ts:20
    // @abimethod({ allowActions: 'DeleteApplication' })
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub delete
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::Hello.__puya_arc4_router__@14

main_helloCreate_route@5:
    // tests/approvals/precompiled-apps.algo.ts:36
    // @abimethod({ name: 'helloCreate', onCreate: 'require' })
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    // tests/approvals/precompiled-apps.algo.ts:35
    // export class Hello extends HelloBase {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/precompiled-apps.algo.ts:36
    // @abimethod({ name: 'helloCreate', onCreate: 'require' })
    callsub create
    intc_1 // 1
    b main_after_inlined_tests/approvals/precompiled-apps.algo.ts::Hello.__puya_arc4_router__@14

main_bare_routing@12:
    b main_after_if_else@13


// tests/approvals/precompiled-apps.algo.ts::Hello.create(greeting: bytes) -> void:
create:
    // tests/approvals/precompiled-apps.algo.ts:36-37
    // @abimethod({ name: 'helloCreate', onCreate: 'require' })
    // create(greeting: string) {
    proto 1 0

create_block@0:
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:38
    // this.greeting.value = greeting
    frame_dig -1
    app_global_put
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.delete() -> void:
delete:

delete_block@0:
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.update() -> void:
update:

update_block@0:
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.greet(name: bytes) -> bytes:
greet:
    // tests/approvals/precompiled-apps.algo.ts:26
    // greet(name: string): string {
    proto 1 1

greet_block@0:
    // tests/approvals/precompiled-apps.algo.ts:27
    // return `${this.greeting.value} ${name}`
    intc_0 // 0
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:27
    // return `${this.greeting.value} ${name}`
    app_global_get_ex
    assert // check GlobalState exists
    bytec_1 // ""
    swap
    concat
    bytec_3 // " "
    concat
    frame_dig -1
    concat
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.sendGreetings(a: bytes) -> bytes:
sendGreetings:
    // tests/approvals/precompiled-apps.algo.ts:30
    // sendGreetings(a: Greeting): string {
    proto 1 1

sendGreetings_block@0:
    // tests/approvals/precompiled-apps.algo.ts:31
    // return `${this.greeting.value} ${a.name}${a.termination.native}`
    intc_0 // 0
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:31
    // return `${this.greeting.value} ${a.name}${a.termination.native}`
    app_global_get_ex
    assert // check GlobalState exists
    bytec_1 // ""
    swap
    concat
    bytec_3 // " "
    concat
    frame_dig -1
    intc_0 // 0
    extract_uint16
    frame_dig -1
    intc_2 // 2
    extract_uint16
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    extract 2 0
    concat
    frame_dig -1
    intc_2 // 2
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    extract 2 0
    concat
    retsub


// tests/approvals/precompiled-apps.algo.ts::HelloBase.constructor() -> void:
constructor:

constructor_block@0:

constructor_block@1:

constructor_after_inlined_@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor@2:
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    bytec_1 // ""
    app_global_put
    retsub

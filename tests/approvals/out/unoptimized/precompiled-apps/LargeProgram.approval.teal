#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/precompiled-apps.algo.ts:66
    // export class LargeProgram extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@6
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/precompiled-apps.algo.ts:66
    // export class LargeProgram extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x24378d3c // method "delete()void"
    pushbytes 0x02bf30cf // method "getBigBytesLength()uint64"
    uncover 2
    match main_delete_route@3 main_getBigBytesLength_route@4
    b main_switch_case_next@5

main_switch_case_next@5:
    b main_after_if_else@7

main_after_if_else@7:
    // tests/approvals/precompiled-apps.algo.ts:66
    // export class LargeProgram extends Contract {
    err

main_getBigBytesLength_route@4:
    // tests/approvals/precompiled-apps.algo.ts:67
    // getBigBytesLength() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub getBigBytesLength
    b main_switch_case_next@5

main_delete_route@3:
    // tests/approvals/precompiled-apps.algo.ts:71
    // @abimethod({ allowActions: 'DeleteApplication' })
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be DeleteApplication && can only call when not creating
    callsub delete
    b main_switch_case_next@5

main___algots__.defaultCreate@6:
    // tests/approvals/precompiled-apps.algo.ts:66
    // export class LargeProgram extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    return


// tests/approvals/precompiled-apps.algo.ts::getBigBytes() -> bytes:
getBigBytes:
    b getBigBytes_block@0

getBigBytes_block@0:
    // tests/approvals/precompiled-apps.algo.ts:63
    // return op.bzero(4096)
    pushint 4096 // 4096
    bzero
    retsub


// tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength[routing]() -> void:
getBigBytesLength:
    b getBigBytesLength_block@0

getBigBytesLength_block@0:
    // tests/approvals/precompiled-apps.algo.ts:67
    // getBigBytesLength() {
    callsub tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength
    itob
    pushbytes 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete[routing]() -> void:
delete:
    b delete_block@0

delete_block@0:
    // tests/approvals/precompiled-apps.algo.ts:71
    // @abimethod({ allowActions: 'DeleteApplication' })
    callsub tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete
    intc_1 // 1
    return


// tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength() -> uint64:
tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength:
    b tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength_block@0

tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength_block@0:
    // tests/approvals/precompiled-apps.algo.ts:68
    // return getBigBytes().length
    callsub getBigBytes
    len
    retsub


// tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete() -> void:
tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete:
    b tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete_block@0

tests/approvals/precompiled-apps.algo.ts::LargeProgram.delete_block@0:
    retsub


// tests/approvals/precompiled-apps.algo.ts::LargeProgram.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

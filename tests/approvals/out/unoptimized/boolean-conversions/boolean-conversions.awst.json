[
  {
    "_type": "Subroutine",
    "source_location": {
      "file": "tests/approvals/boolean-conversions.algo.ts",
      "line": 3,
      "end_line": 3,
      "column": 0,
      "end_column": 26
    },
    "args": [],
    "return_type": {
      "_type": "WType",
      "name": "void",
      "immutable": true
    },
    "body": {
      "_type": "Block",
      "source_location": {
        "file": "tests/approvals/boolean-conversions.algo.ts",
        "line": 3,
        "end_line": 17,
        "column": 27,
        "end_column": 1
      },
      "body": [
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 4,
            "end_line": 4,
            "column": 2,
            "end_column": 29
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 4,
              "end_line": 4,
              "column": 2,
              "end_column": 29
            },
            "condition": {
              "_type": "BoolConstant",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 4,
                "end_line": 4,
                "column": 9,
                "end_column": 11
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "value": true
            },
            "error_message": "Zero is falsy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 5,
            "end_line": 5,
            "column": 2,
            "end_column": 33
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 5,
              "end_line": 5,
              "column": 2,
              "end_column": 33
            },
            "condition": {
              "_type": "BoolConstant",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 5,
                "end_line": 5,
                "column": 2,
                "end_column": 33
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "value": true
            },
            "error_message": "Non zero is truthy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 6,
            "end_line": 6,
            "column": 2,
            "end_column": 37
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 6,
              "end_line": 6,
              "column": 2,
              "end_column": 37
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 6,
                "end_line": 6,
                "column": 9,
                "end_column": 19
              },
              "expr": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 6,
                  "end_line": 6,
                  "column": 9,
                  "end_column": 19
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true
                },
                "expr": {
                  "_type": "IntegerConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 6,
                    "end_line": 6,
                    "column": 17,
                    "end_column": 18
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true
                  },
                  "value": 0,
                  "teal_alias": null
                }
              }
            },
            "error_message": "Zero is falsy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 7,
            "end_line": 7,
            "column": 2,
            "end_column": 41
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 7,
              "end_line": 7,
              "column": 2,
              "end_column": 41
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 7,
                "end_line": 7,
                "column": 2,
                "end_column": 41
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "expr": {
                "_type": "IntegerConstant",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 7,
                  "end_line": 7,
                  "column": 16,
                  "end_column": 17
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true
                },
                "value": 1,
                "teal_alias": null
              }
            },
            "error_message": "Non zero is truthy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 8,
            "end_line": 8,
            "column": 2,
            "end_column": 38
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 8,
              "end_line": 8,
              "column": 2,
              "end_column": 38
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 8,
                "end_line": 8,
                "column": 9,
                "end_column": 20
              },
              "expr": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 8,
                  "end_line": 8,
                  "column": 9,
                  "end_column": 20
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true
                },
                "expr": {
                  "_type": "IntrinsicCall",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 9,
                    "end_column": 20
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true
                  },
                  "op_code": "bitlen",
                  "immediates": [],
                  "stack_args": [
                    {
                      "_type": "IntegerConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 8,
                        "end_line": 8,
                        "column": 10,
                        "end_column": 20
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "biguint",
                        "immutable": true
                      },
                      "value": 0,
                      "teal_alias": null
                    }
                  ]
                }
              }
            },
            "error_message": "Zero is falsy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 9,
            "end_line": 9,
            "column": 2,
            "end_column": 42
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 9,
              "end_line": 9,
              "column": 2,
              "end_column": 42
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 9,
                "end_line": 9,
                "column": 2,
                "end_column": 42
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "expr": {
                "_type": "IntrinsicCall",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 9,
                  "end_line": 9,
                  "column": 2,
                  "end_column": 42
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true
                },
                "op_code": "bitlen",
                "immediates": [],
                "stack_args": [
                  {
                    "_type": "IntegerConstant",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 9,
                      "end_line": 9,
                      "column": 9,
                      "end_column": 19
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "biguint",
                      "immutable": true
                    },
                    "value": 1,
                    "teal_alias": null
                  }
                ]
              }
            },
            "error_message": "Non zero is truthy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 10,
            "end_line": 10,
            "column": 2,
            "end_column": 36
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 10,
              "end_line": 10,
              "column": 2,
              "end_column": 36
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 10,
                "end_line": 10,
                "column": 9,
                "end_column": 17
              },
              "expr": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 10,
                  "end_line": 10,
                  "column": 9,
                  "end_column": 17
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true
                },
                "expr": {
                  "_type": "IntrinsicCall",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 10,
                    "end_line": 10,
                    "column": 9,
                    "end_column": 17
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true
                  },
                  "op_code": "len",
                  "immediates": [],
                  "stack_args": [
                    {
                      "_type": "BytesConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 10,
                        "end_line": 10,
                        "column": 10,
                        "end_column": 17
                      },
                      "wtype": {
                        "_type": "BytesWType",
                        "length": null
                      },
                      "value": "",
                      "encoding": "unknown"
                    }
                  ]
                }
              }
            },
            "error_message": "Empty is falsy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 11,
            "end_line": 11,
            "column": 2,
            "end_column": 45
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 11,
              "end_line": 11,
              "column": 2,
              "end_column": 45
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 11,
                "end_line": 11,
                "column": 2,
                "end_column": 45
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "expr": {
                "_type": "IntrinsicCall",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 11,
                  "end_line": 11,
                  "column": 2,
                  "end_column": 45
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true
                },
                "op_code": "len",
                "immediates": [],
                "stack_args": [
                  {
                    "_type": "BytesConstant",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 11,
                      "end_line": 11,
                      "column": 15,
                      "end_column": 20
                    },
                    "wtype": {
                      "_type": "BytesWType",
                      "length": null
                    },
                    "value": "VPaz",
                    "encoding": "utf8"
                  }
                ]
              }
            },
            "error_message": "Non empty is truthy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 13,
            "end_line": 13,
            "column": 2,
            "end_column": 34
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 13,
              "end_line": 13,
              "column": 2,
              "end_column": 34
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 13,
                "end_line": 13,
                "column": 9,
                "end_column": 15
              },
              "expr": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 13,
                  "end_line": 13,
                  "column": 9,
                  "end_column": 15
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true
                },
                "expr": {
                  "_type": "IntrinsicCall",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 13,
                    "end_line": 13,
                    "column": 9,
                    "end_column": 15
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true
                  },
                  "op_code": "len",
                  "immediates": [],
                  "stack_args": [
                    {
                      "_type": "StringConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 13,
                        "end_line": 13,
                        "column": 10,
                        "end_column": 15
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "string",
                        "immutable": true
                      },
                      "value": ""
                    }
                  ]
                }
              }
            },
            "error_message": "Empty is falsy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 14,
            "end_line": 14,
            "column": 2,
            "end_column": 38
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 14,
              "end_line": 14,
              "column": 2,
              "end_column": 38
            },
            "condition": {
              "_type": "ReinterpretCast",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 14,
                "end_line": 14,
                "column": 2,
                "end_column": 38
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "expr": {
                "_type": "IntrinsicCall",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 14,
                  "end_line": 14,
                  "column": 2,
                  "end_column": 38
                },
                "wtype": {
                  "_type": "WType",
                  "name": "uint64",
                  "immutable": true
                },
                "op_code": "len",
                "immediates": [],
                "stack_args": [
                  {
                    "_type": "StringConstant",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 14,
                      "end_line": 14,
                      "column": 9,
                      "end_column": 14
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "string",
                      "immutable": true
                    },
                    "value": "abc"
                  }
                ]
              }
            },
            "error_message": "Non empty is truthy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 15,
            "end_line": 15,
            "column": 2,
            "end_column": 34
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 15,
              "end_line": 15,
              "column": 2,
              "end_column": 34
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 15,
                "end_line": 15,
                "column": 9,
                "end_column": 15
              },
              "expr": {
                "_type": "BoolConstant",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 15,
                  "end_line": 15,
                  "column": 10,
                  "end_column": 15
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true
                },
                "value": false
              }
            },
            "error_message": "False is falsy"
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 16,
            "end_line": 16,
            "column": 2,
            "end_column": 32
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 16,
              "end_line": 16,
              "column": 2,
              "end_column": 32
            },
            "condition": {
              "_type": "BoolConstant",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 16,
                "end_line": 16,
                "column": 9,
                "end_column": 13
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "value": true
            },
            "error_message": "True is truthy"
          }
        }
      ],
      "label": null,
      "comment": null
    },
    "documentation": {
      "_type": "MethodDocumentation",
      "description": null,
      "args": {},
      "returns": null
    },
    "inline": null,
    "id": "tests/approvals/boolean-conversions.algo.ts::test_truthyness",
    "name": "test_truthyness"
  },
  {
    "_type": "Subroutine",
    "source_location": {
      "file": "tests/approvals/boolean-conversions.algo.ts",
      "line": 19,
      "end_line": 19,
      "column": 0,
      "end_column": 34
    },
    "args": [],
    "return_type": {
      "_type": "WType",
      "name": "void",
      "immutable": true
    },
    "body": {
      "_type": "Block",
      "source_location": {
        "file": "tests/approvals/boolean-conversions.algo.ts",
        "line": 19,
        "end_line": 30,
        "column": 35,
        "end_column": 1
      },
      "body": [
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 21,
            "end_line": 21,
            "column": 2,
            "end_column": 35
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 21,
              "end_line": 21,
              "column": 2,
              "end_column": 35
            },
            "condition": {
              "_type": "NumericComparisonExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 21,
                "end_line": 21,
                "column": 9,
                "end_column": 34
              },
              "lhs": {
                "_type": "Not",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 21,
                  "end_line": 21,
                  "column": 9,
                  "end_column": 19
                },
                "expr": {
                  "_type": "Not",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 21,
                    "end_line": 21,
                    "column": 9,
                    "end_column": 19
                  },
                  "expr": {
                    "_type": "BoolConstant",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 21,
                      "end_line": 21,
                      "column": 9,
                      "end_column": 19
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true
                    },
                    "value": true
                  }
                }
              },
              "operator": "==",
              "rhs": {
                "_type": "Not",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 21,
                  "end_line": 21,
                  "column": 24,
                  "end_column": 34
                },
                "expr": {
                  "_type": "Not",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 21,
                    "end_line": 21,
                    "column": 24,
                    "end_column": 34
                  },
                  "expr": {
                    "_type": "BoolConstant",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 21,
                      "end_line": 21,
                      "column": 24,
                      "end_column": 34
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true
                    },
                    "value": true
                  }
                }
              }
            },
            "error_message": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 22,
            "end_line": 22,
            "column": 2,
            "end_column": 51
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 22,
              "end_line": 22,
              "column": 2,
              "end_column": 51
            },
            "condition": {
              "_type": "NumericComparisonExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 22,
                "end_line": 22,
                "column": 9,
                "end_column": 50
              },
              "lhs": {
                "_type": "Not",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 22,
                  "end_line": 22,
                  "column": 9,
                  "end_column": 27
                },
                "expr": {
                  "_type": "Not",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 22,
                    "end_line": 22,
                    "column": 9,
                    "end_column": 27
                  },
                  "expr": {
                    "_type": "ReinterpretCast",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 22,
                      "end_line": 22,
                      "column": 9,
                      "end_column": 27
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true
                    },
                    "expr": {
                      "_type": "IntegerConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 22,
                        "end_line": 22,
                        "column": 24,
                        "end_column": 25
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true
                      },
                      "value": 1,
                      "teal_alias": null
                    }
                  }
                }
              },
              "operator": "==",
              "rhs": {
                "_type": "Not",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 22,
                  "end_line": 22,
                  "column": 32,
                  "end_column": 50
                },
                "expr": {
                  "_type": "Not",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 22,
                    "end_line": 22,
                    "column": 32,
                    "end_column": 50
                  },
                  "expr": {
                    "_type": "ReinterpretCast",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 22,
                      "end_line": 22,
                      "column": 32,
                      "end_column": 50
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true
                    },
                    "expr": {
                      "_type": "IntegerConstant",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 22,
                        "end_line": 22,
                        "column": 47,
                        "end_column": 48
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true
                      },
                      "value": 5,
                      "teal_alias": null
                    }
                  }
                }
              }
            },
            "error_message": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 23,
            "end_line": 23,
            "column": 2,
            "end_column": 53
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 23,
              "end_line": 23,
              "column": 2,
              "end_column": 53
            },
            "condition": {
              "_type": "NumericComparisonExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 23,
                "end_line": 23,
                "column": 9,
                "end_column": 52
              },
              "lhs": {
                "_type": "Not",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 23,
                  "end_line": 23,
                  "column": 9,
                  "end_column": 28
                },
                "expr": {
                  "_type": "Not",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 23,
                    "end_line": 23,
                    "column": 9,
                    "end_column": 28
                  },
                  "expr": {
                    "_type": "ReinterpretCast",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 23,
                      "end_line": 23,
                      "column": 9,
                      "end_column": 28
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true
                    },
                    "expr": {
                      "_type": "IntrinsicCall",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 23,
                        "end_line": 23,
                        "column": 9,
                        "end_column": 28
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true
                      },
                      "op_code": "bitlen",
                      "immediates": [],
                      "stack_args": [
                        {
                          "_type": "IntegerConstant",
                          "source_location": {
                            "file": "tests/approvals/boolean-conversions.algo.ts",
                            "line": 23,
                            "end_line": 23,
                            "column": 17,
                            "end_column": 27
                          },
                          "wtype": {
                            "_type": "WType",
                            "name": "biguint",
                            "immutable": true
                          },
                          "value": 1,
                          "teal_alias": null
                        }
                      ]
                    }
                  }
                }
              },
              "operator": "==",
              "rhs": {
                "_type": "Not",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 23,
                  "end_line": 23,
                  "column": 33,
                  "end_column": 52
                },
                "expr": {
                  "_type": "Not",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 23,
                    "end_line": 23,
                    "column": 33,
                    "end_column": 52
                  },
                  "expr": {
                    "_type": "ReinterpretCast",
                    "source_location": {
                      "file": "tests/approvals/boolean-conversions.algo.ts",
                      "line": 23,
                      "end_line": 23,
                      "column": 33,
                      "end_column": 52
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "bool",
                      "immutable": true
                    },
                    "expr": {
                      "_type": "IntrinsicCall",
                      "source_location": {
                        "file": "tests/approvals/boolean-conversions.algo.ts",
                        "line": 23,
                        "end_line": 23,
                        "column": 33,
                        "end_column": 52
                      },
                      "wtype": {
                        "_type": "WType",
                        "name": "uint64",
                        "immutable": true
                      },
                      "op_code": "bitlen",
                      "immediates": [],
                      "stack_args": [
                        {
                          "_type": "IntegerConstant",
                          "source_location": {
                            "file": "tests/approvals/boolean-conversions.algo.ts",
                            "line": 23,
                            "end_line": 23,
                            "column": 41,
                            "end_column": 51
                          },
                          "wtype": {
                            "_type": "WType",
                            "name": "biguint",
                            "immutable": true
                          },
                          "value": 5,
                          "teal_alias": null
                        }
                      ]
                    }
                  }
                }
              }
            },
            "error_message": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 24,
            "end_line": 24,
            "column": 2,
            "end_column": 60
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 24,
              "end_line": 24,
              "column": 2,
              "end_column": 60
            },
            "condition": {
              "_type": "NumericComparisonExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 24,
                "end_line": 24,
                "column": 9,
                "end_column": 59
              },
              "lhs": {
                "_type": "BytesComparisonExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 24,
                  "end_line": 24,
                  "column": 9,
                  "end_column": 30
                },
                "lhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 24,
                    "end_line": 24,
                    "column": 23,
                    "end_column": 28
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "VPaz",
                  "encoding": "utf8"
                },
                "operator": "!=",
                "rhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 24,
                    "end_line": 24,
                    "column": 9,
                    "end_column": 30
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "",
                  "encoding": "unknown"
                }
              },
              "operator": "==",
              "rhs": {
                "_type": "BytesComparisonExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 24,
                  "end_line": 24,
                  "column": 35,
                  "end_column": 59
                },
                "lhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 24,
                    "end_line": 24,
                    "column": 49,
                    "end_column": 57
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "VPa!sWo7",
                  "encoding": "utf8"
                },
                "operator": "!=",
                "rhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 24,
                    "end_line": 24,
                    "column": 35,
                    "end_column": 59
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "",
                  "encoding": "unknown"
                }
              }
            },
            "error_message": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 26,
            "end_line": 26,
            "column": 2,
            "end_column": 46
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 26,
              "end_line": 26,
              "column": 2,
              "end_column": 46
            },
            "condition": {
              "_type": "NumericComparisonExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 26,
                "end_line": 26,
                "column": 9,
                "end_column": 45
              },
              "lhs": {
                "_type": "BytesComparisonExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 26,
                  "end_line": 26,
                  "column": 9,
                  "end_column": 23
                },
                "lhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 26,
                    "end_line": 26,
                    "column": 17,
                    "end_column": 22
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "VPaz",
                  "encoding": "utf8"
                },
                "operator": "!=",
                "rhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 26,
                    "end_line": 26,
                    "column": 9,
                    "end_column": 23
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "",
                  "encoding": "unknown"
                }
              },
              "operator": "==",
              "rhs": {
                "_type": "BytesComparisonExpression",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 26,
                  "end_line": 26,
                  "column": 28,
                  "end_column": 45
                },
                "lhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 26,
                    "end_line": 26,
                    "column": 36,
                    "end_column": 44
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "VPa!sWo7",
                  "encoding": "utf8"
                },
                "operator": "!=",
                "rhs": {
                  "_type": "BytesConstant",
                  "source_location": {
                    "file": "tests/approvals/boolean-conversions.algo.ts",
                    "line": 26,
                    "end_line": 26,
                    "column": 28,
                    "end_column": 45
                  },
                  "wtype": {
                    "_type": "BytesWType",
                    "length": null
                  },
                  "value": "",
                  "encoding": "unknown"
                }
              }
            },
            "error_message": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/boolean-conversions.algo.ts",
            "line": 29,
            "end_line": 29,
            "column": 2,
            "end_column": 21
          },
          "expr": {
            "_type": "AssertExpression",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 29,
              "end_line": 29,
              "column": 2,
              "end_column": 21
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 29,
                "end_line": 29,
                "column": 9,
                "end_column": 20
              },
              "expr": {
                "_type": "BoolConstant",
                "source_location": {
                  "file": "tests/approvals/boolean-conversions.algo.ts",
                  "line": 29,
                  "end_line": 29,
                  "column": 10,
                  "end_column": 20
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true
                },
                "value": false
              }
            },
            "error_message": null
          }
        }
      ],
      "label": null,
      "comment": null
    },
    "documentation": {
      "_type": "MethodDocumentation",
      "description": null,
      "args": {},
      "returns": null
    },
    "inline": null,
    "id": "tests/approvals/boolean-conversions.algo.ts::test_booleans_are_equal",
    "name": "test_booleans_are_equal"
  },
  {
    "_type": "Contract",
    "source_location": {
      "file": "tests/approvals/boolean-conversions.algo.ts",
      "line": 32,
      "end_line": 32,
      "column": 0,
      "end_column": 58
    },
    "id": "tests/approvals/boolean-conversions.algo.ts::BooleanConversionsAlgo",
    "name": "BooleanConversionsAlgo",
    "description": null,
    "method_resolution_order": [
      "@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract"
    ],
    "approval_program": {
      "_type": "ContractMethod",
      "source_location": {
        "file": "tests/approvals/boolean-conversions.algo.ts",
        "line": 33,
        "end_line": 33,
        "column": 2,
        "end_column": 28
      },
      "args": [],
      "return_type": {
        "_type": "WType",
        "name": "bool",
        "immutable": true
      },
      "body": {
        "_type": "Block",
        "source_location": {
          "file": "tests/approvals/boolean-conversions.algo.ts",
          "line": 33,
          "end_line": 37,
          "column": 29,
          "end_column": 3
        },
        "body": [
          {
            "_type": "ExpressionStatement",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 34,
              "end_line": 34,
              "column": 4,
              "end_column": 21
            },
            "expr": {
              "_type": "SubroutineCallExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 34,
                "end_line": 34,
                "column": 4,
                "end_column": 21
              },
              "wtype": {
                "_type": "WType",
                "name": "void",
                "immutable": true
              },
              "target": {
                "_type": "SubroutineID",
                "target": "tests/approvals/boolean-conversions.algo.ts::test_truthyness"
              },
              "args": []
            }
          },
          {
            "_type": "ExpressionStatement",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 35,
              "end_line": 35,
              "column": 4,
              "end_column": 29
            },
            "expr": {
              "_type": "SubroutineCallExpression",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 35,
                "end_line": 35,
                "column": 4,
                "end_column": 29
              },
              "wtype": {
                "_type": "WType",
                "name": "void",
                "immutable": true
              },
              "target": {
                "_type": "SubroutineID",
                "target": "tests/approvals/boolean-conversions.algo.ts::test_booleans_are_equal"
              },
              "args": []
            }
          },
          {
            "_type": "ReturnStatement",
            "source_location": {
              "file": "tests/approvals/boolean-conversions.algo.ts",
              "line": 36,
              "end_line": 36,
              "column": 4,
              "end_column": 15
            },
            "value": {
              "_type": "BoolConstant",
              "source_location": {
                "file": "tests/approvals/boolean-conversions.algo.ts",
                "line": 36,
                "end_line": 36,
                "column": 11,
                "end_column": 15
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "value": true
            }
          }
        ],
        "label": null,
        "comment": null
      },
      "documentation": {
        "_type": "MethodDocumentation",
        "description": null,
        "args": {},
        "returns": null
      },
      "inline": null,
      "cref": "tests/approvals/boolean-conversions.algo.ts::BooleanConversionsAlgo",
      "member_name": "approvalProgram",
      "arc4_method_config": null
    },
    "clear_program": {
      "_type": "ContractMethod",
      "source_location": {
        "file": null,
        "line": 1,
        "end_line": 1,
        "column": 0,
        "end_column": 1
      },
      "args": [],
      "return_type": {
        "_type": "WType",
        "name": "bool",
        "immutable": true
      },
      "body": {
        "_type": "Block",
        "source_location": {
          "file": null,
          "line": 1,
          "end_line": 1,
          "column": 0,
          "end_column": 1
        },
        "body": [
          {
            "_type": "ReturnStatement",
            "source_location": {
              "file": null,
              "line": 1,
              "end_line": 1,
              "column": 0,
              "end_column": 1
            },
            "value": {
              "_type": "BoolConstant",
              "source_location": {
                "file": null,
                "line": 1,
                "end_line": 1,
                "column": 0,
                "end_column": 1
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true
              },
              "value": true
            }
          }
        ],
        "label": null,
        "comment": null
      },
      "documentation": {
        "_type": "MethodDocumentation",
        "description": null,
        "args": {},
        "returns": null
      },
      "inline": null,
      "cref": "@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract",
      "member_name": "clearStateProgram",
      "arc4_method_config": null
    },
    "methods": [],
    "app_state": [],
    "state_totals": {
      "_type": "StateTotals",
      "global_uints": null,
      "local_uints": null,
      "global_bytes": null,
      "local_bytes": null
    },
    "reserved_scratch_space": [],
    "avm_version": null
  }
]
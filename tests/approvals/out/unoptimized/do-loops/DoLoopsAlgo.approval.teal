#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 8
    bytecblock 0x151f7c75
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@10
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    bz main_create_NoOp@8
    b main_call_NoOp@3

main_call_NoOp@3:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x39239792 // method "testDo(uint64)uint64"
    pushbytes 0xace2eb21 // method "testDoBreak(uint64,uint64)uint64"
    pushbytes 0x78e8d516 // method "testDoContinue(uint64,uint64)uint64"
    uncover 3
    match main_testDo_route@4 main_testDoBreak_route@5 main_testDoContinue_route@6
    b main_switch_case_next@7

main_switch_case_next@7:
    b main_after_if_else@9

main_after_if_else@9:
    b main_after_if_else@11

main_after_if_else@11:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    err

main_testDoContinue_route@6:
    // tests/approvals/do-loops.algo.ts:23
    // testDoContinue(stop: uint64, mod: uint64) {
    callsub testDoContinue
    b main_switch_case_next@7

main_testDoBreak_route@5:
    // tests/approvals/do-loops.algo.ts:12
    // testDoBreak(stop: uint64, breakMod: uint64) {
    callsub testDoBreak
    b main_switch_case_next@7

main_testDo_route@4:
    // tests/approvals/do-loops.algo.ts:5
    // testDo(stop: uint64) {
    callsub testDo
    b main_switch_case_next@7

main_create_NoOp@8:
    b main_after_if_else@9

main___algots__.defaultCreate@10:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    return


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo[routing]() -> void:
testDo:
    b testDo_block@0

testDo_block@0:
    // tests/approvals/do-loops.algo.ts:5
    // testDo(stop: uint64) {
    txna ApplicationArgs 1
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    callsub tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak[routing]() -> void:
testDoBreak:
    b testDoBreak_block@0

testDoBreak_block@0:
    // tests/approvals/do-loops.algo.ts:12
    // testDoBreak(stop: uint64, breakMod: uint64) {
    txna ApplicationArgs 1
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    callsub tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue[routing]() -> void:
testDoContinue:
    b testDoContinue_block@0

testDoContinue_block@0:
    // tests/approvals/do-loops.algo.ts:23
    // testDoContinue(stop: uint64, mod: uint64) {
    txna ApplicationArgs 1
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_2 // 8
    ==
    assert // invalid number of bytes for uint64
    btoi
    callsub tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo(stop: uint64) -> uint64:
tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo:
    // tests/approvals/do-loops.algo.ts:5
    // testDo(stop: uint64) {
    proto 1 1
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_block@0

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_block@0:
    // tests/approvals/do-loops.algo.ts:6
    // let i = Uint64(0)
    intc_0 // 0
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_while_top@1

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_while_top@1:
    // tests/approvals/do-loops.algo.ts:7-9
    // do {
    //   i += 1
    // } while (i < stop)
    intc_1 // 1
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_after_while@5
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_while_body@2

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_while_body@2:
    // tests/approvals/do-loops.algo.ts:8
    // i += 1
    frame_dig 0
    intc_1 // 1
    +
    dup
    frame_bury 0
    // tests/approvals/do-loops.algo.ts:9
    // } while (i < stop)
    frame_dig -1
    <
    bnz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_after_if_else@4
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_if_body@3

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_if_body@3:
    // tests/approvals/do-loops.algo.ts:7-9
    // do {
    //   i += 1
    // } while (i < stop)
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_block@6

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_block@6:
    // tests/approvals/do-loops.algo.ts:10
    // return i
    frame_dig 0
    uncover 1
    retsub

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_after_if_else@4:
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_while_top@1

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_after_while@5:
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo_block@6


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak(stop: uint64, breakMod: uint64) -> uint64:
tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak:
    // tests/approvals/do-loops.algo.ts:12
    // testDoBreak(stop: uint64, breakMod: uint64) {
    proto 2 1
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_block@0

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_block@0:
    // tests/approvals/do-loops.algo.ts:13
    // let total = Uint64(0)
    intc_0 // 0
    // tests/approvals/do-loops.algo.ts:14
    // let i = Uint64(0)
    intc_0 // 0
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_while_top@1

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_while_top@1:
    // tests/approvals/do-loops.algo.ts:15-20
    // do {
    //   if (i > 0 && i % breakMod === 0) break
    // 
    //   i += 1
    //   total += i
    // } while (i < stop)
    intc_1 // 1
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_while@8
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_while_body@2

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_while_body@2:
    // tests/approvals/do-loops.algo.ts:16
    // if (i > 0 && i % breakMod === 0) break
    frame_dig 1
    intc_0 // 0
    >
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_if_else@5
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_and_contd@3

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_and_contd@3:
    // tests/approvals/do-loops.algo.ts:16
    // if (i > 0 && i % breakMod === 0) break
    frame_dig 1
    frame_dig -1
    %
    intc_0 // 0
    ==
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_if_else@5
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_if_body@4

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_if_body@4:
    // tests/approvals/do-loops.algo.ts:16
    // if (i > 0 && i % breakMod === 0) break
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_block@9

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_block@9:
    // tests/approvals/do-loops.algo.ts:21
    // return total
    retsub

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_if_else@5:
    // tests/approvals/do-loops.algo.ts:18
    // i += 1
    frame_dig 1
    intc_1 // 1
    +
    dup
    frame_bury 1
    // tests/approvals/do-loops.algo.ts:19
    // total += i
    frame_dig 0
    dig 1
    +
    frame_bury 0
    // tests/approvals/do-loops.algo.ts:20
    // } while (i < stop)
    frame_dig -2
    <
    bnz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_if_else@7
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_if_body@6

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_if_body@6:
    // tests/approvals/do-loops.algo.ts:15-20
    // do {
    //   if (i > 0 && i % breakMod === 0) break
    // 
    //   i += 1
    //   total += i
    // } while (i < stop)
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_block@9

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_if_else@7:
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_while_top@1

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_after_while@8:
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak_block@9


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue(stop: uint64, mod: uint64) -> uint64:
tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue:
    // tests/approvals/do-loops.algo.ts:23
    // testDoContinue(stop: uint64, mod: uint64) {
    proto 2 1
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@0

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@0:
    // tests/approvals/do-loops.algo.ts:24
    // let i = Uint64(0)
    intc_0 // 0
    // tests/approvals/do-loops.algo.ts:25
    // let total = Uint64(0)
    intc_0 // 0
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_while_top@1

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_while_top@1:
    // tests/approvals/do-loops.algo.ts:26-34
    // do {
    //   if (i > 0 && i % mod === 0) {
    //     total += 2
    //     i += 1
    //     continue
    //   }
    //   total += 1
    //   i += 1
    // } while (i < stop)
    intc_1 // 1
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_while@9
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_while_body@2

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_while_body@2:
    // tests/approvals/do-loops.algo.ts:27
    // if (i > 0 && i % mod === 0) {
    frame_dig 0
    intc_0 // 0
    >
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_if_else@5
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_and_contd@3

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_and_contd@3:
    // tests/approvals/do-loops.algo.ts:27
    // if (i > 0 && i % mod === 0) {
    frame_dig 0
    frame_dig -1
    %
    intc_0 // 0
    ==
    bz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_if_else@5
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_if_body@4

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_if_body@4:
    // tests/approvals/do-loops.algo.ts:28
    // total += 2
    frame_dig 1
    pushint 2 // 2
    +
    frame_bury 1
    // tests/approvals/do-loops.algo.ts:29
    // i += 1
    frame_dig 0
    intc_1 // 1
    +
    frame_bury 0
    // tests/approvals/do-loops.algo.ts:30
    // continue
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@6

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@6:
    // tests/approvals/do-loops.algo.ts:34
    // } while (i < stop)
    frame_dig 0
    frame_dig -2
    <
    bnz tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_if_else@8
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_if_body@7

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_if_body@7:
    // tests/approvals/do-loops.algo.ts:26-34
    // do {
    //   if (i > 0 && i % mod === 0) {
    //     total += 2
    //     i += 1
    //     continue
    //   }
    //   total += 1
    //   i += 1
    // } while (i < stop)
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@10

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@10:
    // tests/approvals/do-loops.algo.ts:35
    // return total
    frame_dig 1
    frame_bury 0
    retsub

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_if_else@8:
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_while_top@1

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_if_else@5:
    // tests/approvals/do-loops.algo.ts:32
    // total += 1
    frame_dig 1
    intc_1 // 1
    +
    frame_bury 1
    // tests/approvals/do-loops.algo.ts:33
    // i += 1
    frame_dig 0
    intc_1 // 1
    +
    frame_bury 0
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@6

tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_after_while@9:
    b tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue_block@10


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

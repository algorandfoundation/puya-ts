#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock 0x151f7c75

main_block@0:

main_block@1:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@8

main_abi_routing@2:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x39239792 // method "testDo(uint64)uint64"
    pushbytes 0xace2eb21 // method "testDoBreak(uint64,uint64)uint64"
    pushbytes 0x78e8d516 // method "testDoContinue(uint64,uint64)uint64"
    uncover 3
    match main_testDo_route@3 main_testDoBreak_route@4 main_testDoContinue_route@5

main_switch_case_default@6:

main_switch_case_next@7:

main_after_if_else@12:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__@13:
    return

main_testDoContinue_route@5:
    // tests/approvals/do-loops.algo.ts:23
    // testDoContinue(stop: uint64, mod: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/approvals/do-loops.algo.ts:23
    // testDoContinue(stop: uint64, mod: uint64) {
    callsub testDoContinue
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__@13

main_testDoBreak_route@4:
    // tests/approvals/do-loops.algo.ts:12
    // testDoBreak(stop: uint64, breakMod: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/approvals/do-loops.algo.ts:12
    // testDoBreak(stop: uint64, breakMod: uint64) {
    callsub testDoBreak
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__@13

main_testDo_route@3:
    // tests/approvals/do-loops.algo.ts:5
    // testDo(stop: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    btoi
    // tests/approvals/do-loops.algo.ts:5
    // testDo(stop: uint64) {
    callsub testDo
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__@13

main_bare_routing@8:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@9

main_switch_case_default@10:

main_switch_case_next@11:
    b main_after_if_else@12

main___algots__.defaultCreate@9:
    // tests/approvals/do-loops.algo.ts:4
    // export class DoLoopsAlgo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__puya_arc4_router__@13


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDo(stop: uint64) -> uint64:
testDo:
    // tests/approvals/do-loops.algo.ts:5
    // testDo(stop: uint64) {
    proto 1 1

testDo_block@0:
    // tests/approvals/do-loops.algo.ts:6
    // let i = Uint64(0)
    intc_0 // 0

testDo_while_top@1:
    // tests/approvals/do-loops.algo.ts:7-9
    // do {
    //   i += 1
    // } while (i < stop)
    intc_1 // 1
    bz testDo_after_while@5

testDo_while_body@2:
    // tests/approvals/do-loops.algo.ts:8
    // i += 1
    frame_dig 0
    intc_1 // 1
    +
    dup
    frame_bury 0
    // tests/approvals/do-loops.algo.ts:9
    // } while (i < stop)
    frame_dig -1
    <
    bnz testDo_after_if_else@4

testDo_if_body@3:

testDo_block@6:
    // tests/approvals/do-loops.algo.ts:10
    // return i
    frame_dig 0
    swap
    retsub

testDo_after_if_else@4:
    b testDo_while_top@1

testDo_after_while@5:
    b testDo_block@6


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoBreak(stop: uint64, breakMod: uint64) -> uint64:
testDoBreak:
    // tests/approvals/do-loops.algo.ts:12
    // testDoBreak(stop: uint64, breakMod: uint64) {
    proto 2 1

testDoBreak_block@0:
    // tests/approvals/do-loops.algo.ts:13
    // let total = Uint64(0)
    intc_0 // 0
    // tests/approvals/do-loops.algo.ts:14
    // let i = Uint64(0)
    dup

testDoBreak_while_top@1:
    // tests/approvals/do-loops.algo.ts:15-20
    // do {
    //   if (i > 0 && i % breakMod === 0) break
    // 
    //   i += 1
    //   total += i
    // } while (i < stop)
    intc_1 // 1
    bz testDoBreak_after_while@8

testDoBreak_while_body@2:
    // tests/approvals/do-loops.algo.ts:16
    // if (i > 0 && i % breakMod === 0) break
    frame_dig 1
    intc_0 // 0
    >
    bz testDoBreak_after_if_else@5

testDoBreak_and_contd@3:
    // tests/approvals/do-loops.algo.ts:16
    // if (i > 0 && i % breakMod === 0) break
    frame_dig 1
    frame_dig -1
    %
    intc_0 // 0
    ==
    bz testDoBreak_after_if_else@5

testDoBreak_if_body@4:

testDoBreak_block@9:
    // tests/approvals/do-loops.algo.ts:21
    // return total
    retsub

testDoBreak_after_if_else@5:
    // tests/approvals/do-loops.algo.ts:18
    // i += 1
    frame_dig 1
    intc_1 // 1
    +
    dup
    frame_bury 1
    // tests/approvals/do-loops.algo.ts:19
    // total += i
    frame_dig 0
    dig 1
    +
    frame_bury 0
    // tests/approvals/do-loops.algo.ts:20
    // } while (i < stop)
    frame_dig -2
    <
    bnz testDoBreak_after_if_else@7

testDoBreak_if_body@6:
    // tests/approvals/do-loops.algo.ts:15-20
    // do {
    //   if (i > 0 && i % breakMod === 0) break
    // 
    //   i += 1
    //   total += i
    // } while (i < stop)
    b testDoBreak_block@9

testDoBreak_after_if_else@7:
    b testDoBreak_while_top@1

testDoBreak_after_while@8:
    b testDoBreak_block@9


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.testDoContinue(stop: uint64, mod: uint64) -> uint64:
testDoContinue:
    // tests/approvals/do-loops.algo.ts:23
    // testDoContinue(stop: uint64, mod: uint64) {
    proto 2 1

testDoContinue_block@0:
    // tests/approvals/do-loops.algo.ts:24
    // let i = Uint64(0)
    intc_0 // 0
    // tests/approvals/do-loops.algo.ts:25
    // let total = Uint64(0)
    dup

testDoContinue_while_top@1:
    // tests/approvals/do-loops.algo.ts:26-34
    // do {
    //   if (i > 0 && i % mod === 0) {
    //     total += 2
    //     i += 1
    //     continue
    //   }
    //   total += 1
    //   i += 1
    // } while (i < stop)
    intc_1 // 1
    bz testDoContinue_after_while@9

testDoContinue_while_body@2:
    // tests/approvals/do-loops.algo.ts:27
    // if (i > 0 && i % mod === 0) {
    frame_dig 0
    intc_0 // 0
    >
    bz testDoContinue_after_if_else@5

testDoContinue_and_contd@3:
    // tests/approvals/do-loops.algo.ts:27
    // if (i > 0 && i % mod === 0) {
    frame_dig 0
    frame_dig -1
    %
    intc_0 // 0
    ==
    bz testDoContinue_after_if_else@5

testDoContinue_if_body@4:
    // tests/approvals/do-loops.algo.ts:28
    // total += 2
    frame_dig 1
    pushint 2 // 2
    +
    frame_bury 1
    // tests/approvals/do-loops.algo.ts:29
    // i += 1
    frame_dig 0
    intc_1 // 1
    +
    frame_bury 0

testDoContinue_block@6:
    // tests/approvals/do-loops.algo.ts:34
    // } while (i < stop)
    frame_dig 0
    frame_dig -2
    <
    bnz testDoContinue_after_if_else@8

testDoContinue_if_body@7:

testDoContinue_block@10:
    // tests/approvals/do-loops.algo.ts:35
    // return total
    frame_dig 1
    frame_bury 0
    retsub

testDoContinue_after_if_else@8:
    b testDoContinue_while_top@1

testDoContinue_after_if_else@5:
    // tests/approvals/do-loops.algo.ts:32
    // total += 1
    frame_dig 1
    intc_1 // 1
    +
    frame_bury 1
    // tests/approvals/do-loops.algo.ts:33
    // i += 1
    frame_dig 0
    intc_1 // 1
    +
    frame_bury 0
    b testDoContinue_block@6

testDoContinue_after_while@9:
    b testDoContinue_block@10


// tests/approvals/do-loops.algo.ts::DoLoopsAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

contract DoLoopsAlgo
{
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  testDo(stop: uint64): uint64
  {
    i: uint64 = 0
    while (True) {
      i: uint64 = i + 1
      if (!i < stop) {
        goto #loop₁ᵇ
      }
    }
    #loop₁ᵇ:
    return i
  }
  
  testDoBreak(stop: uint64, breakMod: uint64): uint64
  {
    total: uint64 = 0
    i: uint64 = 0
    while (True) {
      if (i > 0 and i % breakMod == 0) {
        goto #loop₁ᵇ
      }
      i: uint64 = i + 1
      total: uint64 = total + i
      if (!i < stop) {
        goto #loop₁ᵇ
      }
    }
    #loop₁ᵇ:
    return total
  }
  
  testDoContinue(stop: uint64, mod: uint64): uint64
  {
    i: uint64 = 0
    total: uint64 = 0
    while (True) {
      if (i > 0 and i % mod == 0) {
        total: uint64 = total + 2
        i: uint64 = i + 1
        goto #loop₁ᶜ
      }
      total: uint64 = total + 1
      i: uint64 = i + 1
      #loop₁ᶜ:
      if (!i < stop) {
        goto #loop₁ᵇ
      }
    }
    #loop₁ᵇ:
    return total
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
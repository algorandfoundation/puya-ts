{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/global-state.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUE;AAAA;AAWwB;AAAA;;AAAtB;AAXF;AAAA;AAAA;AAAA;AAYkC;AAAzB;AAAP;AAEmD;AAApB;;AAAR;AAdzB;AAcE;AAAA;AAhBF;;;;;;;;;;;AAkB+B;;;;;AAA7B;AAEO;;AAAP;AAbA;;;AALF;AAA+C;AAA/C;AAC+D;;;;;;;;;;;AAAf;;AAAhD;AAPA;AAAA;AAAA;AAAA;AAYsC;AAA7B;AAAP;AANF;AAAA;AAAA;AAAA;AAI4B;;;;;;;;;;AAGA;AAR5B;;;;;;;;;;;;;;AAQE;AAAA;;AAbF;AAA4C;AAA5C;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "tests/approvals/global-state.algo.ts::TestContract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2"
    },
    "5": {
      "op": "bytecblock \"testState\" \"baseTestState\" \"testing 123\""
    },
    "43": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "45": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "48": {
      "block": "main_if_body@1",
      "stack_in": [],
      "callsub": "tests/approvals/global-state.algo.ts::TestContract.constructor",
      "op": "callsub constructor"
    },
    "51": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "52": {
      "op": "bytec_0 // \"testState\"",
      "defined_out": [
        "\"testState\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"testState\""
      ]
    },
    "53": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "54": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "56": {
      "error": "State should have value",
      "op": "assert // State should have value",
      "stack_out": []
    },
    "57": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "58": {
      "op": "bytec_0 // \"testState\"",
      "stack_out": [
        "0",
        "\"testState\""
      ]
    },
    "59": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "60": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "61": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "2"
      ]
    },
    "62": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "63": {
      "error": "Value should equal 2",
      "op": "assert // Value should equal 2",
      "stack_out": []
    },
    "64": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "65": {
      "op": "txnas ApplicationArgs",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "67": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "68": {
      "op": "bytec_0 // \"testState\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"testState\""
      ]
    },
    "69": {
      "op": "swap",
      "stack_out": [
        "\"testState\"",
        "new_state_value%0#0"
      ]
    },
    "70": {
      "op": "app_global_put",
      "stack_out": []
    },
    "71": {
      "op": "pushbytes \"noInitial\"",
      "defined_out": [
        "\"noInitial\""
      ],
      "stack_out": [
        "\"noInitial\""
      ]
    },
    "82": {
      "op": "pushbytes \"abc\"",
      "defined_out": [
        "\"abc\"",
        "\"noInitial\""
      ],
      "stack_out": [
        "\"noInitial\"",
        "\"abc\""
      ]
    },
    "87": {
      "op": "app_global_put",
      "stack_out": []
    },
    "88": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "90": {
      "op": "return",
      "stack_out": []
    },
    "91": {
      "subroutine": "tests/approvals/global-state.algo.ts::TestContract.constructor",
      "params": {},
      "block": "constructor",
      "stack_in": [],
      "callsub": "tests/approvals/global-state.algo.ts::BaseTestContract.constructor",
      "op": "callsub tests/approvals/global-state.algo.ts::BaseTestContract.constructor"
    },
    "94": {
      "op": "bytec_0 // \"testState\"",
      "defined_out": [
        "\"testState\""
      ],
      "stack_out": [
        "\"testState\""
      ]
    },
    "95": {
      "op": "intc_1 // 2",
      "defined_out": [
        "\"testState\"",
        "2"
      ],
      "stack_out": [
        "\"testState\"",
        "2"
      ]
    },
    "96": {
      "op": "app_global_put",
      "stack_out": []
    },
    "97": {
      "op": "pushbytes \"TESTSTATE\"",
      "defined_out": [
        "\"TESTSTATE\""
      ],
      "stack_out": [
        "\"TESTSTATE\""
      ]
    },
    "108": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "\"TESTSTATE\"",
        "5"
      ],
      "stack_out": [
        "\"TESTSTATE\"",
        "5"
      ]
    },
    "110": {
      "op": "app_global_put",
      "stack_out": []
    },
    "111": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "112": {
      "op": "bytec_1 // \"baseTestState\"",
      "defined_out": [
        "\"baseTestState\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"baseTestState\""
      ]
    },
    "113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "114": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "115": {
      "op": "bytec_2 // \"testing 123\"",
      "defined_out": [
        "\"testing 123\"",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\"testing 123\""
      ]
    },
    "116": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "117": {
      "error": "Base class state should be initialized after super call",
      "op": "assert // Base class state should be initialized after super call",
      "stack_out": []
    },
    "118": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "119": {
      "op": "bytec_0 // \"testState\"",
      "stack_out": [
        "0",
        "\"testState\""
      ]
    },
    "120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "121": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "122": {
      "op": "pushint 72057594037927936 // 72057594037927936",
      "defined_out": [
        "72057594037927936",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "72057594037927936"
      ]
    },
    "132": {
      "op": "*",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "133": {
      "op": "pushbytes \"noInitialInt\"",
      "defined_out": [
        "\"noInitialInt\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"noInitialInt\""
      ]
    },
    "147": {
      "op": "swap",
      "stack_out": [
        "\"noInitialInt\"",
        "new_state_value%0#0"
      ]
    },
    "148": {
      "op": "app_global_put",
      "stack_out": []
    },
    "149": {
      "retsub": true,
      "op": "retsub"
    },
    "150": {
      "subroutine": "tests/approvals/global-state.algo.ts::BaseTestContract.constructor",
      "params": {},
      "block": "tests/approvals/global-state.algo.ts::BaseTestContract.constructor_after_inlined_@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor@2",
      "stack_in": [],
      "op": "bytec_1 // \"baseTestState\"",
      "defined_out": [
        "\"baseTestState\""
      ],
      "stack_out": [
        "\"baseTestState\""
      ]
    },
    "151": {
      "op": "bytec_2 // \"testing 123\"",
      "defined_out": [
        "\"baseTestState\"",
        "\"testing 123\""
      ],
      "stack_out": [
        "\"baseTestState\"",
        "\"testing 123\""
      ]
    },
    "152": {
      "op": "app_global_put",
      "stack_out": []
    },
    "153": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
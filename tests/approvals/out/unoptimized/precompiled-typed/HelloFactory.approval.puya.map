{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/precompiled-typed.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;AAIA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;;;AAAA;;AA4DE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AA5DF;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AA4DE;;;;AAGmB;AAFA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAEA;;;AAAA;;;AAAA;AAAsB;;AAAjC;AAAA;;AAEN;AAAA;;;AAAA;;;;;AAAA;;;AAAA;AAAA;AACS;;AADT;;;AAAA;;;;;AAAA;;;AAAA;AAAA;AACS;;AADT;;;AAAA;;;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x 0x02bf30cf"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "16": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "20": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "23": {
      "op": "pushbytes 0x02947ca2 // method \"test_compile_contract_large()void\"",
      "defined_out": [
        "Method(test_compile_contract_large()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_compile_contract_large()void)"
      ]
    },
    "29": {
      "op": "swap",
      "stack_out": [
        "Method(test_compile_contract_large()void)",
        "tmp%2#0"
      ]
    },
    "30": {
      "op": "match main_test_compile_contract_large_route@3",
      "stack_out": []
    },
    "34": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "35": {
      "block": "main_after_inlined_tests/approvals/precompiled-typed.algo.ts::HelloFactory.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "36": {
      "block": "main_test_compile_contract_large_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "38": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "39": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "40": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "41": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "43": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "44": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "45": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "46": {
      "callsub": "tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large",
      "op": "callsub test_compile_contract_large"
    },
    "49": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "50": {
      "op": "b main_after_inlined_tests/approvals/precompiled-typed.algo.ts::HelloFactory.__puya_arc4_router__@11"
    },
    "53": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "55": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "56": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%7#0"
      ]
    },
    "57": {
      "op": "match main___algots__.defaultCreate@7",
      "stack_out": []
    },
    "61": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "64": {
      "block": "main___algots__.defaultCreate@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "66": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "67": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "68": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "69": {
      "callsub": "tests/approvals/precompiled-typed.algo.ts::HelloFactory.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "72": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "73": {
      "op": "b main_after_inlined_tests/approvals/precompiled-typed.algo.ts::HelloFactory.__puya_arc4_router__@11"
    },
    "76": {
      "subroutine": "tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large",
      "params": {},
      "block": "test_compile_contract_large",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "79": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "80": {
      "block": "test_compile_contract_large_block@0",
      "stack_in": [
        "largeApp#0"
      ],
      "op": "itxn_begin"
    },
    "81": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "82": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "84": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "85": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "87": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "88": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "90": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "91": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "94": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "96": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "largeApp#0",
        "CoEBQw=="
      ]
    },
    "102": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "104": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "largeApp#0",
        ""
      ]
    },
    "105": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "107": {
      "op": "pushbytes base64(CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ)",
      "defined_out": [
        "CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ"
      ],
      "stack_out": [
        "largeApp#0",
        "CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ"
      ]
    },
    "226": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "228": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "largeApp#0",
        ""
      ]
    },
    "229": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "231": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "232": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "234": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "235": {
      "op": "itxn_field Fee",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "237": {
      "block": "test_compile_contract_large_next_txn@1",
      "stack_in": [
        "largeApp#0"
      ],
      "op": "itxn_submit"
    },
    "238": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "largeApp#0"
      ]
    },
    "240": {
      "op": "dup",
      "stack_out": [
        "largeApp#0",
        "largeApp#0",
        "largeApp#0"
      ]
    },
    "241": {
      "op": "frame_bury 0",
      "defined_out": [
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "largeApp#0"
      ]
    },
    "243": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "244": {
      "op": "bytec_1 // method \"getBigBytesLength()uint64\"",
      "defined_out": [
        "Method(getBigBytesLength()uint64)",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "Method(getBigBytesLength()uint64)"
      ]
    },
    "245": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "247": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "0"
      ]
    },
    "248": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "250": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "252": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "253": {
      "op": "itxn_field Fee",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "255": {
      "block": "test_compile_contract_large_next_txn@2",
      "stack_in": [
        "largeApp#0"
      ],
      "op": "itxn_submit"
    },
    "256": {
      "op": "itxn_begin"
    },
    "257": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "259": {
      "op": "bytec_1 // method \"getBigBytesLength()uint64\"",
      "defined_out": [
        "Method(getBigBytesLength()uint64)",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "Method(getBigBytesLength()uint64)"
      ]
    },
    "260": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "262": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "0"
      ]
    },
    "263": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "265": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "268": {
      "op": "itxn_field Fee",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "270": {
      "block": "test_compile_contract_large_next_txn@3",
      "stack_in": [
        "largeApp#0"
      ],
      "op": "itxn_submit"
    },
    "271": {
      "op": "itxn_begin"
    },
    "272": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "274": {
      "op": "bytec_1 // method \"getBigBytesLength()uint64\"",
      "defined_out": [
        "Method(getBigBytesLength()uint64)",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "Method(getBigBytesLength()uint64)"
      ]
    },
    "275": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "277": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "0"
      ]
    },
    "278": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "280": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "282": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "283": {
      "op": "itxn_field Fee",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "285": {
      "block": "test_compile_contract_large_next_txn@4",
      "stack_in": [
        "largeApp#0"
      ],
      "op": "itxn_submit"
    },
    "286": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "awst_tmp%1#0"
      ]
    },
    "288": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%1#0"
      ]
    },
    "291": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "297": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%2#0"
      ]
    },
    "298": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "299": {
      "retsub": true,
      "op": "retsub"
    },
    "300": {
      "subroutine": "tests/approvals/precompiled-typed.algo.ts::HelloFactory.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}
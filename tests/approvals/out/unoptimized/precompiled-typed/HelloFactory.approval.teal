#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 6 1 4
    bytecblock 0x 0x151f7c75 "world" base64(C0IAAIEBQw==) 0xd0a28200 "!" 0x24378d3c "TEST" "T" "hello abi" "hello" "abi" "stubbed" 0x5180ba20 0x4c5c61ba 0x9cd87de3
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/precompiled-typed.algo.ts:13
    // class HelloFactory extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@13
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/precompiled-typed.algo.ts:13
    // class HelloFactory extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    bz main_create_NoOp@11
    b main_call_NoOp@3

main_call_NoOp@3:
    // tests/approvals/precompiled-typed.algo.ts:13
    // class HelloFactory extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x2a17995c // method "test_compile_contract()void"
    pushbytes 0xe3254bc9 // method "test_compile_contract_with_template()void"
    pushbytes 0xe2b7c692 // method "test_compile_contract_with_template_and_custom_prefix()void"
    pushbytes 0x02947ca2 // method "test_compile_contract_large()void"
    pushbytes 0x495e0010 // method "test_call_contract_with_transactions()void"
    pushbytes 0x27519e7b // method "test_call_contract_with_reference_types()void"
    uncover 6
    match main_test_compile_contract_route@4 main_test_compile_contract_with_template_route@5 main_test_compile_contract_with_template_and_custom_prefix_route@6 main_test_compile_contract_large_route@7 main_test_call_contract_with_transactions_route@8 main_test_call_contract_with_reference_types_route@9
    b main_switch_case_next@10

main_switch_case_next@10:
    b main_after_if_else@12

main_after_if_else@12:
    b main_after_if_else@14

main_after_if_else@14:
    // tests/approvals/precompiled-typed.algo.ts:13
    // class HelloFactory extends Contract {
    err

main_test_call_contract_with_reference_types_route@9:
    // tests/approvals/precompiled-typed.algo.ts:157
    // test_call_contract_with_reference_types() {
    callsub test_call_contract_with_reference_types
    b main_switch_case_next@10

main_test_call_contract_with_transactions_route@8:
    // tests/approvals/precompiled-typed.algo.ts:114
    // test_call_contract_with_transactions() {
    callsub test_call_contract_with_transactions
    b main_switch_case_next@10

main_test_compile_contract_large_route@7:
    // tests/approvals/precompiled-typed.algo.ts:98
    // test_compile_contract_large() {
    callsub test_compile_contract_large
    b main_switch_case_next@10

main_test_compile_contract_with_template_and_custom_prefix_route@6:
    // tests/approvals/precompiled-typed.algo.ts:81
    // test_compile_contract_with_template_and_custom_prefix() {
    callsub test_compile_contract_with_template_and_custom_prefix
    b main_switch_case_next@10

main_test_compile_contract_with_template_route@5:
    // tests/approvals/precompiled-typed.algo.ts:56
    // test_compile_contract_with_template() {
    callsub test_compile_contract_with_template
    b main_switch_case_next@10

main_test_compile_contract_route@4:
    // tests/approvals/precompiled-typed.algo.ts:14
    // test_compile_contract() {
    callsub test_compile_contract
    b main_switch_case_next@10

main_create_NoOp@11:
    b main_after_if_else@12

main___algots__.defaultCreate@13:
    // tests/approvals/precompiled-typed.algo.ts:13
    // class HelloFactory extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract[routing]() -> void:
test_compile_contract:
    b test_compile_contract_block@0

test_compile_contract_block@0:
    // tests/approvals/precompiled-typed.algo.ts:14
    // test_compile_contract() {
    callsub tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template[routing]() -> void:
test_compile_contract_with_template:
    b test_compile_contract_with_template_block@0

test_compile_contract_with_template_block@0:
    // tests/approvals/precompiled-typed.algo.ts:56
    // test_compile_contract_with_template() {
    callsub tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix[routing]() -> void:
test_compile_contract_with_template_and_custom_prefix:
    b test_compile_contract_with_template_and_custom_prefix_block@0

test_compile_contract_with_template_and_custom_prefix_block@0:
    // tests/approvals/precompiled-typed.algo.ts:81
    // test_compile_contract_with_template_and_custom_prefix() {
    callsub tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large[routing]() -> void:
test_compile_contract_large:
    b test_compile_contract_large_block@0

test_compile_contract_large_block@0:
    // tests/approvals/precompiled-typed.algo.ts:98
    // test_compile_contract_large() {
    callsub tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions[routing]() -> void:
test_call_contract_with_transactions:
    b test_call_contract_with_transactions_block@0

test_call_contract_with_transactions_block@0:
    // tests/approvals/precompiled-typed.algo.ts:114
    // test_call_contract_with_transactions() {
    callsub tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types[routing]() -> void:
test_call_contract_with_reference_types:
    b test_call_contract_with_reference_types_block@0

test_call_contract_with_reference_types_block@0:
    // tests/approvals/precompiled-typed.algo.ts:157
    // test_call_contract_with_reference_types() {
    callsub tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types
    intc_2 // 1
    return


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract() -> void:
tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract:
    // tests/approvals/precompiled-typed.algo.ts:14
    // test_compile_contract() {
    proto 0 0
    bytec_0 // ""
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_block@0

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_block@0:
    // tests/approvals/precompiled-typed.algo.ts:17-19
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:18
    // args: ['hello'],
    bytec 10 // "hello"
    len
    itob
    extract 6 2
    bytec 10 // "hello"
    concat
    // tests/approvals/precompiled-typed.algo.ts:17-19
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    pushbytes 0x009225ae // method "helloCreate(string)void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:15
    // const compiled = compileArc4(Hello)
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_2 // 1
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    bytec_3 // base64(C0IAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CyAEAAECBCYECGdyZWV0aW5nAAQVH3x1ASBCAAAxGEAACUIAAIgBk0IAAEIAADYaAIAEJDeNPIAEoOgYck8CjgIAZwBXQgAAMRkiEkQxGCITQQAtQgAANhoAgATQooIAgARRgLogTwKOAgANAAdCAABCAAAAiACXQv/2iABpQv/wNhoAgAQAkiWuTwGOAQAGQgAAQv/eiAAkQv/3MRklEjEYIhMQRIgANkL/nDEZgQUSMRgiExBEiAAdQv+LQgAANhoBSSJZIwskCEsBFRJEVwIAiACJI0NCAACIAIwjQ0IAAIgAiCNDQgAANhoBSSJZIwskCEsBFRJEVwIAiABySRUWVwYCTwFQKk8BULAjQ0IAADYaAUkVTgFJIllJJRJESwFPAUsDUiJZIwskCCUISwEkWUlLAhJESwJPAU8EUiJZIwskCAhLARUSRIgAN0kVFlcGAk8BUCpPAVCwI0OKAQBCAAAoi/9niUIAAIlCAACJigEBQgAAIihlRClPAVArUIv/UImKAQFCAAAiKGVEKU8BUCtQi/8iWYv/JFmL/08CTwJSVwIAUIv/JFmL/xWL/08CTwJSVwIAUIlCAABCAABCAAAoKWeJ)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:17-19
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@1

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@1:
    // tests/approvals/precompiled-typed.algo.ts:17-19
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:19
    // }).itxn.createdApp
    gitxn 0 CreatedApplicationID
    // tests/approvals/precompiled-typed.algo.ts:17-19
    // const app = compiled.call.create({
    //   args: ['hello'],
    // }).itxn.createdApp
    dup
    frame_bury 0
    // tests/approvals/precompiled-typed.algo.ts:21-24
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: app,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:22
    // args: ['world'],
    bytec_2 // "world"
    len
    itob
    extract 6 2
    bytec_2 // "world"
    concat
    // tests/approvals/precompiled-typed.algo.ts:21-24
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: app,
    // })
    bytec 4 // method "greet(string)string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@2

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@2:
    // tests/approvals/precompiled-typed.algo.ts:21-24
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: app,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    // tests/approvals/precompiled-typed.algo.ts:25
    // assert(result === 'hello world')
    pushbytes "hello world"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:27-31
    // const { returnValue: result2, itxn: greetItxn } = abiCall({
    //   method: Hello.prototype.greet,
    //   appId: app,
    //   args: ['abi'],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:29
    // appId: app,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:30
    // args: ['abi'],
    bytec 11 // "abi"
    len
    itob
    extract 6 2
    bytec 11 // "abi"
    concat
    // tests/approvals/precompiled-typed.algo.ts:27-31
    // const { returnValue: result2, itxn: greetItxn } = abiCall({
    //   method: Hello.prototype.greet,
    //   appId: app,
    //   args: ['abi'],
    // })
    bytec 4 // method "greet(string)string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@3

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@3:
    // tests/approvals/precompiled-typed.algo.ts:27-31
    // const { returnValue: result2, itxn: greetItxn } = abiCall({
    //   method: Hello.prototype.greet,
    //   appId: app,
    //   args: ['abi'],
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    itxn LastLog
    cover 1
    // tests/approvals/precompiled-typed.algo.ts:33
    // assert(result2 === 'hello abi')
    bytec 9 // "hello abi"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:34
    // assert(greetItxn.lastLog === Bytes.fromHex('151f7c75').concat(new Str('hello abi').bytes))
    bytec 9 // "hello abi"
    len
    itob
    extract 6 2
    bytec 9 // "hello abi"
    concat
    bytec_1 // 0x151f7c75
    uncover 1
    concat
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:36-40
    // const result3 = abiCall({
    //   method: HelloStubbed.prototype.greet,
    //   appId: app,
    //   args: ['stubbed'],
    // }).returnValue
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:38
    // appId: app,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:39
    // args: ['stubbed'],
    bytec 12 // "stubbed"
    len
    itob
    extract 6 2
    bytec 12 // "stubbed"
    concat
    // tests/approvals/precompiled-typed.algo.ts:36-40
    // const result3 = abiCall({
    //   method: HelloStubbed.prototype.greet,
    //   appId: app,
    //   args: ['stubbed'],
    // }).returnValue
    bytec 4 // method "greet(string)string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@4

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@4:
    // tests/approvals/precompiled-typed.algo.ts:36-40
    // const result3 = abiCall({
    //   method: HelloStubbed.prototype.greet,
    //   appId: app,
    //   args: ['stubbed'],
    // }).returnValue
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    // tests/approvals/precompiled-typed.algo.ts:41
    // assert(result3 === 'hello stubbed')
    pushbytes "hello stubbed"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:43-47
    // const result4 = abiCall({
    //   method: Hello.prototype.sendGreetings,
    //   appId: app,
    //   args: [{ name: 'world', termination: new arc4.Str('!') }],
    // }).returnValue
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:45
    // appId: app,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:46
    // args: [{ name: 'world', termination: new arc4.Str('!') }],
    bytec 5 // "!"
    len
    itob
    extract 6 2
    bytec 5 // "!"
    concat
    bytec_2 // "world"
    len
    itob
    extract 6 2
    bytec_2 // "world"
    concat
    intc_3 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    cover 1
    dup
    len
    intc_3 // 4
    +
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    // tests/approvals/precompiled-typed.algo.ts:43-47
    // const result4 = abiCall({
    //   method: Hello.prototype.sendGreetings,
    //   appId: app,
    //   args: [{ name: 'world', termination: new arc4.Str('!') }],
    // }).returnValue
    bytec 13 // method "sendGreetings((string,string))string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@5

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@5:
    // tests/approvals/precompiled-typed.algo.ts:43-47
    // const result4 = abiCall({
    //   method: Hello.prototype.sendGreetings,
    //   appId: app,
    //   args: [{ name: 'world', termination: new arc4.Str('!') }],
    // }).returnValue
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    // tests/approvals/precompiled-typed.algo.ts:49
    // assert(result4 === 'hello world!')
    pushbytes "hello world!"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:51-53
    // compiled.call.delete({
    //   appId: app,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:52
    // appId: app,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:51-53
    // compiled.call.delete({
    //   appId: app,
    // })
    bytec 6 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@6

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_next_txn@6:
    // tests/approvals/precompiled-typed.algo.ts:51-53
    // compiled.call.delete({
    //   appId: app,
    // })
    itxn_submit
    retsub


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template() -> void:
tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template:
    // tests/approvals/precompiled-typed.algo.ts:56
    // test_compile_contract_with_template() {
    proto 0 0
    bytec_0 // ""
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_block@0

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_block@0:
    // tests/approvals/precompiled-typed.algo.ts:59
    // const helloApp = compiled.call.create().itxn.createdApp
    itxn_begin
    bytec 14 // method "create()void"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:57
    // const compiled = compileArc4(HelloTemplate, { templateVars: { GREETING: 'hey' } })
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_2 // 1
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    bytec_3 // base64(C0IAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CyAEAAECBCYFCGdyZWV0aW5nAAQVH3x1ASADaGV5QgAAMRhAAAlCAACIAXpCAABCAAA2GgCABCQ3jTyABKDoGHJPAo4CAGcAV0IAADEZIhJEMRgiE0EALUIAADYaAIAE0KKCAIAEUYC6IE8CjgIADQAHQgAAQgAAAIgAhUL/9ogAV0L/8DYaAIAETFxhuk8BjgEABkIAAEL/3ogAJEL/9zEZJRIxGCITEESIACRC/5wxGYEFEjEYIhMQRIgAC0L/i0IAAIgAiSNDQgAAiACFI0NCAACIAIEjQ0IAADYaAUkiWSMLJAhLARUSRFcCAIgAa0kVFlcGAk8BUCpPAVCwI0NCAAA2GgFJFU4BSSJZSSUSREsBTwFLA1IiWSMLJAglCEsBJFlJSwISREsCTwFPBFIiWSMLJAgISwEVEkSIADBJFRZXBgJPAVAqTwFQsCNDQgAAiUIAAIlCAACJigEBQgAAIihlRClPAVArUIv/UImKAQFCAAAiKGVEKU8BUCtQi/8iWYv/JFmL/08CTwJSVwIAUIv/JFmL/xWL/08CTwJSVwIAUIlCAACIAAUoJwRniUIAAEIAAEIAACgpZ4k=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:59
    // const helloApp = compiled.call.create().itxn.createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@1

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@1:
    // tests/approvals/precompiled-typed.algo.ts:59
    // const helloApp = compiled.call.create().itxn.createdApp
    itxn_submit
    gitxn 0 CreatedApplicationID
    dup
    frame_bury 0
    // tests/approvals/precompiled-typed.algo.ts:61-64
    // const txn1 = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:62
    // args: ['world'],
    bytec_2 // "world"
    len
    itob
    extract 6 2
    bytec_2 // "world"
    concat
    // tests/approvals/precompiled-typed.algo.ts:61-64
    // const txn1 = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    bytec 4 // method "greet(string)string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@2

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@2:
    // tests/approvals/precompiled-typed.algo.ts:61-64
    // const txn1 = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    // tests/approvals/precompiled-typed.algo.ts:66
    // assert(txn1.returnValue === 'hey world')
    pushbytes "hey world"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:68
    // const greeting = { name: 'world', termination: new arc4.Str('!') }
    bytec 5 // "!"
    len
    itob
    extract 6 2
    bytec 5 // "!"
    concat
    bytec_2 // "world"
    len
    itob
    extract 6 2
    bytec_2 // "world"
    concat
    intc_3 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    cover 1
    dup
    len
    intc_3 // 4
    +
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    // tests/approvals/precompiled-typed.algo.ts:69-72
    // const txn2 = compiled.call.sendGreetings({
    //   args: [greeting],
    //   appId: helloApp,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:71
    // appId: helloApp,
    frame_dig 0
    cover 1
    // tests/approvals/precompiled-typed.algo.ts:70
    // args: [greeting],
    dup
    intc_0 // 0
    extract_uint16
    cover 1
    dup
    pushint 2 // 2
    extract_uint16
    dig 1
    uncover 3
    uncover 2
    substring3
    extract 2 0
    cover 1
    dup
    pushint 2 // 2
    extract_uint16
    cover 1
    dup
    len
    cover 1
    uncover 2
    uncover 2
    substring3
    cover 1
    dup
    len
    itob
    extract 6 2
    uncover 1
    concat
    intc_3 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    cover 1
    dup
    len
    intc_3 // 4
    +
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    // tests/approvals/precompiled-typed.algo.ts:69-72
    // const txn2 = compiled.call.sendGreetings({
    //   args: [greeting],
    //   appId: helloApp,
    // })
    bytec 13 // method "sendGreetings((string,string))string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@3

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@3:
    // tests/approvals/precompiled-typed.algo.ts:69-72
    // const txn2 = compiled.call.sendGreetings({
    //   args: [greeting],
    //   appId: helloApp,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    // tests/approvals/precompiled-typed.algo.ts:74
    // assert(txn2.returnValue === 'hey world!')
    pushbytes "hey world!"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:76-78
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:77
    // appId: helloApp,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:76-78
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    bytec 6 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@4

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_next_txn@4:
    // tests/approvals/precompiled-typed.algo.ts:76-78
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    itxn_submit
    retsub


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix() -> void:
tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix:
    // tests/approvals/precompiled-typed.algo.ts:81
    // test_compile_contract_with_template_and_custom_prefix() {
    proto 0 0
    bytec_0 // ""
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_block@0

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_block@0:
    // tests/approvals/precompiled-typed.algo.ts:84
    // const helloApp = compiled.call.create().itxn.createdApp
    itxn_begin
    bytec 14 // method "create()void"
    itxn_field ApplicationArgs
    // tests/approvals/precompiled-typed.algo.ts:82
    // const compiled = compileArc4(HelloTemplateCustomPrefix, { templateVars: { GREETING: 'bonjour' }, templateVarsPrefix: 'PRFX_' })
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_2 // 1
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    bytec_3 // base64(C0IAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CyAEAAECBCYFCGdyZWV0aW5nAAQVH3x1ASAHYm9uam91ckIAADEYQAAJQgAAiAF6QgAAQgAANhoAgAQkN408gASg6BhyTwKOAgBnAFdCAAAxGSISRDEYIhNBAC1CAAA2GgCABNCiggCABFGAuiBPAo4CAA0AB0IAAEIAAACIAIVC//aIAFdC//A2GgCABExcYbpPAY4BAAZCAABC/96IACRC//cxGSUSMRgiExBEiAAkQv+cMRmBBRIxGCITEESIAAtC/4tCAACIAIkjQ0IAAIgAhSNDQgAAiACBI0NCAAA2GgFJIlkjCyQISwEVEkRXAgCIAGtJFRZXBgJPAVAqTwFQsCNDQgAANhoBSRVOAUkiWUklEkRLAU8BSwNSIlkjCyQIJQhLASRZSUsCEkRLAk8BTwRSIlkjCyQICEsBFRJEiAAwSRUWVwYCTwFQKk8BULAjQ0IAAIlCAACJQgAAiYoBAUIAACIoZUQpTwFQK1CL/1CJigEBQgAAIihlRClPAVArUIv/IlmL/yRZi/9PAk8CUlcCAFCL/yRZi/8Vi/9PAk8CUlcCAFCJQgAAiAAFKCcEZ4lCAABCAABCAAAoKWeJ)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:84
    // const helloApp = compiled.call.create().itxn.createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_next_txn@1

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_next_txn@1:
    // tests/approvals/precompiled-typed.algo.ts:84
    // const helloApp = compiled.call.create().itxn.createdApp
    itxn_submit
    gitxn 0 CreatedApplicationID
    dup
    frame_bury 0
    // tests/approvals/precompiled-typed.algo.ts:86-89
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:87
    // args: ['world'],
    bytec_2 // "world"
    len
    itob
    extract 6 2
    bytec_2 // "world"
    concat
    // tests/approvals/precompiled-typed.algo.ts:86-89
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    bytec 4 // method "greet(string)string"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_next_txn@2

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_next_txn@2:
    // tests/approvals/precompiled-typed.algo.ts:86-89
    // const { returnValue: result } = compiled.call.greet({
    //   args: ['world'],
    //   appId: helloApp,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    extract 2 0
    // tests/approvals/precompiled-typed.algo.ts:91
    // assert(result === 'bonjour world')
    pushbytes "bonjour world"
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:93-95
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:94
    // appId: helloApp,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:93-95
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    bytec 6 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_next_txn@3

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix_next_txn@3:
    // tests/approvals/precompiled-typed.algo.ts:93-95
    // compiled.call.delete({
    //   appId: helloApp,
    // })
    itxn_submit
    retsub


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large() -> void:
tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large:
    // tests/approvals/precompiled-typed.algo.ts:98
    // test_compile_contract_large() {
    proto 0 0
    bytec_0 // ""
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_block@0

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_block@0:
    // tests/approvals/precompiled-typed.algo.ts:101
    // const largeApp = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:99
    // const compiled = compileArc4(LargeProgram)
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    bytec_3 // base64(C0IAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CyACAAFCAABCAAAxGyITQQBCQgAANhoAgAQkN408gAQCvzDPTwKOAgAXAAdCAABCAAAAMRkiEjEYIhMQRIgAK0L/7DEZgQUSMRgiExBEiAAtQv/bMRkiEjEYIhIQRIgAMSNDQgAAgYAgr4lCAACIABUWgAQVH3x1TwFQsCNDQgAAiAAKI0NCAACI/9cViUIAAIlCAACJ)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:101
    // const largeApp = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_next_txn@1

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_next_txn@1:
    // tests/approvals/precompiled-typed.algo.ts:101
    // const largeApp = compiled.bareCreate().createdApp
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // tests/approvals/precompiled-typed.algo.ts:103-105
    // const { returnValue: result } = compiled.call.getBigBytesLength({
    //   appId: largeApp,
    // })
    itxn_begin
    pushbytes 0x02bf30cf // method "getBigBytesLength()uint64"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_next_txn@2

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_next_txn@2:
    // tests/approvals/precompiled-typed.algo.ts:103-105
    // const { returnValue: result } = compiled.call.getBigBytesLength({
    //   appId: largeApp,
    // })
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    cover 1
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    btoi
    // tests/approvals/precompiled-typed.algo.ts:107
    // assert(result === 4096)
    pushint 4096 // 4096
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:109-111
    // compiled.call.delete({
    //   appId: largeApp,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:110
    // appId: largeApp,
    frame_dig 0
    // tests/approvals/precompiled-typed.algo.ts:109-111
    // compiled.call.delete({
    //   appId: largeApp,
    // })
    bytec 6 // method "delete()void"
    itxn_field ApplicationArgs
    pushint 5 // 5
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_next_txn@3

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_compile_contract_large_next_txn@3:
    // tests/approvals/precompiled-typed.algo.ts:109-111
    // compiled.call.delete({
    //   appId: largeApp,
    // })
    itxn_submit
    retsub


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions() -> void:
tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions:
    // tests/approvals/precompiled-typed.algo.ts:114
    // test_call_contract_with_transactions() {
    proto 0 0
    intc_0 // 0
    intc_0 // 0
    bytec_0 // ""
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_block@0

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_block@0:
    // tests/approvals/precompiled-typed.algo.ts:117
    // const appId = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:115
    // const compiled = compileArc4(ReceivesTxns)
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    bytec_3 // base64(C0IAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CyADAQADJgIABBUffHVCAABCAAAxGyMTQQBeQgAAMRkjEkQxGCMTQQBMQgAANhoAgASPaJLvgASc2H3jgATTZshpgASBtnNSTwSOBAAcABYAEAAKQgAAQgAAQgAAAIgAZ0L/84gAQUL/7YgAKUL/54gAFUL/4UL/4TEZIxIxGCMSEESIAPciQ0IAAIgAVxYpTwFQsCJDQgAAMRYiCYgAShYpTwFQsCJDQgAAMRYiCUk4ECQSRIgApUkVFlcGAk8BUClPAVCwIkNCAAAxFoECCUk4ECQSRDEWIglJOBAiEkSIAIUiQ0IAACKJigEBKCgoKEIAAIv/OBBJJBJBAChCAABCAACL/zg8SYwAQQAPQgAAiwCMAkIAAIsCjACJi/84IYwCQv/yiwSBBhJBAChCAABCAACL/zg9SYwBQQAPQgAAiwGMA0IAAIsDjACJi/84GIwDQv/yQgAAI4wAiYoBAUIAAIv/OBeJigIAQgAAi/44ECQSRIv/OBAiEkSJQgAAiQ==)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:117
    // const appId = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@1

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@1:
    // tests/approvals/precompiled-typed.algo.ts:117
    // const appId = compiled.bareCreate().createdApp
    itxn_submit
    itxn CreatedApplicationID
    frame_bury 2
    // tests/approvals/precompiled-typed.algo.ts:125-128
    // compiled.call.receivesAnyTxn({
    //   args: [assetCreate],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:122
    // assetName: 'TEST',
    bytec 7 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:121
    // unitName: 'T',
    bytec 8 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:120
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:119-123
    // const assetCreate = itxn.assetConfig({
    //   total: 1,
    //   unitName: 'T',
    //   assetName: 'TEST',
    // })
    pushint 3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@2

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@2:
    // tests/approvals/precompiled-typed.algo.ts:125-128
    // compiled.call.receivesAnyTxn({
    //   args: [assetCreate],
    //   appId,
    // })
    itxn_next
    // tests/approvals/precompiled-typed.algo.ts:127
    // appId,
    frame_dig 2
    // tests/approvals/precompiled-typed.algo.ts:125-128
    // compiled.call.receivesAnyTxn({
    //   args: [assetCreate],
    //   appId,
    // })
    bytec 15 // method "receivesAnyTxn(txn)uint64"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@3

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@3:
    // tests/approvals/precompiled-typed.algo.ts:125-128
    // compiled.call.receivesAnyTxn({
    //   args: [assetCreate],
    //   appId,
    // })
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/precompiled-typed.algo.ts:131
    // appId,
    frame_dig 2
    // tests/approvals/precompiled-typed.algo.ts:135-138
    // compiled.call.receivesAnyTxn({
    //   appId,
    //   args: [appCall],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:132
    // appArgs: [methodSelector(ReceivesTxns.prototype.getOne)],
    pushbytes 0x8f6892ef // method "getOne()uint64"
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    // tests/approvals/precompiled-typed.algo.ts:130-133
    // const appCall = itxn.applicationCall({
    //   appId,
    //   appArgs: [methodSelector(ReceivesTxns.prototype.getOne)],
    // })
    intc_1 // 6
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@4

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@4:
    // tests/approvals/precompiled-typed.algo.ts:135-138
    // compiled.call.receivesAnyTxn({
    //   appId,
    //   args: [appCall],
    // })
    itxn_next
    // tests/approvals/precompiled-typed.algo.ts:136
    // appId,
    frame_dig 2
    // tests/approvals/precompiled-typed.algo.ts:135-138
    // compiled.call.receivesAnyTxn({
    //   appId,
    //   args: [appCall],
    // })
    bytec 15 // method "receivesAnyTxn(txn)uint64"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@5

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@5:
    // tests/approvals/precompiled-typed.algo.ts:135-138
    // compiled.call.receivesAnyTxn({
    //   appId,
    //   args: [appCall],
    // })
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/precompiled-typed.algo.ts:140-143
    // compiled.call.receivesAssetConfig({
    //   appId,
    //   args: [assetCreate],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:122
    // assetName: 'TEST',
    bytec 7 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:121
    // unitName: 'T',
    bytec 8 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:120
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:119-123
    // const assetCreate = itxn.assetConfig({
    //   total: 1,
    //   unitName: 'T',
    //   assetName: 'TEST',
    // })
    pushint 3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@6

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@6:
    // tests/approvals/precompiled-typed.algo.ts:140-143
    // compiled.call.receivesAssetConfig({
    //   appId,
    //   args: [assetCreate],
    // })
    itxn_next
    // tests/approvals/precompiled-typed.algo.ts:141
    // appId,
    frame_dig 2
    // tests/approvals/precompiled-typed.algo.ts:140-143
    // compiled.call.receivesAssetConfig({
    //   appId,
    //   args: [assetCreate],
    // })
    pushbytes 0xd366c869 // method "receivesAssetConfig(acfg)byte[]"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@7

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@7:
    // tests/approvals/precompiled-typed.algo.ts:140-143
    // compiled.call.receivesAssetConfig({
    //   appId,
    //   args: [assetCreate],
    // })
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/precompiled-typed.algo.ts:146
    // receiver: appId.address,
    frame_dig 2
    app_params_get AppAddress
    assert // application exists
    frame_bury 0
    // tests/approvals/precompiled-typed.algo.ts:148
    // sender: Global.currentApplicationId.address,
    global CurrentApplicationID
    app_params_get AppAddress
    assert // application exists
    frame_bury 1
    // tests/approvals/precompiled-typed.algo.ts:151-154
    // compiled.call.receivesAssetConfigAndPay({
    //   appId,
    //   args: [assetCreate, pay],
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:122
    // assetName: 'TEST',
    bytec 7 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:121
    // unitName: 'T',
    bytec 8 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:120
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:119-123
    // const assetCreate = itxn.assetConfig({
    //   total: 1,
    //   unitName: 'T',
    //   assetName: 'TEST',
    // })
    pushint 3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@8

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@8:
    // tests/approvals/precompiled-typed.algo.ts:153
    // args: [assetCreate, pay],
    itxn_next
    frame_dig 1
    itxn_field Sender
    // tests/approvals/precompiled-typed.algo.ts:147
    // amount: 100000,
    pushint 100000 // 100000
    itxn_field Amount
    frame_dig 0
    itxn_field Receiver
    // tests/approvals/precompiled-typed.algo.ts:145-149
    // const pay = itxn.payment({
    //   receiver: appId.address,
    //   amount: 100000,
    //   sender: Global.currentApplicationId.address,
    // })
    intc_2 // 1
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@9

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@9:
    // tests/approvals/precompiled-typed.algo.ts:151-154
    // compiled.call.receivesAssetConfigAndPay({
    //   appId,
    //   args: [assetCreate, pay],
    // })
    itxn_next
    // tests/approvals/precompiled-typed.algo.ts:152
    // appId,
    frame_dig 2
    // tests/approvals/precompiled-typed.algo.ts:151-154
    // compiled.call.receivesAssetConfigAndPay({
    //   appId,
    //   args: [assetCreate, pay],
    // })
    pushbytes 0x81b67352 // method "receivesAssetConfigAndPay(acfg,pay)void"
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@10

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_transactions_next_txn@10:
    // tests/approvals/precompiled-typed.algo.ts:151-154
    // compiled.call.receivesAssetConfigAndPay({
    //   appId,
    //   args: [assetCreate, pay],
    // })
    itxn_submit
    retsub


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types() -> void:
tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types:
    // tests/approvals/precompiled-typed.algo.ts:157
    // test_call_contract_with_reference_types() {
    proto 0 0
    bytec_0 // ""
    bytec_0 // ""
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_block@0

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_block@0:
    // tests/approvals/precompiled-typed.algo.ts:160
    // const appId = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:158
    // const compiled = compileArc4(ReceivesReferenceTypes)
    intc_0 // 0
    itxn_field ExtraProgramPages
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    bytec_3 // base64(C0IAAIEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    pushbytes base64(CyADAAEIQgAAQgAAMRsiE0EAKUIAADYaAIAEZmmNGE8BjgEAB0IAAEIAAAAxGSISMRgiExBEiAASQv/sMRkiEjEYIhIQRIgAQSNDQgAANhoBSRUkEkQXNhoCSRWBIBJENhoDSRUkEkQXTwJPAk8CiAACI0OKAwBCAACL/XIIRLCL/rCL/3EERLCJQgAAiQ==)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    // tests/approvals/precompiled-typed.algo.ts:160
    // const appId = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_next_txn@1

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_next_txn@1:
    // tests/approvals/precompiled-typed.algo.ts:160
    // const appId = compiled.bareCreate().createdApp
    itxn_submit
    itxn CreatedApplicationID
    frame_bury 0
    // tests/approvals/precompiled-typed.algo.ts:162-168
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:166
    // assetName: 'TEST',
    bytec 7 // "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/precompiled-typed.algo.ts:165
    // unitName: 'T',
    bytec 8 // "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/precompiled-typed.algo.ts:164
    // total: 1,
    intc_2 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/precompiled-typed.algo.ts:162-167
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    pushint 3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_next_txn@2

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_next_txn@2:
    // tests/approvals/precompiled-typed.algo.ts:162-168
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:168
    // .submit().createdAsset
    itxn CreatedAssetID
    // tests/approvals/precompiled-typed.algo.ts:162-168
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    dup
    frame_bury 1
    // tests/approvals/precompiled-typed.algo.ts:170-173
    // const result = compiled.call.receivesReferenceTypes({
    //   args: [Global.currentApplicationId, Txn.sender, asset],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/precompiled-typed.algo.ts:172
    // appId,
    frame_dig 0
    cover 1
    // tests/approvals/precompiled-typed.algo.ts:171
    // args: [Global.currentApplicationId, Txn.sender, asset],
    global CurrentApplicationID
    itob
    txn Sender
    uncover 2
    itob
    uncover 2
    cover 1
    cover 2
    // tests/approvals/precompiled-typed.algo.ts:170-173
    // const result = compiled.call.receivesReferenceTypes({
    //   args: [Global.currentApplicationId, Txn.sender, asset],
    //   appId,
    // })
    pushbytes 0x66698d18 // method "receivesReferenceTypes(uint64,address,uint64)void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_next_txn@3

tests/approvals/precompiled-typed.algo.ts::HelloFactory.test_call_contract_with_reference_types_next_txn@3:
    // tests/approvals/precompiled-typed.algo.ts:170-173
    // const result = compiled.call.receivesReferenceTypes({
    //   args: [Global.currentApplicationId, Txn.sender, asset],
    //   appId,
    // })
    itxn_submit
    // tests/approvals/precompiled-typed.algo.ts:175
    // assert(result.itxn.logs(0) === Global.currentApplicationAddress.bytes)
    intc_0 // 0
    itxnas Logs
    global CurrentApplicationAddress
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:176
    // assert(result.itxn.logs(1) === Txn.sender.bytes)
    intc_2 // 1
    itxnas Logs
    txn Sender
    ==
    assert
    // tests/approvals/precompiled-typed.algo.ts:177
    // assert(result.itxn.logs(2) === asset.name)
    pushint 2 // 2
    itxnas Logs
    frame_dig 1
    asset_params_get AssetName
    assert // asset exists
    ==
    assert
    retsub


// tests/approvals/precompiled-typed.algo.ts::HelloFactory.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 9 2982900
    bytecblock "x" 0x151f7c75

main_block@0:

main_block@1:
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@9

main_abi_routing@2:
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x9beff36a // method "getMbr()uint64"
    pushbytes 0xa4e8d164 // method "bootstrap(pay)void"
    pushbytes 0x1960177c // method "increaseXCount(uint64,uint64)void"
    pushbytes 0x25f323d0 // method "getCounts(uint64)(uint64,uint8)"
    uncover 4
    match main_getMbr_route@3 main_bootstrap_route@4 main_increaseXCount_route@5 main_getCounts_route@6

main_switch_case_default@7:

main_switch_case_next@8:

main_after_if_else@13:
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__puya_arc4_router__@14:
    return

main_getCounts_route@6:
    // tests/approvals/large-objects-in-state.algo.ts:33
    // getCounts(index: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txna ApplicationArgs 1
    btoi
    // tests/approvals/large-objects-in-state.algo.ts:33
    // getCounts(index: uint64) {
    callsub getCounts
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__puya_arc4_router__@14

main_increaseXCount_route@5:
    // tests/approvals/large-objects-in-state.algo.ts:29
    // increaseXCount(index: uint64, xCount: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/approvals/large-objects-in-state.algo.ts:29
    // increaseXCount(index: uint64, xCount: uint64) {
    callsub increaseXCount
    intc_1 // 1
    b main_after_inlined_tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__puya_arc4_router__@14

main_bootstrap_route@4:
    // tests/approvals/large-objects-in-state.algo.ts:21
    // bootstrap(pay: gtxn.PaymentTxn) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txn GroupIndex
    intc_1 // 1
    -
    dup
    gtxns TypeEnum
    intc_1 // pay
    ==
    assert // transaction type is pay
    // tests/approvals/large-objects-in-state.algo.ts:21
    // bootstrap(pay: gtxn.PaymentTxn) {
    callsub bootstrap
    intc_1 // 1
    b main_after_inlined_tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__puya_arc4_router__@14

main_getMbr_route@3:
    // tests/approvals/large-objects-in-state.algo.ts:17
    // getMbr(): uint64 {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub getMbr
    itob
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@10

main_switch_case_default@11:

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/large-objects-in-state.algo.ts:14
    // class LargeObjectsInStateAlgo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__puya_arc4_router__@14


// tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.getMbr() -> uint64:
getMbr:

getMbr_block@0:
    // tests/approvals/large-objects-in-state.algo.ts:18
    // return BOX_MBR + ACCOUNT_BASE_MBR
    intc_3 // 2982900
    retsub


// tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.bootstrap(pay: uint64) -> void:
bootstrap:
    // tests/approvals/large-objects-in-state.algo.ts:21
    // bootstrap(pay: gtxn.PaymentTxn) {
    proto 1 0

bootstrap_block@0:
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    frame_dig -1
    gtxns Amount
    // tests/approvals/large-objects-in-state.algo.ts:23
    // amount: BOX_MBR + ACCOUNT_BASE_MBR,
    intc_3 // 2982900
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    ==
    bz bootstrap_bool_false@3

bootstrap_and_contd@1:
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    frame_dig -1
    gtxns Receiver
    // tests/approvals/large-objects-in-state.algo.ts:24
    // receiver: Global.currentApplicationAddress,
    global CurrentApplicationAddress
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    ==
    bz bootstrap_bool_false@3

bootstrap_bool_true@2:
    intc_1 // 1

bootstrap_bool_merge@4:
    // tests/approvals/large-objects-in-state.algo.ts:22-25
    // assertMatch(pay, {
    //   amount: BOX_MBR + ACCOUNT_BASE_MBR,
    //   receiver: Global.currentApplicationAddress,
    // })
    assert // assert target is match for conditions
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:26
    // this.storage.create()
    pushint 7200 // 7200
    box_create
    pop
    retsub

bootstrap_bool_false@3:
    intc_0 // 0
    b bootstrap_bool_merge@4


// tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.increaseXCount(index: uint64, xCount: uint64) -> void:
increaseXCount:
    // tests/approvals/large-objects-in-state.algo.ts:29
    // increaseXCount(index: uint64, xCount: uint64) {
    proto 2 0

increaseXCount_block@0:
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:30
    // this.storage.value[index].x += xCount
    box_get
    assert // Box must have value
    frame_dig -2
    intc_2 // 9
    *
    intc_2 // 9
    extract3 // on error: index access is out of bounds
    intc_0 // 0
    pushint 8 // 8
    extract3
    btoi
    frame_dig -1
    +
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:30
    // this.storage.value[index].x += xCount
    box_get
    assert // Box must have value
    swap
    itob
    swap
    frame_dig -2
    intc_2 // 9
    *
    dig 1
    swap
    intc_2 // 9
    extract3 // on error: index access is out of bounds
    intc_0 // 0
    uncover 3
    replace3
    frame_dig -2
    intc_2 // 9
    *
    uncover 2
    swap
    uncover 2
    replace3
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:30
    // this.storage.value[index].x += xCount
    swap
    box_put
    retsub


// tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.getCounts(index: uint64) -> bytes:
getCounts:
    // tests/approvals/large-objects-in-state.algo.ts:33
    // getCounts(index: uint64) {
    proto 1 1

getCounts_block@0:
    // tests/approvals/large-objects-in-state.algo.ts:15
    // storage = Box<FixedArray<Counts, typeof MAX_ITEMS>>({ key: 'x' })
    bytec_0 // "x"
    // tests/approvals/large-objects-in-state.algo.ts:34
    // return this.storage.value[index]
    box_get
    assert // Box must have value
    frame_dig -1
    intc_2 // 9
    *
    intc_2 // 9
    extract3 // on error: index access is out of bounds
    retsub


// tests/approvals/large-objects-in-state.algo.ts::LargeObjectsInStateAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

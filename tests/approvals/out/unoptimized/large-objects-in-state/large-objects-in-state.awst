contract LargeObjectsInStateAlgo
{
  boxes {
    ["x"]: arc4.static_array<tests/approvals/large-objects-in-state.algo.ts::Counts>
  }
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  getMbr(): uint64
  {
    return 2982900
  }
  
  bootstrap(pay: group_transaction_pay): void
  {
    assert(&&(gtxns<Amount>(pay) == 2982900, gtxns<Receiver>(pay) == global<CurrentApplicationAddress>()), comment=assert target is match for conditions)
    box_create("x", size_of(arc4.static_array<tests/approvals/large-objects-in-state.algo.ts::Counts>))
  }
  
  increaseXCount(index: uint64, xCount: uint64): void
  {
    Box["x"].value[index].x: uint64 = Box["x"].value[index].x + xCount
  }
  
  getCounts(index: uint64): tests/approvals/large-objects-in-state.algo.ts::Counts
  {
    return Box["x"].value[index]
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
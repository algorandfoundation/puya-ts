{
    "name": "MyContract",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [
                {
                    "type": "uint64",
                    "name": "size"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        32
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        95
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrIDB4YTc4MDAwZGUKICAgIGIgbWFpbl9ibG9ja0AwCgptYWluX2Jsb2NrQDA6CiAgICBiIG1haW5fYmxvY2tAMQoKbWFpbl9ibG9ja0AxOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjcKICAgIC8vIGNsYXNzIE15Q29udHJhY3QgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBieiBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA5CiAgICBiIG1haW5fYWJpX3JvdXRpbmdAMgoKbWFpbl9hYmlfcm91dGluZ0AyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjcKICAgIC8vIGNsYXNzIE15Q29udHJhY3QgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBieiBtYWluX2NyZWF0ZV9Ob09wQDcKICAgIGIgbWFpbl9jYWxsX05vT3BAMwoKbWFpbl9jYWxsX05vT3BAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo3CiAgICAvLyBjbGFzcyBNeUNvbnRyYWN0IGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgYnl0ZWNfMCAvLyBtZXRob2QgInRlc3QoKXZvaWQiCiAgICBwdXNoYnl0ZXMgMHgwYTQ3NDNhNiAvLyBtZXRob2QgInRlc3QyKHVpbnQ2NCl2b2lkIgogICAgdW5jb3ZlciAyCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVANCBtYWluX3Rlc3QyX3JvdXRlQDUKICAgIGIgbWFpbl9zd2l0Y2hfY2FzZV9uZXh0QDYKCm1haW5fc3dpdGNoX2Nhc2VfbmV4dEA2OgogICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAOAoKbWFpbl9hZnRlcl9pZl9lbHNlQDg6CiAgICBiIG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAoKbWFpbl9hZnRlcl9pZl9lbHNlQDEwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjcKICAgIC8vIGNsYXNzIE15Q29udHJhY3QgZXh0ZW5kcyBDb250cmFjdCB7CiAgICBlcnIKCm1haW5fdGVzdDJfcm91dGVANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czoyMwogICAgLy8gdGVzdDIoc2l6ZTogdWludDY0KSB7CiAgICBjYWxsc3ViIHRlc3QyCiAgICBiIG1haW5fc3dpdGNoX2Nhc2VfbmV4dEA2CgptYWluX3Rlc3Rfcm91dGVANDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo4CiAgICAvLyB0ZXN0KCkgewogICAgY2FsbHN1YiB0ZXN0CiAgICBiIG1haW5fc3dpdGNoX2Nhc2VfbmV4dEA2CgptYWluX2NyZWF0ZV9Ob09wQDc6CiAgICBiIG1haW5fYWZ0ZXJfaWZfZWxzZUA4CgptYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA5OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjcKICAgIC8vIGNsYXNzIE15Q29udHJhY3QgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgPT0KICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGNhbGxzdWIgX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjpNeUNvbnRyYWN0LnRlc3Rbcm91dGluZ10oKSAtPiB2b2lkOgp0ZXN0OgogICAgYiB0ZXN0X2Jsb2NrQDAKCnRlc3RfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo4CiAgICAvLyB0ZXN0KCkgewogICAgY2FsbHN1YiB0ZXN0cy9hcHByb3ZhbHMvb3BzLmFsZ28udHM6Ok15Q29udHJhY3QudGVzdAogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo6TXlDb250cmFjdC50ZXN0Mltyb3V0aW5nXSgpIC0+IHZvaWQ6CnRlc3QyOgogICAgYiB0ZXN0Ml9ibG9ja0AwCgp0ZXN0Ml9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjIzCiAgICAvLyB0ZXN0MihzaXplOiB1aW50NjQpIHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIGNhbGxzdWIgdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjpNeUNvbnRyYWN0LnRlc3QyCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjpNeUNvbnRyYWN0LnRlc3QoKSAtPiB2b2lkOgp0ZXN0cy9hcHByb3ZhbHMvb3BzLmFsZ28udHM6Ok15Q29udHJhY3QudGVzdDoKICAgIGIgdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjpNeUNvbnRyYWN0LnRlc3RfYmxvY2tAMAoKdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjpNeUNvbnRyYWN0LnRlc3RfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo5CiAgICAvLyBjb25zdCBhID0gYnplcm8oOCkuYml0d2lzZUludmVydCgpCiAgICBwdXNoaW50IDggLy8gOAogICAgYnplcm8KICAgIGJ+CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvb3BzLmFsZ28udHM6MTAKICAgIC8vIGNvbnN0IGIgPSBvcDIuYnRvaShhKQogICAgYnRvaQogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjExCiAgICAvLyBhc3NlcnQoYiA9PT0gMiAqKiA2NCAtIDEpCiAgICBkdXAKICAgIHB1c2hpbnQgMTg0NDY3NDQwNzM3MDk1NTE2MTUgLy8gMTg0NDY3NDQwNzM3MDk1NTE2MTUKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czoxMwogICAgLy8gY29uc3QgYyA9IG9wLnNocihiLCAzMikKICAgIHB1c2hpbnQgMzIgLy8gMzIKICAgIHNocgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjE1CiAgICAvLyBhc3NlcnQoYyA9PT0gMiAqKiAzMiAtIDEpCiAgICBwdXNoaW50IDQyOTQ5NjcyOTUgLy8gNDI5NDk2NzI5NQogICAgPT0KICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjE3CiAgICAvLyBhc3NlcnQoR1R4bi5hcHBsaWNhdGlvbklkKFR4bi5ncm91cEluZGV4KSA9PT0gVHhuLmFwcGxpY2F0aW9uSWQpCiAgICB0eG4gR3JvdXBJbmRleAogICAgZ3R4bnMgQXBwbGljYXRpb25JRAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czoxOQogICAgLy8gYXNzZXJ0KFR4bi5hcHBsaWNhdGlvbkFyZ3MoMCkgPT09IG1ldGhvZFNlbGVjdG9yKCd0ZXN0KCl2b2lkJykpCiAgICBpbnRjXzAgLy8gMAogICAgdHhuYXMgQXBwbGljYXRpb25BcmdzCiAgICBieXRlY18wIC8vIG1ldGhvZCAidGVzdCgpdm9pZCIKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czoyMAogICAgLy8gYXNzZXJ0KEdUeG4uYXBwbGljYXRpb25BcmdzKFR4bi5ncm91cEluZGV4LCAwKSA9PT0gbWV0aG9kU2VsZWN0b3IoTXlDb250cmFjdC5wcm90b3R5cGUudGVzdCkpCiAgICB0eG4gR3JvdXBJbmRleAogICAgaW50Y18wIC8vIDAKICAgIGd0eG5zYXMgQXBwbGljYXRpb25BcmdzCiAgICBieXRlY18wIC8vIG1ldGhvZCAidGVzdCgpdm9pZCIKICAgID09CiAgICBhc3NlcnQKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo6TXlDb250cmFjdC50ZXN0MihzaXplOiB1aW50NjQpIC0+IHZvaWQ6CnRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo6TXlDb250cmFjdC50ZXN0MjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czoyMwogICAgLy8gdGVzdDIoc2l6ZTogdWludDY0KSB7CiAgICBwcm90byAxIDAKICAgIGIgdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjpNeUNvbnRyYWN0LnRlc3QyX2Jsb2NrQDAKCnRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo6TXlDb250cmFjdC50ZXN0Ml9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL29wcy5hbGdvLnRzOjI0CiAgICAvLyBjb25zdCBhID0gYnplcm8oc2l6ZSkKICAgIGZyYW1lX2RpZyAtMQogICAgYnplcm8KICAgIC8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czoyNQogICAgLy8gYXNzZXJ0KGEubGVuZ3RoID09PSBzaXplKQogICAgbGVuCiAgICBmcmFtZV9kaWcgLTEKICAgID09CiAgICBhc3NlcnQKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9vcHMuYWxnby50czo6TXlDb250cmFjdC5fX2FsZ290c19fLmRlZmF1bHRDcmVhdGUoKSAtPiB2b2lkOgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGU6CiAgICBiIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZV9ibG9ja0AwCgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMDoKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiACAAEmAQSngADeQgAAQgAAMRsiE0EAPUIAADEZIhJEMRgiE0EAK0IAADYaACiABApHQ6ZPAo4CABAACkIAAEIAAEIAAACIACNC//OIABVC/+1C/+0xGSISMRgiEhBEiABdI0NCAACIAA4jQ0IAADYaAReIADojQ0IAAIEIr64XSYH///////////8BEkSBIJGB/////w8SRDEWOBgxGBJEIsAaKBJEMRYiwhooEkSJigEAQgAAi/+vFYv/EkSJQgAAiQ==",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
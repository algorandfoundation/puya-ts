{
    "name": "DemoContract",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        100
                    ],
                    "errorMessage": "Bytes(uint64) is equivalent to itob"
                },
                {
                    "pc": [
                        113
                    ],
                    "errorMessage": "Bytes(uint64) returns an 8 byte encoding"
                },
                {
                    "pc": [
                        92
                    ],
                    "errorMessage": "Empty bytes has length of 0"
                },
                {
                    "pc": [
                        32
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        125
                    ],
                    "errorMessage": "Round trip of biguint to bytes and back results in the same value"
                },
                {
                    "pc": [
                        76
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        37
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCgptYWluX2Jsb2NrQDA6CgptYWluX2Jsb2NrQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjE1CiAgICAvLyBjbGFzcyBEZW1vQ29udHJhY3QgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A2CgptYWluX2FiaV9yb3V0aW5nQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjE1CiAgICAvLyBjbGFzcyBEZW1vQ29udHJhY3QgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBwdXNoYnl0ZXMgMHhmNTllM2NjNCAvLyBtZXRob2QgInRlc3QoKWJvb2wiCiAgICBzd2FwCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVAMwoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDQ6CgptYWluX3N3aXRjaF9jYXNlX25leHRANToKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6MTUKICAgIC8vIGNsYXNzIERlbW9Db250cmFjdCBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCgptYWluX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6RGVtb0NvbnRyYWN0Ll9fcHV5YV9hcmM0X3JvdXRlcl9fQDExOgogICAgcmV0dXJuCgptYWluX3Rlc3Rfcm91dGVAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6MTYKICAgIC8vIHB1YmxpYyB0ZXN0KCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIE5vT3AKICAgID09CiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjpEZW1vQ29udHJhY3QudGVzdAogICAgcHVzaGJ5dGVzIDB4MDAKICAgIGludGNfMCAvLyAwCiAgICB1bmNvdmVyIDIKICAgIHNldGJpdAogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgYiBtYWluX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6RGVtb0NvbnRyYWN0Ll9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czoxNQogICAgLy8gY2xhc3MgRGVtb0NvbnRyYWN0IGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIDAKICAgIHN3YXAKICAgIG1hdGNoIG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDcKCm1haW5fc3dpdGNoX2Nhc2VfZGVmYXVsdEA4OgoKbWFpbl9zd2l0Y2hfY2FzZV9uZXh0QDk6CiAgICBiIG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAoKbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVANzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6MTUKICAgIC8vIGNsYXNzIERlbW9Db250cmFjdCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgPT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGNhbGxzdWIgX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlCiAgICBpbnRjXzEgLy8gMQogICAgYiBtYWluX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6RGVtb0NvbnRyYWN0Ll9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgoKLy8gdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6dGVzdChhOiB1aW50NjQsIGI6IGJ5dGVzLCBjOiBieXRlcykgLT4gdm9pZDoKdGVzdDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6NAogICAgLy8gZnVuY3Rpb24gdGVzdChhOiB1aW50NjQsIGI6IGJpZ3VpbnQsIGM6IHN0cmluZykgewogICAgcHJvdG8gMyAwCgp0ZXN0X2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjUKICAgIC8vIGFzc2VydChCeXRlcygpLmxlbmd0aCA9PT0gMCwgJ0VtcHR5IGJ5dGVzIGhhcyBsZW5ndGggb2YgMCcpCiAgICBwdXNoYnl0ZXMgMHgKICAgIGxlbgogICAgaW50Y18wIC8vIDAKICAgID09CiAgICBhc3NlcnQgLy8gRW1wdHkgYnl0ZXMgaGFzIGxlbmd0aCBvZiAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjYKICAgIC8vIGFzc2VydChCeXRlcyhhKSA9PT0gb3AuaXRvYihhKSwgJ0J5dGVzKHVpbnQ2NCkgaXMgZXF1aXZhbGVudCB0byBpdG9iJykKICAgIGZyYW1lX2RpZyAtMwogICAgaXRvYgogICAgZnJhbWVfZGlnIC0zCiAgICBpdG9iCiAgICA9PQogICAgYXNzZXJ0IC8vIEJ5dGVzKHVpbnQ2NCkgaXMgZXF1aXZhbGVudCB0byBpdG9iCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjcKICAgIC8vIGFzc2VydChCeXRlcyhVaW50NjQoMSkpID09PSBCeXRlcy5mcm9tSGV4KCcwMDAwMDAwMDAwMDAwMDAxJyksICdCeXRlcyh1aW50NjQpIHJldHVybnMgYW4gOCBieXRlIGVuY29kaW5nJykKICAgIHB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDEKICAgIGR1cAogICAgPT0KICAgIGFzc2VydCAvLyBCeXRlcyh1aW50NjQpIHJldHVybnMgYW4gOCBieXRlIGVuY29kaW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjgKICAgIC8vIGFzc2VydChCeXRlcyhCaWdVaW50KDI1NikpID09PSBCeXRlcy5mcm9tSGV4KCcwMTAwJykpCiAgICBwdXNoYnl0ZXMgMHgwMTAwCiAgICBkdXAKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6OQogICAgLy8gYXNzZXJ0KEJpZ1VpbnQoQnl0ZXMoYikpID09PSBiLCAnUm91bmQgdHJpcCBvZiBiaWd1aW50IHRvIGJ5dGVzIGFuZCBiYWNrIHJlc3VsdHMgaW4gdGhlIHNhbWUgdmFsdWUnKQogICAgZnJhbWVfZGlnIC0yCiAgICBkdXAKICAgIGI9PQogICAgYXNzZXJ0IC8vIFJvdW5kIHRyaXAgb2YgYmlndWludCB0byBieXRlcyBhbmQgYmFjayByZXN1bHRzIGluIHRoZSBzYW1lIHZhbHVlCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjEwCiAgICAvLyBhc3NlcnQoU3RyaW5nKEJ5dGVzKGMpKSA9PT0gYykKICAgIGZyYW1lX2RpZyAtMQogICAgZHVwCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYnl0ZS1leHByZXNzaW9ucy5hbGdvLnRzOjExCiAgICAvLyBhc3NlcnQoQnl0ZXMoQnl0ZXMoJzEyMycpKSA9PT0gQnl0ZXMoJzEyMycpKQogICAgcHVzaGJ5dGVzICIxMjMiCiAgICBkdXAKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6MTIKICAgIC8vIGFzc2VydChCeXRlcyhbMSwgMiwgMywgNF0pID09PSBCeXRlcy5mcm9tSGV4KCcwMTAyMDMwNCcpKQogICAgcHVzaGJ5dGVzIDB4MDEwMjAzMDQKICAgIGR1cAogICAgPT0KICAgIGFzc2VydAogICAgcmV0c3ViCgoKLy8gdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6RGVtb0NvbnRyYWN0LnRlc3QoKSAtPiB1aW50NjQ6CnRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6OkRlbW9Db250cmFjdC50ZXN0OgoKdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6RGVtb0NvbnRyYWN0LnRlc3RfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6MTcKICAgIC8vIHRlc3QoMSwgNTBuLCAndGhpbmdzJykKICAgIGludGNfMSAvLyAxCiAgICBwdXNoYnl0ZXMgMHgzMgogICAgcHVzaGJ5dGVzICJ0aGluZ3MiCiAgICBjYWxsc3ViIHRlc3QKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ieXRlLWV4cHJlc3Npb25zLmFsZ28udHM6MTgKICAgIC8vIHJldHVybiB0cnVlCiAgICBpbnRjXzEgLy8gMQogICAgcmV0c3ViCgoKLy8gdGVzdHMvYXBwcm92YWxzL2J5dGUtZXhwcmVzc2lvbnMuYWxnby50czo6RGVtb0NvbnRyYWN0Ll9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZSgpIC0+IHZvaWQ6Cl9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZToKCl9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZV9ibG9ja0AwOgogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAExGyITQQAxNhoAgAT1njzETI4BAAIiQzEZIhJEMRgiE0SIAGyAAQAiTwJUgAQVH3x1TFCwI0L/3jEZIkyOAQADQv/SMRgiEkSIAFYjQv/HigMAgAAVIhJEi/0Wi/0WEkSACAAAAAAAAAABSRJEgAIBAEkSRIv+SahEi/9JEkSAAzEyM0kSRIAEAQIDBEkSRIkjgAEygAZ0aGluZ3OI/7AjiYk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 4,
            "patch": 4
        }
    },
    "events": [],
    "templateVariables": {}
}
#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 10 123
    bytecblock 0x30313233343536373839 "123"

main_block@0:

main_block@1:
    // tests/approvals/uint64-to-string.algo.ts:4
    // class Uint64ToStringAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@6

main_abi_routing@2:
    // tests/approvals/uint64-to-string.algo.ts:4
    // class Uint64ToStringAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0xf65f24df // method "test(uint64)string"
    swap
    match main_test_route@3

main_switch_case_default@4:

main_switch_case_next@5:

main_after_if_else@10:
    // tests/approvals/uint64-to-string.algo.ts:4
    // class Uint64ToStringAlgo extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/uint64-to-string.algo.ts::Uint64ToStringAlgo.__puya_arc4_router__@11:
    return

main_test_route@3:
    // tests/approvals/uint64-to-string.algo.ts:5
    // test(x: uint64): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/uint64-to-string.algo.ts:4
    // class Uint64ToStringAlgo extends Contract {
    txna ApplicationArgs 1
    btoi
    // tests/approvals/uint64-to-string.algo.ts:5
    // test(x: uint64): string {
    callsub test
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/uint64-to-string.algo.ts::Uint64ToStringAlgo.__puya_arc4_router__@11

main_bare_routing@6:
    // tests/approvals/uint64-to-string.algo.ts:4
    // class Uint64ToStringAlgo extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@7

main_switch_case_default@8:

main_switch_case_next@9:
    b main_after_if_else@10

main___algots__.defaultCreate@7:
    // tests/approvals/uint64-to-string.algo.ts:4
    // class Uint64ToStringAlgo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/uint64-to-string.algo.ts::Uint64ToStringAlgo.__puya_arc4_router__@11


// puya-ts::itoa(i: uint64) -> bytes:
itoa:
    proto 1 1

itoa_block@0:
    frame_dig -1
    intc_2 // 10
    <
    bz itoa_else_body@2

itoa_if_body@1:
    bytec_0 // 0x30313233343536373839
    frame_dig -1
    intc_1 // 1
    extract3
    retsub

itoa_else_body@2:
    frame_dig -1
    intc_2 // 10
    /
    callsub itoa
    frame_dig -1
    intc_2 // 10
    %
    bytec_0 // 0x30313233343536373839
    swap
    intc_1 // 1
    extract3
    concat
    retsub


// tests/approvals/uint64-to-string.algo.ts::Uint64ToStringAlgo.test(x: uint64) -> bytes:
test:
    // tests/approvals/uint64-to-string.algo.ts:5
    // test(x: uint64): string {
    proto 1 1

test_block@0:
    // tests/approvals/uint64-to-string.algo.ts:8
    // assert(y.toString() === '123')
    intc_3 // 123
    callsub itoa
    bytec_1 // "123"
    ==
    assert
    // tests/approvals/uint64-to-string.algo.ts:10
    // assert(`${y}` === '123')
    intc_3 // 123
    callsub itoa
    pushbytes ""
    swap
    concat
    bytec_1 // "123"
    ==
    assert
    // tests/approvals/uint64-to-string.algo.ts:12
    // return x.toString()
    frame_dig -1
    callsub itoa
    retsub


// tests/approvals/uint64-to-string.algo.ts::Uint64ToStringAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

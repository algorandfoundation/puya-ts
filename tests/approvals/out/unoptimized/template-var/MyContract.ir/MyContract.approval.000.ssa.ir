main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#0: bool = tests/approvals/template-var.algo.ts::MyContract.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/template-var.algo.ts::MyContract.__puya_arc4_router__() -> bool:
    block@0: // L7
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@10
    block@1: // abi_routing_L7
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (== tmp%2#0 NoOp)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        let tmp%5#0: bool = (!= tmp%4#0 0u)
        goto tmp%5#0 ? block@2 : block@8
    block@2: // call_NoOp_L7
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "getInt()uint64" => block@3, method "getString()string" => block@4, method "getBytes()byte[]" => block@5, method "getAddress()address" => block@6, * => block@7}
    block@3: // getInt_route_L8
        tests/approvals/template-var.algo.ts::MyContract.getInt[routing]()
        goto block@7
    block@4: // getString_route_L12
        tests/approvals/template-var.algo.ts::MyContract.getString[routing]()
        goto block@7
    block@5: // getBytes_route_L16
        tests/approvals/template-var.algo.ts::MyContract.getBytes[routing]()
        goto block@7
    block@6: // getAddress_route_L20
        tests/approvals/template-var.algo.ts::MyContract.getAddress[routing]()
        goto block@7
    block@7: // switch_case_next_L7
        goto block@9
    block@8: // create_NoOp_L7
        goto block@9
    block@9: // after_if_else_L7
        goto block@11
    block@10: // __algots__.defaultCreate_L7
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (== tmp%7#0 NoOp)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (== tmp%9#0 0u)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        tests/approvals/template-var.algo.ts::MyContract.__algots__.defaultCreate()
        exit 1u
    block@11: // after_if_else_L7
        exit 0u

subroutine tests/approvals/template-var.algo.ts::MyContract.getInt[routing]() -> void:
    block@0: // L8
        let tmp%0#0: uint64 = tests/approvals/template-var.algo.ts::MyContract.getInt()
        let tmp%1#0: Encoded(uint64) = bytes_encode<uint64>(tmp%0#0)
        let tmp%2#0: bytes = (concat 0x151f7c75 tmp%1#0)
        (log tmp%2#0)
        exit 1u

subroutine tests/approvals/template-var.algo.ts::MyContract.getString[routing]() -> void:
    block@0: // L12
        let tmp%0#0: string = tests/approvals/template-var.algo.ts::MyContract.getString()
        let tmp%1#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>(tmp%0#0)
        let tmp%2#0: bytes = (concat 0x151f7c75 tmp%1#0)
        (log tmp%2#0)
        exit 1u

subroutine tests/approvals/template-var.algo.ts::MyContract.getBytes[routing]() -> void:
    block@0: // L16
        let tmp%0#0: bytes = tests/approvals/template-var.algo.ts::MyContract.getBytes()
        let tmp%1#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(tmp%0#0)
        let tmp%2#0: bytes = (concat 0x151f7c75 tmp%1#0)
        (log tmp%2#0)
        exit 1u

subroutine tests/approvals/template-var.algo.ts::MyContract.getAddress[routing]() -> void:
    block@0: // L20
        let tmp%0#0: Encoded(uint8[32]) = tests/approvals/template-var.algo.ts::MyContract.getAddress()
        let tmp%1#0: bytes = (concat 0x151f7c75 tmp%0#0)
        (log tmp%1#0)
        exit 1u

subroutine tests/approvals/template-var.algo.ts::MyContract.getInt() -> uint64:
    block@0: // L8
        return TemplateVar[uint64](TMPL_AN_INT)

subroutine tests/approvals/template-var.algo.ts::MyContract.getString() -> string:
    block@0: // L12
        return TemplateVar[string](TMPL_A_STRING)

subroutine tests/approvals/template-var.algo.ts::MyContract.getBytes() -> bytes:
    block@0: // L16
        return TemplateVar[bytes](TMPL_SOME_BYTES)

subroutine tests/approvals/template-var.algo.ts::MyContract.getAddress() -> Encoded(uint8[32]):
    block@0: // L20
        return TemplateVar[Encoded(uint8[32])](TMPL_AN_ADDRESS)

subroutine tests/approvals/template-var.algo.ts::MyContract.__algots__.defaultCreate() -> void:
    block@0: // L7
        return 
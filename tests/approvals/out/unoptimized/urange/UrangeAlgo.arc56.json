{
    "name": "UrangeAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testSingleArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testTwoArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testThreeArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        34
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        116
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        173,
                        262,
                        352
                    ],
                    "errorMessage": "Step cannot be zero"
                },
                {
                    "pc": [
                        212,
                        301,
                        391
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyAEAAECCCYBBBUffHVCAABCAAAxGyITQQBQQgAAMRkiEkQxGCITQQA+QgAANhoAgAQBMpoygATqY9SsgAStLh8OTwOOAwAWABAACkIAAEIAAEIAAACIADtC//OIAChC/+2IABVC/+dC/+cxGSISMRgiEhBEiAE2I0NCAACIACEoTwFQsCNDQgAAiABtKE8BULAjQ0IAAIgAuShPAVCwI0OKAAFCAAAiFlcGAiNEIkIAAIsBgQUMQQA/QgAAiwEjFlcGAk8BFlBJFU4BJE8CUosATwFQSRVOAUkkTwNSFSUKFlcGAk8BIk8CXYwAQgAAiwEjCIwBQv+5iYoAAUIAACIWVwYCI0QkQgAAiwGBBQxBAD9CAACLASMWVwYCTwEWUEkVTgEkTwJSiwBPAVBJFU4BSSRPA1IVJQoWVwYCTwEiTwJdjABCAACLASMIjAFC/7mJigABQgAAIhZXBgKBA0QkQgAAiwGBCgxBAEBCAACLASMWVwYCTwEWUEkVTgEkTwJSiwBPAVBJFU4BSSRPA1IVJQoWVwYCTwEiTwJdjABCAACLAYEDCIwBQv+4iUIAAIk=",
        "clear": "C0IAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}
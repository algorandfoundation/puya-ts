{
    "name": "UrangeAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testSingleArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testTwoArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testThreeArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        83,
                        107,
                        131
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        195,
                        284,
                        374
                    ],
                    "errorMessage": "Step cannot be zero"
                },
                {
                    "pc": [
                        173
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        88,
                        112,
                        136
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        234,
                        323,
                        413
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiAEAAECCCYBBBUffHWAAEIAAEIAADEbIhNBAHpCAAA2GgCABAEymjKABOpj1KyABK0uHw5PA44DAEAAKAAQQgAAQgAAQgAAIkUBQgAAQzEZIhJEMRgiE0SIAQ0oTwFQsCNFAUL/5zEZIhJEMRgiE0SIAJwoTwFQsCNFAUL/zzEZIhJEMRgiE0SIACsoTwFQsCNFAUL/tzEZIk8BjgEACUIAAEIAAEL/nzEYIhJEiAETI0UBQv+XigABQgAAIhZXBgIjRCJCAACLAYEFDEEAP0IAAIsBIxZXBgJPARZQSRVOASRPAlKLAE8BUEkVTgFJJE8DUhUlChZXBgJPASJPAl2MAEIAAIsBIwiMAUL/uYmKAAFCAAAiFlcGAiNEJEIAAIsBgQUMQQA/QgAAiwEjFlcGAk8BFlBJFU4BJE8CUosATwFQSRVOAUkkTwNSFSUKFlcGAk8BIk8CXYwAQgAAiwEjCIwBQv+5iYoAAUIAACIWVwYCgQNEJEIAAIsBgQoMQQBAQgAAiwEjFlcGAk8BFlBJFU4BJE8CUosATwFQSRVOAUkkTwNSFSUKFlcGAk8BIk8CXYwAQgAAiwGBAwiMAUL/uIlCAACJ",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
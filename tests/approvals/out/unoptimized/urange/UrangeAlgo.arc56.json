{
    "name": "UrangeAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testSingleArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testTwoArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testThreeArg",
            "args": [],
            "returns": {
                "type": "uint64[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        58,
                        79,
                        100
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        149,
                        212,
                        277
                    ],
                    "errorMessage": "Step cannot be zero"
                },
                {
                    "pc": [
                        132
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        63,
                        84,
                        105
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        174,
                        238,
                        304
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAAEIBSYBBBUffHUxGyITQQBgNhoAgAQBMpoygATqY9SsgAStLh8OTwOOAwAsABcAAiJDMRkiEkQxGCITRIgAyChMULAjQv/qMRkiEkQxGCITRIgAcyhMULAjQv/VMRkiEkQxGCITRIgAHyhMULAjQv/AMRkiTI4BAANC/7QxGCISRIgAxiNC/6mKAAEiFlcGAiNEIosBJQxBACyLASMWVwYCTBZQVwIAiwBMUElXAgAVJAoWVwYCTCJPAl2MAIsBIwiMAUL/zYmKAAEiFlcGAiNEgQKLASUMQQAsiwEjFlcGAkwWUFcCAIsATFBJVwIAFSQKFlcGAkwiTwJdjACLASMIjAFC/82JigABIhZXBgKBA0SBAosBgQoMQQAtiwEjFlcGAkwWUFcCAIsATFBJVwIAFSQKFlcGAkwiTwJdjACLAYEDCIwBQv/LiYk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
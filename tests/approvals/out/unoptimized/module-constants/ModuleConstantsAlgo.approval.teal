#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 64 0 1 2
    bytecblock 0x 0x151f7c75 0x08 "ab"

main_block@0:

main_block@1:
    // tests/approvals/module-constants.algo.ts:42
    // class ModuleConstantsAlgo extends Contract {
    txn NumAppArgs
    intc_1 // 0
    !=
    bz main_bare_routing@9

main_abi_routing@2:
    // tests/approvals/module-constants.algo.ts:42
    // class ModuleConstantsAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x687a073d // method "getBoolConstants()(bool,bool)"
    pushbytes 0x0a0c480e // method "getUintConstants()(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)"
    pushbytes 0x0510a934 // method "getBigUintConstants()(uint512,uint512,uint512,uint512,uint512,uint512,uint512,uint512)"
    pushbytes 0x773153a7 // method "getStringConstants()string[]"
    uncover 4
    match main_getBoolConstants_route@3 main_getUintConstants_route@4 main_getBigUintConstants_route@5 main_getStringConstants_route@6

main_switch_case_default@7:

main_switch_case_next@8:

main_after_if_else@13:
    // tests/approvals/module-constants.algo.ts:42
    // class ModuleConstantsAlgo extends Contract {
    intc_1 // 0

main_after_inlined_tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__puya_arc4_router__@14:
    return

main_getStringConstants_route@6:
    // tests/approvals/module-constants.algo.ts:52
    // getStringConstants() {
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_1 // 0
    !=
    assert // can only call when not creating
    callsub getStringConstants
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__puya_arc4_router__@14

main_getBigUintConstants_route@5:
    // tests/approvals/module-constants.algo.ts:49
    // getBigUintConstants() {
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_1 // 0
    !=
    assert // can only call when not creating
    callsub getBigUintConstants
    cover 7
    cover 6
    cover 5
    cover 4
    cover 3
    cover 2
    swap
    dup
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    b|
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    dig 1
    len
    intc_0 // 64
    <=
    assert // overflow
    intc_0 // 64
    bzero
    uncover 2
    b|
    concat
    bytec_0 // 0x
    concat
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__puya_arc4_router__@14

main_getUintConstants_route@4:
    // tests/approvals/module-constants.algo.ts:46
    // getUintConstants() {
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_1 // 0
    !=
    assert // can only call when not creating
    callsub getUintConstants
    cover 10
    cover 9
    cover 8
    cover 7
    cover 6
    cover 5
    cover 4
    cover 3
    cover 2
    swap
    itob
    bytec_0 // 0x
    swap
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    bytec_0 // 0x
    concat
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__puya_arc4_router__@14

main_getBoolConstants_route@3:
    // tests/approvals/module-constants.algo.ts:43
    // getBoolConstants() {
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_1 // 0
    !=
    assert // can only call when not creating
    callsub getBoolConstants
    swap
    pushbytes 0x00
    intc_1 // 0
    uncover 2
    setbit
    bytec_0 // 0x
    swap
    concat
    intc_2 // 1
    uncover 2
    setbit
    bytec_0 // 0x
    concat
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/module-constants.algo.ts:42
    // class ModuleConstantsAlgo extends Contract {
    txn OnCompletion
    intc_1 // 0
    swap
    match main___algots__.defaultCreate@10

main_switch_case_default@11:

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/module-constants.algo.ts:42
    // class ModuleConstantsAlgo extends Contract {
    txn ApplicationID
    intc_1 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_2 // 1
    b main_after_inlined_tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__puya_arc4_router__@14


// tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.getBoolConstants() -> uint64, uint64:
getBoolConstants:

getBoolConstants_block@0:
    // tests/approvals/module-constants.algo.ts:7
    // const b_and = b_a && b_b
    intc_1 // 0
    // tests/approvals/module-constants.algo.ts:8
    // const b_or = b_a || b_b
    intc_2 // 1
    // tests/approvals/module-constants.algo.ts:44
    // return [b_and, b_or] as const
    retsub


// tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.getUintConstants() -> uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64, uint64:
getUintConstants:

getUintConstants_block@0:
    // tests/approvals/module-constants.algo.ts:13
    // const u_add: uint64 = u_a + u_b
    pushint 12 // 12
    // tests/approvals/module-constants.algo.ts:14
    // const u_sub: uint64 = u_a - u_b
    pushint 8 // 8
    // tests/approvals/module-constants.algo.ts:15
    // const u_mul: uint64 = u_a * u_b
    pushint 20 // 20
    // tests/approvals/module-constants.algo.ts:16
    // const u_div: uint64 = u_a / u_b
    pushint 5 // 5
    // tests/approvals/module-constants.algo.ts:17
    // const u_mod: uint64 = u_a % u_b
    intc_1 // 0
    // tests/approvals/module-constants.algo.ts:18
    // const u_pow: uint64 = u_a ** u_b
    pushint 100 // 100
    // tests/approvals/module-constants.algo.ts:19
    // const u_lshift: uint64 = u_a << u_b
    pushint 40 // 40
    // tests/approvals/module-constants.algo.ts:20
    // const u_rshift: uint64 = u_a >> u_b
    intc_3 // 2
    // tests/approvals/module-constants.algo.ts:21
    // const u_bitOr: uint64 = u_a | u_b
    pushint 10 // 10
    // tests/approvals/module-constants.algo.ts:22
    // const u_bitXor: uint64 = u_a ^ u_b
    pushint 8 // 8
    // tests/approvals/module-constants.algo.ts:23
    // const u_bitAnd: uint64 = u_a & u_b
    intc_3 // 2
    // tests/approvals/module-constants.algo.ts:47
    // return [u_add, u_sub, u_mul, u_div, u_mod, u_pow, u_lshift, u_rshift, u_bitOr, u_bitXor, u_bitAnd] as const
    retsub


// tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.getBigUintConstants() -> bytes, bytes, bytes, bytes, bytes, bytes, bytes, bytes:
getBigUintConstants:

getBigUintConstants_block@0:
    // tests/approvals/module-constants.algo.ts:28
    // const bu_add: biguint = bu_a + bu_b
    pushbytes 0x0c
    // tests/approvals/module-constants.algo.ts:29
    // const bu_sub: biguint = bu_a - bu_b
    bytec_2 // 0x08
    // tests/approvals/module-constants.algo.ts:30
    // const bu_mul: biguint = bu_a * bu_b
    pushbytes 0x14
    // tests/approvals/module-constants.algo.ts:31
    // const bu_div: biguint = bu_a / bu_b
    pushbytes 0x05
    // tests/approvals/module-constants.algo.ts:32
    // const bu_mod: biguint = bu_a % bu_b
    bytec_0 // 0x
    // tests/approvals/module-constants.algo.ts:33
    // const bu_bitOr: biguint = bu_a | bu_b
    pushbytes 0x0a
    // tests/approvals/module-constants.algo.ts:34
    // const bu_bitXor: biguint = bu_a ^ bu_b
    bytec_2 // 0x08
    // tests/approvals/module-constants.algo.ts:35
    // const bu_bitAnd: biguint = bu_a & bu_b
    pushbytes 0x02
    // tests/approvals/module-constants.algo.ts:50
    // return [bu_add, bu_sub, bu_mul, bu_div, bu_mod, bu_bitOr, bu_bitXor, bu_bitAnd] as const
    retsub


// tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.getStringConstants() -> bytes:
getStringConstants:

getStringConstants_block@0:
    // tests/approvals/module-constants.algo.ts:40
    // const s_add = s_a + s_b
    bytec_3 // "ab"
    // tests/approvals/module-constants.algo.ts:53
    // return [s_add]
    len
    itob
    extract 6 2
    // tests/approvals/module-constants.algo.ts:40
    // const s_add = s_a + s_b
    bytec_3 // "ab"
    // tests/approvals/module-constants.algo.ts:53
    // return [s_add]
    concat
    bytec_0 // 0x
    swap
    concat
    intc_3 // 2
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    intc_2 // 1
    itob
    extract 6 2
    swap
    concat
    swap
    concat
    retsub


// tests/approvals/module-constants.algo.ts::ModuleConstantsAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#0: bool = tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/abi-decorators.algo.ts::SubAbi.__puya_arc4_router__() -> bool:
    block@0: // L43
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@5
    block@1: // abi_routing_L43
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "someMethod()string" => block@2, * => block@3}
    block@2: // someMethod_route_L44
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 OptIn)
        (assert tmp%4#0) // OnCompletion is not OptIn
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let tmp%7#0: string = tests/approvals/abi-decorators.algo.ts::SubAbi.someMethod()
        let tmp%8#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>(tmp%7#0)
        let tmp%9#0: bytes = (concat 0x151f7c75 tmp%8#0)
        (log tmp%9#0)
        return 1u
    block@3: // switch_case_default_L43
        goto block@4
    block@4: // switch_case_next_L43
        goto block@9
    block@5: // bare_routing_L43
        let tmp%10#0: uint64 = (txn OnCompletion)
        switch tmp%10#0 {0u => block@6, * => block@7}
    block@6: // __algots__.defaultCreate_L43
        let tmp%11#0: uint64 = (txn ApplicationID)
        let tmp%12#0: bool = (== tmp%11#0 0u)
        (assert tmp%12#0) // can only call when creating
        tests/approvals/abi-decorators.algo.ts::SubAbi.__algots__.defaultCreate()
        return 1u
    block@7: // switch_case_default_L43
        goto block@8
    block@8: // switch_case_next_L43
        goto block@9
    block@9: // after_if_else_L43
        return 0u

subroutine tests/approvals/abi-decorators.algo.ts::SubAbi.someMethod() -> string:
    block@0: // L44
        return "sub-abi:optin"

subroutine tests/approvals/abi-decorators.algo.ts::SubAbi.__algots__.defaultCreate() -> void:
    block@0: // L43
        return 
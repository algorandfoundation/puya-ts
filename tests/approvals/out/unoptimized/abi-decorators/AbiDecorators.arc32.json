{
    "hints": {
        "justNoop()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "createMethod()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "allActions()void": {
            "call_config": {
                "no_op": "CALL",
                "opt_in": "CALL",
                "close_out": "CALL",
                "delete_application": "CALL",
                "update_application": "CALL"
            }
        },
        "overrideReadonlyName()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "methodWithDefaults(uint64,uint64,uint64)uint64": {
            "default_arguments": {
                "a": {
                    "source": "global-state",
                    "data": "globalValue"
                },
                "b": {
                    "source": "abi-method",
                    "data": {
                        "name": "overrideReadonlyName",
                        "args": [],
                        "readonly": true,
                        "returns": {
                            "type": "uint64"
                        }
                    }
                },
                "c": {
                    "source": "constant",
                    "data": 145
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "globalValue": {
                    "type": "uint64",
                    "key": "globalValue"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AbiDecorators",
        "methods": [
            {
                "name": "justNoop",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "createMethod",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "allActions",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "overrideReadonlyName",
                "args": [],
                "readonly": true,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "methodWithDefaults",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    },
                    {
                        "type": "uint64",
                        "name": "c"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}
{
    "name": "TealScriptConventionsAlgo",
    "structs": {},
    "methods": [
        {
            "name": "noMoreThanks",
            "args": [
                {
                    "type": "uint64",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "createApplication",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp",
                    "DeleteApplication"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setLocal",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "optInToApplication",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "updateApplication",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "UpdateApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "global": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Z2xvYmFs"
                }
            },
            "local": {
                "local": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "bG9jYWw="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": [
            "DeleteApplication"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        155
                    ],
                    "errorMessage": "OnCompletion must be CloseOut && can only call when not creating"
                },
                {
                    "pc": [
                        172
                    ],
                    "errorMessage": "OnCompletion must be DeleteApplication && can only call when not creating"
                },
                {
                    "pc": [
                        85
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        118
                    ],
                    "errorMessage": "OnCompletion must be OptIn && can only call when not creating"
                },
                {
                    "pc": [
                        102
                    ],
                    "errorMessage": "OnCompletion must be UpdateApplication && can only call when not creating"
                },
                {
                    "pc": [
                        139
                    ],
                    "errorMessage": "OnCompletion must be one of NoOp, DeleteApplication && can only call when creating"
                },
                {
                    "pc": [
                        215,
                        241
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        224,
                        250
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        189
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyB0ZXN0cy9hcHByb3ZhbHMvdGVhbC1zY3JpcHQtY29udmVudGlvbnMuYWxnby50czo6VGVhbFNjcmlwdENvbnZlbnRpb25zQWxnby5jbGVhclN0YXRlUHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGIgbWFpbl9ibG9ja0AwCgptYWluX2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdGVhbC1zY3JpcHQtY29udmVudGlvbnMuYWxnby50czoyOAogICAgLy8gcmV0dXJuIHRydWUKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyADAAECQgAAQgAAMRsiE0EAj0IAADYaAIAEdmplfoAELyvlF4AEAaOj/4AERvdlM4AE33MAu08FjgUATQA4ACgAFwAHQgAAQgAAADEZIhIxGCITEESIAJBC/+wxGYEEEjEYIhMQRIgAoUL/2zEZIxIxGCITEESIAIlC/8sxGSNPAZCBIRoxGCISEESIAEBC/7YxGSQSMRgiExBEiAATQv+mMRmBBRIxGCITEESIAJEjQ0IAADYaAUkVgQgSRBeIAFEWgAQVH3x1TwFQsCNDQgAANhoBSSJZIwskCEsBFRJEVwIAiAA1I0NCAAA2GgFJIlkjCyQISwEVEkRXAgCIAC0jQ0IAAIgAPCNDQgAAiAA4I0OKAQFCAACL/4mKAQBCAACABmdsb2JhbIv/Z4mKAQBCAAAxAIAFbG9jYWyL/2aJQgAAiUIAAIlCAACJ",
        "clear": "C0IAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}
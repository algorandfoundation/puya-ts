{
    "hints": {
        "noMoreThanks(uint64)uint64": {
            "call_config": {
                "close_out": "CALL"
            }
        },
        "createApplication(byte[])void": {
            "call_config": {
                "no_op": "CREATE",
                "delete_application": "CREATE"
            }
        },
        "setLocal(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "optInToApplication()void": {
            "call_config": {
                "opt_in": "CALL"
            }
        },
        "updateApplication()void": {
            "call_config": {
                "update_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyB0ZXN0cy9hcHByb3ZhbHMvdGVhbC1zY3JpcHQtY29udmVudGlvbnMuYWxnby50czo6VGVhbFNjcmlwdENvbnZlbnRpb25zQWxnby5jbGVhclN0YXRlUHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGIgbWFpbl9ibG9ja0AwCgptYWluX2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdGVhbC1zY3JpcHQtY29udmVudGlvbnMuYWxnby50czoyOAogICAgLy8gcmV0dXJuIHRydWUKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 1,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "global": {
                    "type": "bytes",
                    "key": "global"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "local": {
                    "type": "bytes",
                    "key": "local"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "TealScriptConventionsAlgo",
        "methods": [
            {
                "name": "noMoreThanks",
                "args": [
                    {
                        "type": "uint64",
                        "name": "arg"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "createApplication",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setLocal",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "optInToApplication",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "updateApplication",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL"
    }
}
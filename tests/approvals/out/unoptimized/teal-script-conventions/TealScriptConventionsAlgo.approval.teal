#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1

main_block@0:

main_block@1:
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@10

main_abi_routing@2:
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    txna ApplicationArgs 0
    pushbytes 0x766a657e // method "noMoreThanks(uint64)uint64"
    pushbytes 0x2f2be517 // method "createApplication(byte[])void"
    pushbytes 0xdf7300bb // method "setLocal(string)void"
    pushbytes 0x01a3a3ff // method "optInToApplication()void"
    pushbytes 0x46f76533 // method "updateApplication()void"
    uncover 5
    match main_noMoreThanks_route@3 main_createApplication_route@4 main_setLocal_route@5 main_optInToApplication_route@6 main_updateApplication_route@7

main_switch_case_default@8:

main_switch_case_next@9:

main_after_if_else@14:
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    intc_0 // 0

main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15:
    return

main_updateApplication_route@7:
    // tests/approvals/teal-script-conventions.algo.ts:25
    // updateApplication() {}
    txn OnCompletion
    pushint 4 // UpdateApplication
    ==
    assert // OnCompletion is not UpdateApplication
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub updateApplication
    intc_1 // 1
    b main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15

main_optInToApplication_route@6:
    // tests/approvals/teal-script-conventions.algo.ts:23
    // optInToApplication() {}
    txn OnCompletion
    intc_1 // OptIn
    ==
    assert // OnCompletion is not OptIn
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub optInToApplication
    intc_1 // 1
    b main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15

main_setLocal_route@5:
    // tests/approvals/teal-script-conventions.algo.ts:17
    // setLocal(value: string) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/teal-script-conventions.algo.ts:17
    // setLocal(value: string) {
    callsub setLocal
    intc_1 // 1
    b main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15

main_createApplication_route@4:
    // tests/approvals/teal-script-conventions.algo.ts:12
    // @abimethod({ allowActions: ['NoOp', 'DeleteApplication'] })
    txn OnCompletion
    intc_1 // 1
    swap
    shl
    pushint 33 // 33
    &
    assert // OnCompletion is not one of NoOp, DeleteApplication
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/teal-script-conventions.algo.ts:12
    // @abimethod({ allowActions: ['NoOp', 'DeleteApplication'] })
    callsub createApplication
    intc_1 // 1
    b main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15

main_noMoreThanks_route@3:
    // tests/approvals/teal-script-conventions.algo.ts:8
    // @abimethod({ name: 'noMoreThanks' })
    txn OnCompletion
    pushint 2 // CloseOut
    ==
    assert // OnCompletion is not CloseOut
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    txna ApplicationArgs 1
    btoi
    // tests/approvals/teal-script-conventions.algo.ts:8
    // @abimethod({ name: 'noMoreThanks' })
    callsub closeOutOfApplication
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15

main_bare_routing@10:
    // tests/approvals/teal-script-conventions.algo.ts:5
    // export class TealScriptConventionsAlgo extends Contract implements ConventionalRouting {
    txn OnCompletion
    pushint 5 // 5
    swap
    match main_deleteApplication@11

main_switch_case_default@12:

main_switch_case_next@13:
    b main_after_if_else@14

main_deleteApplication@11:
    // tests/approvals/teal-script-conventions.algo.ts:20
    // @baremethod()
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub deleteApplication
    intc_1 // 1
    b main_after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__@15


// tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.closeOutOfApplication(arg: uint64) -> uint64:
closeOutOfApplication:
    // tests/approvals/teal-script-conventions.algo.ts:8-9
    // @abimethod({ name: 'noMoreThanks' })
    // closeOutOfApplication(arg: uint64) {
    proto 1 1

closeOutOfApplication_block@0:
    // tests/approvals/teal-script-conventions.algo.ts:10
    // return arg
    frame_dig -1
    retsub


// tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.createApplication(value: bytes) -> void:
createApplication:
    // tests/approvals/teal-script-conventions.algo.ts:12-13
    // @abimethod({ allowActions: ['NoOp', 'DeleteApplication'] })
    // createApplication(value: bytes) {
    proto 1 0

createApplication_block@0:
    // tests/approvals/teal-script-conventions.algo.ts:6
    // global = GlobalState<bytes>()
    pushbytes "global"
    // tests/approvals/teal-script-conventions.algo.ts:14
    // this.global.value = value
    frame_dig -1
    app_global_put
    retsub


// tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.setLocal(value: bytes) -> void:
setLocal:
    // tests/approvals/teal-script-conventions.algo.ts:17
    // setLocal(value: string) {
    proto 1 0

setLocal_block@0:
    // tests/approvals/teal-script-conventions.algo.ts:18
    // this.local(Txn.sender).value = value
    txn Sender
    // tests/approvals/teal-script-conventions.algo.ts:7
    // local = LocalState<string>()
    pushbytes "local"
    // tests/approvals/teal-script-conventions.algo.ts:18
    // this.local(Txn.sender).value = value
    frame_dig -1
    app_local_put
    retsub


// tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.deleteApplication() -> void:
deleteApplication:

deleteApplication_block@0:
    retsub


// tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.optInToApplication() -> void:
optInToApplication:

optInToApplication_block@0:
    retsub


// tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.updateApplication() -> void:
updateApplication:

updateApplication_block@0:
    retsub

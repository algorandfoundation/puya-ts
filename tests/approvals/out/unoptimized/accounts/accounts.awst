contract AccountsContract
{
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  getAccountInfo(account: account, asset: asset): Object3B1036D9
  {
    ensure_budget(1400, 0)
    return new Object3B1036D9(bytes=reinterpret_cast<bytes[32]>(account), balance=checked_maybe(acct_params_get<AcctBalance>(account), comment=account funded), minBalance=checked_maybe(acct_params_get<AcctMinBalance>(account), comment=account funded), authAddress=reinterpret_cast<bytes[32]>(checked_maybe(acct_params_get<AcctAuthAddr>(account), comment=account funded)), totalNumUint=checked_maybe(acct_params_get<AcctTotalNumUint>(account), comment=account funded), totalNumByteSlice=checked_maybe(acct_params_get<AcctTotalNumByteSlice>(account), comment=account funded), totalExtraAppPages=checked_maybe(acct_params_get<AcctTotalExtraAppPages>(account), comment=account funded), totalAppsCreated=checked_maybe(acct_params_get<AcctTotalAppsCreated>(account), comment=account funded), totalAppsOptedIn=checked_maybe(acct_params_get<AcctTotalAppsOptedIn>(account), comment=account funded), totalAssetsCreated=checked_maybe(acct_params_get<AcctTotalAssetsCreated>(account), comment=account funded), totalAssets=checked_maybe(acct_params_get<AcctTotalAssets>(account), comment=account funded), totalBoxes=checked_maybe(acct_params_get<AcctTotalBoxes>(account), comment=account funded), totalBoxBytes=checked_maybe(acct_params_get<AcctTotalBoxBytes>(account), comment=account funded), isOptInApp=app_opted_in(account, global<CurrentApplicationID>()), isOptInAsset=asset_holding_get<AssetBalance>(account, asset).1)
  }
  
  otherAccount(): void
  {
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
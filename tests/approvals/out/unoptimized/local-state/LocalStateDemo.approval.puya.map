{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/local-state.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;AA4BE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAVA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAVF;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAUE;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAHC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAPH;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;AAUE;;;AAAgB;;AAAA;;AAAA;AACK;;AAViB;AAUpC;;AAAA;AACoB;;AAVtB;AAUE;;AAAA;AACoB;;AAVgB;AAUpC;;AAAA;AACqB;;AAVvB;AAUE;;AAAA;AACsC;;AAAhB;;AAVxB;;AAUE;;AAAA;;AAKgC;;AAAQ;AAnBJ;AAmBI;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;AAL9C;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAUmB;;AA5BiB;AA4BpC;AACoB;;AA5BtB;AA4BE;AACoB;;AA5BgB;AA4BpC;AACqB;;AA5BvB;AA4BE;AACsB;;AA5BxB;;AA4BE;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 100 8"
    },
    "7": {
      "op": "bytecblock \"l1\" \"localUint2\" \"b1\" \"localBytes2\" \"localEncoded\""
    },
    "51": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "53": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "54": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "55": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "58": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "61": {
      "op": "pushbytes 0x29314d95 // method \"optIn()void\"",
      "defined_out": [
        "Method(optIn()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(optIn()void)"
      ]
    },
    "67": {
      "op": "pushbytes 0xaaefcb43 // method \"setState((uint64,byte[]),uint64[10])void\"",
      "defined_out": [
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)"
      ]
    },
    "73": {
      "op": "pushbytes 0x67816cc5 // method \"getState()(uint64,uint64,byte[],byte[],uint64[10])\"",
      "defined_out": [
        "Method(getState()(uint64,uint64,byte[],byte[],uint64[10]))",
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)",
        "Method(getState()(uint64,uint64,byte[],byte[],uint64[10]))"
      ]
    },
    "79": {
      "op": "pushbytes 0x11170534 // method \"clearState()void\"",
      "defined_out": [
        "Method(clearState()void)",
        "Method(getState()(uint64,uint64,byte[],byte[],uint64[10]))",
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)",
        "Method(getState()(uint64,uint64,byte[],byte[],uint64[10]))",
        "Method(clearState()void)"
      ]
    },
    "85": {
      "op": "uncover 4",
      "stack_out": [
        "Method(optIn()void)",
        "Method(setState((uint64,byte[]),uint64[10])void)",
        "Method(getState()(uint64,uint64,byte[],byte[],uint64[10]))",
        "Method(clearState()void)",
        "tmp%2#0"
      ]
    },
    "87": {
      "op": "match main_optIn_route@3 main_setState_route@4 main_getState_route@5 main_clearState_route@6",
      "stack_out": []
    },
    "97": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "98": {
      "block": "main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "99": {
      "block": "main_clearState_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "101": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "NoOp"
      ]
    },
    "102": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "103": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "104": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "106": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "107": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "108": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "109": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.clearState",
      "op": "callsub clearState"
    },
    "112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14"
    },
    "116": {
      "block": "main_getState_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "118": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "NoOp"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "120": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "121": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "124": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "125": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "126": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.getState",
      "op": "callsub getState",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0"
      ]
    },
    "129": {
      "op": "cover 4",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0"
      ]
    },
    "131": {
      "op": "cover 3",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%3#0",
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0"
      ]
    },
    "133": {
      "op": "cover 2",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "135": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%1#0",
        "elements_to_encode%0#0"
      ]
    },
    "136": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "137": {
      "op": "cover 3",
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%1#0"
      ]
    },
    "139": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "140": {
      "op": "cover 3",
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0"
      ]
    },
    "142": {
      "op": "dup",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%2#0 (copy)",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "elements_to_encode%2#0 (copy)"
      ]
    },
    "143": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "length%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "length%0#0"
      ]
    },
    "144": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "as_bytes%0#0"
      ]
    },
    "145": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "length_uint16%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%2#0",
        "length_uint16%0#0"
      ]
    },
    "148": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "length_uint16%0#0",
        "elements_to_encode%2#0"
      ]
    },
    "149": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "encoded_value%0#0"
      ]
    },
    "150": {
      "op": "cover 3",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0"
      ]
    },
    "152": {
      "op": "dup",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)"
      ]
    },
    "153": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "length%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "length%1#0"
      ]
    },
    "154": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "as_bytes%1#0"
      ]
    },
    "155": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "elements_to_encode%3#0",
        "length_uint16%1#0"
      ]
    },
    "158": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "length_uint16%1#0",
        "elements_to_encode%3#0"
      ]
    },
    "159": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0"
      ]
    },
    "160": {
      "op": "cover 3",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "162": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "164": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "165": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "166": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "val_as_bytes%1#0"
      ]
    },
    "167": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "168": {
      "op": "intc_2 // 100",
      "defined_out": [
        "100",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0",
        "100"
      ]
    },
    "169": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%2#0"
      ]
    },
    "170": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%0#0"
      ]
    },
    "173": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "174": {
      "op": "dig 1",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "176": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "data_length%0#0"
      ]
    },
    "177": {
      "op": "intc_2 // 100",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "data_length%0#0",
        "100"
      ]
    },
    "178": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%1#0"
      ]
    },
    "179": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "as_bytes%3#0"
      ]
    },
    "180": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%1#0"
      ]
    },
    "183": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "184": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%4#0",
        "elements_to_encode%4#0"
      ]
    },
    "186": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "187": {
      "op": "swap",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0"
      ]
    },
    "188": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "189": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ]
    },
    "190": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "191": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "0x151f7c75"
      ]
    },
    "197": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "198": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "199": {
      "op": "log",
      "stack_out": []
    },
    "200": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "201": {
      "op": "b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14"
    },
    "204": {
      "block": "main_setState_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "206": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "207": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "208": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "209": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "211": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "212": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "213": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "214": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "217": {
      "op": "dup",
      "defined_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ]
    },
    "218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "0"
      ]
    },
    "219": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "0",
        "8"
      ]
    },
    "220": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "item0%0#0"
      ]
    },
    "221": {
      "op": "btoi",
      "defined_out": [
        "item0%0%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0"
      ]
    },
    "222": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "tmp%11#0"
      ]
    },
    "223": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ]
    },
    "224": {
      "op": "intc_3 // 8",
      "stack_out": [
        "item0%0%0#0",
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "8"
      ]
    },
    "225": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "tmp%11#0",
        "item_start_offset%0#0"
      ]
    },
    "226": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%11#0"
      ]
    },
    "227": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ]
    },
    "228": {
      "op": "len",
      "defined_out": [
        "item0%0%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%11#0",
        "item_end_offset%0#0"
      ]
    },
    "229": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%11#0"
      ]
    },
    "230": {
      "op": "uncover 2",
      "stack_out": [
        "item0%0%0#0",
        "item_end_offset%0#0",
        "tmp%11#0",
        "item_start_offset%0#0"
      ]
    },
    "232": {
      "op": "uncover 2",
      "stack_out": [
        "item0%0%0#0",
        "tmp%11#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "234": {
      "op": "substring3",
      "defined_out": [
        "item0%0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0#0"
      ]
    },
    "235": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0"
      ]
    },
    "238": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[80]%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[80]%0#0"
      ]
    },
    "241": {
      "op": "uncover 2",
      "stack_out": [
        "item1%0%0#0",
        "reinterpret_bytes[80]%0#0",
        "item0%0%0#0"
      ]
    },
    "243": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[80]%0#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ]
    },
    "245": {
      "op": "uncover 2",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[80]%0#0"
      ]
    },
    "247": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.setState",
      "op": "callsub setState",
      "stack_out": []
    },
    "250": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "251": {
      "op": "b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14"
    },
    "254": {
      "block": "main_optIn_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "256": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "OptIn"
      ]
    },
    "257": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "258": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "259": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "261": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "262": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "263": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "264": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.optIn",
      "op": "callsub optIn"
    },
    "267": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "268": {
      "op": "b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14"
    },
    "271": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "273": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0"
      ]
    },
    "274": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%21#0"
      ]
    },
    "275": {
      "op": "match main___algots__.defaultCreate@10",
      "stack_out": []
    },
    "279": {
      "block": "main_switch_case_next@12",
      "stack_in": [],
      "op": "b main_after_if_else@13"
    },
    "282": {
      "block": "main___algots__.defaultCreate@10",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "284": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "285": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "286": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "287": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "290": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "291": {
      "op": "b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14"
    },
    "294": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.optIn",
      "params": {},
      "block": "optIn",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "295": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.setState",
      "params": {
        "p.a#0": "uint64",
        "p.b#0": "bytes",
        "c#0": "bytes"
      },
      "block": "setState",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "298": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "300": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "302": {
      "op": "swap",
      "stack_out": [
        "b#0",
        "a#0"
      ]
    },
    "303": {
      "op": "txn Sender",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "tmp%0#0"
      ]
    },
    "305": {
      "op": "bytec_0 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "a#0",
        "b#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "tmp%0#0",
        "\"l1\""
      ]
    },
    "306": {
      "op": "dig 2",
      "defined_out": [
        "\"l1\"",
        "a#0",
        "a#0 (copy)",
        "b#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "tmp%0#0",
        "\"l1\"",
        "a#0 (copy)"
      ]
    },
    "308": {
      "op": "app_local_put",
      "stack_out": [
        "b#0",
        "a#0"
      ]
    },
    "309": {
      "op": "txn Sender",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "tmp%1#0"
      ]
    },
    "311": {
      "op": "bytec_1 // \"localUint2\"",
      "defined_out": [
        "\"localUint2\"",
        "a#0",
        "b#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "tmp%1#0",
        "\"localUint2\""
      ]
    },
    "312": {
      "op": "uncover 2",
      "stack_out": [
        "b#0",
        "tmp%1#0",
        "\"localUint2\"",
        "a#0"
      ]
    },
    "314": {
      "op": "app_local_put",
      "stack_out": [
        "b#0"
      ]
    },
    "315": {
      "op": "txn Sender",
      "defined_out": [
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "b#0",
        "tmp%2#0"
      ]
    },
    "317": {
      "op": "bytec_2 // \"b1\"",
      "defined_out": [
        "\"b1\"",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "b#0",
        "tmp%2#0",
        "\"b1\""
      ]
    },
    "318": {
      "op": "dig 2",
      "defined_out": [
        "\"b1\"",
        "b#0",
        "b#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "b#0",
        "tmp%2#0",
        "\"b1\"",
        "b#0 (copy)"
      ]
    },
    "320": {
      "op": "app_local_put",
      "stack_out": [
        "b#0"
      ]
    },
    "321": {
      "op": "txn Sender",
      "defined_out": [
        "b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "b#0",
        "tmp%3#0"
      ]
    },
    "323": {
      "op": "bytec_3 // \"localBytes2\"",
      "defined_out": [
        "\"localBytes2\"",
        "b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "b#0",
        "tmp%3#0",
        "\"localBytes2\""
      ]
    },
    "324": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "\"localBytes2\"",
        "b#0"
      ]
    },
    "326": {
      "op": "app_local_put",
      "stack_out": []
    },
    "327": {
      "op": "frame_dig -1",
      "defined_out": [
        "copy%0#0"
      ],
      "stack_out": [
        "copy%0#0"
      ]
    },
    "329": {
      "op": "txn Sender",
      "defined_out": [
        "copy%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "copy%0#0",
        "tmp%4#0"
      ]
    },
    "331": {
      "op": "bytec 4 // \"localEncoded\"",
      "defined_out": [
        "\"localEncoded\"",
        "copy%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "copy%0#0",
        "tmp%4#0",
        "\"localEncoded\""
      ]
    },
    "333": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "\"localEncoded\"",
        "copy%0#0"
      ]
    },
    "335": {
      "op": "app_local_put",
      "stack_out": []
    },
    "336": {
      "retsub": true,
      "op": "retsub"
    },
    "337": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.getState",
      "params": {},
      "block": "getState",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "339": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "340": {
      "op": "bytec_0 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"l1\""
      ]
    },
    "341": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "342": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "343": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "345": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "0"
      ]
    },
    "346": {
      "op": "bytec_1 // \"localUint2\"",
      "defined_out": [
        "\"localUint2\"",
        "0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "0",
        "\"localUint2\""
      ]
    },
    "347": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "348": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "350": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "351": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "353": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "354": {
      "op": "bytec_2 // \"b1\"",
      "defined_out": [
        "\"b1\"",
        "0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "0",
        "\"b1\""
      ]
    },
    "355": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "356": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "358": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "359": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "361": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0",
        "0"
      ]
    },
    "362": {
      "op": "bytec_3 // \"localBytes2\"",
      "defined_out": [
        "\"localBytes2\"",
        "0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "363": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "364": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%3#0"
      ]
    },
    "366": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "367": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0"
      ]
    },
    "369": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0",
        "0"
      ]
    },
    "370": {
      "op": "bytec 4 // \"localEncoded\"",
      "defined_out": [
        "\"localEncoded\"",
        "0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "372": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "373": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%4#0"
      ]
    },
    "375": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "376": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "378": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "379": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0",
        "0",
        "\"l1\""
      ]
    },
    "380": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "381": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%5#0"
      ]
    },
    "383": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "384": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0",
        "0"
      ]
    },
    "387": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0",
        "0",
        "\"localUint2\""
      ]
    },
    "388": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "389": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "390": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0"
      ]
    },
    "392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0",
        "0"
      ]
    },
    "393": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0",
        "0",
        "\"b1\""
      ]
    },
    "394": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "395": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%7#0"
      ]
    },
    "397": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "398": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0"
      ]
    },
    "400": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0",
        "0"
      ]
    },
    "401": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "402": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "403": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%8#0"
      ]
    },
    "405": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "406": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0"
      ]
    },
    "408": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0",
        "0"
      ]
    },
    "409": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "411": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "412": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%9#0"
      ]
    },
    "414": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "415": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0"
      ]
    },
    "417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0",
        "0"
      ]
    },
    "418": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0",
        "0",
        "\"l1\""
      ]
    },
    "419": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%10#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "420": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%10#0"
      ]
    },
    "422": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "423": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0"
      ]
    },
    "425": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0",
        "0"
      ]
    },
    "426": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0",
        "0",
        "\"localUint2\""
      ]
    },
    "427": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%11#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "428": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%11#0"
      ]
    },
    "430": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "431": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0"
      ]
    },
    "433": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0",
        "0"
      ]
    },
    "434": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0",
        "0",
        "\"b1\""
      ]
    },
    "435": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "436": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "437": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%13#0"
      ]
    },
    "439": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%13#0",
        "0"
      ]
    },
    "440": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%13#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "441": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%13#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "442": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%13#0"
      ]
    },
    "444": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "445": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%14#0"
      ]
    },
    "447": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%14#0",
        "0"
      ]
    },
    "448": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%14#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "450": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%14#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "451": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%14#0"
      ]
    },
    "453": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "454": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%15#0"
      ]
    },
    "456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%15#0",
        "0"
      ]
    },
    "457": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%15#0",
        "0",
        "\"l1\""
      ]
    },
    "458": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%15#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "459": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%15#0"
      ]
    },
    "461": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "462": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%16#0"
      ]
    },
    "464": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%16#0",
        "0"
      ]
    },
    "465": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%16#0",
        "0",
        "\"localUint2\""
      ]
    },
    "466": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%16#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "467": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%16#0"
      ]
    },
    "469": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "470": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%17#0"
      ]
    },
    "472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%17#0",
        "0"
      ]
    },
    "473": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%17#0",
        "0",
        "\"b1\""
      ]
    },
    "474": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%17#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "475": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%17#0"
      ]
    },
    "477": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "478": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%18#0"
      ]
    },
    "480": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%18#0",
        "0"
      ]
    },
    "481": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%18#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "482": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "483": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "484": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%19#0"
      ]
    },
    "486": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%19#0",
        "0"
      ]
    },
    "487": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%19#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "489": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%19#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "490": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%19#0"
      ]
    },
    "492": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "493": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%20#0"
      ]
    },
    "495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%20#0",
        "0"
      ]
    },
    "496": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%20#0",
        "0",
        "\"l1\""
      ]
    },
    "497": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%20#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%20#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "498": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%20#0"
      ]
    },
    "500": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "501": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%21#0"
      ]
    },
    "503": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%21#0",
        "0"
      ]
    },
    "504": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%21#0",
        "0",
        "\"localUint2\""
      ]
    },
    "505": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%21#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%21#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "506": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%21#0"
      ]
    },
    "508": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "509": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%22#0"
      ]
    },
    "511": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%22#0",
        "0"
      ]
    },
    "512": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%22#0",
        "0",
        "\"b1\""
      ]
    },
    "513": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%22#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%22#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "514": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%22#0"
      ]
    },
    "516": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "517": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%23#0"
      ]
    },
    "519": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%23#0",
        "0"
      ]
    },
    "520": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%23#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "521": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%23#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%23#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "522": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%23#0"
      ]
    },
    "524": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "525": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%24#0"
      ]
    },
    "527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%24#0",
        "0"
      ]
    },
    "528": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%24#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "530": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%24#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%24#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "531": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "defined_out": [
        "copy%4#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "copy%4#0"
      ]
    },
    "532": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "copy%4#0",
        "maybe_value%0#0"
      ]
    },
    "534": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%12#0",
        "maybe_value%18#0",
        "copy%4#0",
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "536": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%18#0",
        "copy%4#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "538": {
      "op": "uncover 4",
      "stack_out": [
        "copy%4#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "540": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "copy%4#0"
      ]
    },
    "542": {
      "retsub": true,
      "op": "retsub"
    },
    "543": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.clearState",
      "params": {},
      "block": "clearState",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "545": {
      "op": "bytec_0 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\""
      ]
    },
    "546": {
      "op": "app_local_del",
      "stack_out": []
    },
    "547": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "549": {
      "op": "bytec_1 // \"localUint2\"",
      "defined_out": [
        "\"localUint2\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"localUint2\""
      ]
    },
    "550": {
      "op": "app_local_del",
      "stack_out": []
    },
    "551": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "553": {
      "op": "bytec_2 // \"b1\"",
      "defined_out": [
        "\"b1\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"b1\""
      ]
    },
    "554": {
      "op": "app_local_del",
      "stack_out": []
    },
    "555": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "557": {
      "op": "bytec_3 // \"localBytes2\"",
      "defined_out": [
        "\"localBytes2\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"localBytes2\""
      ]
    },
    "558": {
      "op": "app_local_del",
      "stack_out": []
    },
    "559": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "561": {
      "op": "bytec 4 // \"localEncoded\"",
      "defined_out": [
        "\"localEncoded\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"localEncoded\""
      ]
    },
    "563": {
      "op": "app_local_del",
      "stack_out": []
    },
    "564": {
      "retsub": true,
      "op": "retsub"
    },
    "565": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}
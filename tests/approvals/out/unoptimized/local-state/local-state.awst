contract LocalStateDemo
{
  locals {
    ["l1"]: uint64
    ["localUint2"]: uint64
    ["b1"]: bytes
    ["localBytes2"]: bytes
    ["localEncoded"]: arc4.static_array<arc4.uint64>
    ["localTuple"]: readonly [uint64, bytes]
    ["localObject"]: {readonly a:uint64,readonly b:bytes}{ a: uint64, b: bytes }
    ["localMutableObject"]: Data
  }
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  optIn(): void
  {
  }
  
  setState(p: {a:uint64,b:bytes}, c: arc4.static_array<arc4.uint64>): void
  {
    #[a, b]: readonly [uint64, bytes] = #[p.a, p.b]
    LocalState[txn<Sender>()]["l1"]: uint64 = a
    LocalState[txn<Sender>()]["localUint2"]: uint64 = a
    LocalState[txn<Sender>()]["b1"]: bytes = b
    LocalState[txn<Sender>()]["localBytes2"]: bytes = b
    LocalState[txn<Sender>()]["localEncoded"]: arc4.static_array<arc4.uint64> = ($0 = copy(c))
    LocalState[txn<Sender>()]["localTuple"]: readonly [uint64, bytes] = #[($1 = #[a, b]).0, $1.1]
    LocalState[txn<Sender>()]["localObject"]: {readonly a:uint64,readonly b:bytes}{ a: uint64, b: bytes } = #{ a: ($2 = #{ a: a, b: b }).a, b: $2.b }
    LocalState[txn<Sender>()]["localMutableObject"]: Data = new Data(a=($3 = #{ a: a, b: b, c: True, d: "hello" }).a, b=$3.b, c=$3.c, d=$3.d)
  }
  
  getState(): {localUint:uint64,localUint2:uint64,localBytes:bytes,localBytes2:bytes,localEncoded:StaticArray<UintN<64>, 10>,localTuple:readonly [uint64, bytes],localObject:Readonly<object>,localMutableObject:object}
  {
    return new {localUint:uint64,localUint2:uint64,localBytes:bytes,localBytes2:bytes,localEncoded:StaticArray<UintN<64>, 10>,localTuple:readonly [uint64, bytes],localObject:Readonly<object>,localMutableObject:object}(localUint=LocalState[txn<Sender>()]["l1"], localUint2=LocalState[txn<Sender>()]["localUint2"], localBytes=LocalState[txn<Sender>()]["b1"], localBytes2=LocalState[txn<Sender>()]["localBytes2"], localEncoded=copy(LocalState[txn<Sender>()]["localEncoded"]), localTuple=LocalState[txn<Sender>()]["localTuple"], localObject=LocalState[txn<Sender>()]["localObject"], localMutableObject=copy(LocalState[txn<Sender>()]["localMutableObject"]))
  }
  
  clearState(): void
  {
    STATE_DELETE(LocalState[txn<Sender>()]["l1"])
    STATE_DELETE(LocalState[txn<Sender>()]["localUint2"])
    STATE_DELETE(LocalState[txn<Sender>()]["b1"])
    STATE_DELETE(LocalState[txn<Sender>()]["localBytes2"])
    STATE_DELETE(LocalState[txn<Sender>()]["localEncoded"])
    STATE_DELETE(LocalState[txn<Sender>()]["localTuple"])
    STATE_DELETE(LocalState[txn<Sender>()]["localObject"])
    STATE_DELETE(LocalState[txn<Sender>()]["localMutableObject"])
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
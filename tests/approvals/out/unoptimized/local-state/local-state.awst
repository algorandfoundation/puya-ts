contract LocalStateDemo
{
  locals {
    ["l1"]: uint64
    ["localUint2"]: uint64
    ["b1"]: bytes
    ["localBytes2"]: bytes
    ["localEncoded"]: arc4.static_array<arc4.uint64>
    ["localTuple"]: arc4.tuple<uint64,bytes>
    ["localObject"]: object{ a: uint64, b: bytes }
  }
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  optIn(): void
  {
  }
  
  setState(p: object{ a: uint64, b: bytes }, c: arc4.static_array<arc4.uint64>): void
  {
    { a: a, b: b }: object{ a: uint64, b: bytes } = p
    LocalState[txn<Sender>()]["l1"]: uint64 = a
    LocalState[txn<Sender>()]["localUint2"]: uint64 = a
    LocalState[txn<Sender>()]["b1"]: bytes = b
    LocalState[txn<Sender>()]["localBytes2"]: bytes = b
    LocalState[txn<Sender>()]["localEncoded"]: arc4.static_array<arc4.uint64> = copy(c)
    LocalState[txn<Sender>()]["localTuple"]: arc4.tuple<uint64,bytes> = ARC4_ENCODE(<tuple>[a, b], wtype=arc4.tuple<uint64,bytes>)
    LocalState[txn<Sender>()]["localObject"]: object{ a: uint64, b: bytes } = { a: a, b: b }
  }
  
  getState(): getStateResult{ localUint: uint64, localUint2: uint64, localBytes: bytes, localBytes2: bytes, localEncoded: arc4.static_array<arc4.uint64>, localTuple: arc4.tuple<uint64,bytes>, localObject: object{ a: uint64, b: bytes } }
  {
    return { localUint: (#0 = { localUint: LocalState[txn<Sender>()]["l1"], localUint2: LocalState[txn<Sender>()]["localUint2"], localBytes: LocalState[txn<Sender>()]["b1"], localBytes2: LocalState[txn<Sender>()]["localBytes2"], localEncoded: copy(LocalState[txn<Sender>()]["localEncoded"]), localTuple: LocalState[txn<Sender>()]["localTuple"], localObject: LocalState[txn<Sender>()]["localObject"] }).localUint, localUint2: #0.localUint2, localBytes: #0.localBytes, localBytes2: #0.localBytes2, localEncoded: #0.localEncoded, localTuple: #0.localTuple, localObject: #0.localObject }
  }
  
  clearState(): void
  {
    STATE_DELETE(LocalState[txn<Sender>()]["l1"])
    STATE_DELETE(LocalState[txn<Sender>()]["localUint2"])
    STATE_DELETE(LocalState[txn<Sender>()]["b1"])
    STATE_DELETE(LocalState[txn<Sender>()]["localBytes2"])
    STATE_DELETE(LocalState[txn<Sender>()]["localEncoded"])
    STATE_DELETE(LocalState[txn<Sender>()]["localTuple"])
    STATE_DELETE(LocalState[txn<Sender>()]["localObject"])
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
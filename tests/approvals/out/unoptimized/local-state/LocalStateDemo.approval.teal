#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 8 10
    bytecblock 0x "l1" "localUint2" "b1" "localBytes2" "localEncoded" "localTuple" "localObject" "localMutableObject" 0x68656c6c6f

main_block@0:

main_block@1:
    // tests/approvals/local-state.algo.ts:8
    // export class LocalStateDemo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@9

main_abi_routing@2:
    // tests/approvals/local-state.algo.ts:8
    // export class LocalStateDemo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x29314d95 // method "optIn()void"
    pushbytes 0xaaefcb43 // method "setState((uint64,byte[]),uint64[10])void"
    pushbytes 0x0ea2c469 // method "getState()(uint64,uint64,byte[],byte[],uint64[10],(uint64,byte[]),(uint64,byte[]),(uint64,byte[],bool,string))"
    pushbytes 0x11170534 // method "clearState()void"
    uncover 4
    match main_optIn_route@3 main_setState_route@4 main_getState_route@5 main_clearState_route@6

main_switch_case_default@7:

main_switch_case_next@8:

main_after_if_else@13:
    // tests/approvals/local-state.algo.ts:8
    // export class LocalStateDemo extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14:
    return

main_clearState_route@6:
    // tests/approvals/local-state.algo.ts:45
    // public clearState() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub clearState
    intc_1 // 1
    b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14

main_getState_route@5:
    // tests/approvals/local-state.algo.ts:32
    // public getState() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub getState
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14

main_setState_route@4:
    // tests/approvals/local-state.algo.ts:21
    // public setState({ a, b }: { a: uint64; b: bytes }, c: SampleArray) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/local-state.algo.ts:8
    // export class LocalStateDemo extends Contract {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    // tests/approvals/local-state.algo.ts:21
    // public setState({ a, b }: { a: uint64; b: bytes }, c: SampleArray) {
    callsub setState
    intc_1 // 1
    b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14

main_optIn_route@3:
    // tests/approvals/local-state.algo.ts:18
    // @abimethod({ allowActions: 'OptIn' })
    txn OnCompletion
    intc_1 // OptIn
    ==
    assert // OnCompletion is not OptIn
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub optIn
    intc_1 // 1
    b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/local-state.algo.ts:8
    // export class LocalStateDemo extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@10

main_switch_case_default@11:

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/local-state.algo.ts:8
    // export class LocalStateDemo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/local-state.algo.ts::LocalStateDemo.__puya_arc4_router__@14


// tests/approvals/local-state.algo.ts::LocalStateDemo.optIn() -> void:
optIn:

optIn_block@0:
    retsub


// tests/approvals/local-state.algo.ts::LocalStateDemo.setState(p: bytes, c: bytes) -> void:
setState:
    // tests/approvals/local-state.algo.ts:21
    // public setState({ a, b }: { a: uint64; b: bytes }, c: SampleArray) {
    proto 2 0

setState_block@0:
    // tests/approvals/local-state.algo.ts:21
    // public setState({ a, b }: { a: uint64; b: bytes }, c: SampleArray) {
    frame_dig -2
    intc_0 // 0
    intc_2 // 8
    extract3
    btoi
    frame_dig -2
    intc_2 // 8
    extract_uint16
    frame_dig -2
    len
    frame_dig -2
    uncover 2
    uncover 2
    substring3
    extract 2 0
    swap
    // tests/approvals/local-state.algo.ts:22
    // this.localUint(Txn.sender).value = a
    txn Sender
    // tests/approvals/local-state.algo.ts:9
    // localUint = LocalState<uint64>({ key: 'l1' })
    bytec_1 // "l1"
    // tests/approvals/local-state.algo.ts:22
    // this.localUint(Txn.sender).value = a
    dig 2
    app_local_put
    // tests/approvals/local-state.algo.ts:23
    // this.localUint2(Txn.sender).value = a
    txn Sender
    // tests/approvals/local-state.algo.ts:10
    // localUint2 = LocalState<uint64>()
    bytec_2 // "localUint2"
    // tests/approvals/local-state.algo.ts:23
    // this.localUint2(Txn.sender).value = a
    dig 2
    app_local_put
    // tests/approvals/local-state.algo.ts:24
    // this.localBytes(Txn.sender).value = b
    txn Sender
    // tests/approvals/local-state.algo.ts:11
    // localBytes = LocalState<bytes>({ key: 'b1' })
    bytec_3 // "b1"
    // tests/approvals/local-state.algo.ts:24
    // this.localBytes(Txn.sender).value = b
    dig 3
    app_local_put
    // tests/approvals/local-state.algo.ts:25
    // this.localBytes2(Txn.sender).value = b
    txn Sender
    // tests/approvals/local-state.algo.ts:12
    // localBytes2 = LocalState<bytes>()
    bytec 4 // "localBytes2"
    // tests/approvals/local-state.algo.ts:25
    // this.localBytes2(Txn.sender).value = b
    dig 3
    app_local_put
    // tests/approvals/local-state.algo.ts:26
    // this.localEncoded(Txn.sender).value = clone(c)
    txn Sender
    // tests/approvals/local-state.algo.ts:13
    // localEncoded = LocalState<SampleArray>()
    bytec 5 // "localEncoded"
    // tests/approvals/local-state.algo.ts:26
    // this.localEncoded(Txn.sender).value = clone(c)
    frame_dig -1
    app_local_put
    // tests/approvals/local-state.algo.ts:27
    // this.localTuple(Txn.sender).value = [a, b]
    txn Sender
    cover 2
    dup
    itob
    bytec_0 // 0x
    swap
    concat
    swap
    dig 2
    len
    itob
    extract 6 2
    dig 3
    concat
    bytec_0 // 0x
    swap
    concat
    intc_3 // 10
    itob
    extract 6 2
    uncover 3
    swap
    concat
    swap
    concat
    uncover 3
    // tests/approvals/local-state.algo.ts:14
    // localTuple = LocalState<readonly [uint64, bytes]>()
    bytec 6 // "localTuple"
    // tests/approvals/local-state.algo.ts:27
    // this.localTuple(Txn.sender).value = [a, b]
    uncover 2
    app_local_put
    // tests/approvals/local-state.algo.ts:28
    // this.localObject(Txn.sender).value = { a, b }
    txn Sender
    swap
    dup
    itob
    bytec_0 // 0x
    swap
    concat
    dig 3
    len
    itob
    extract 6 2
    dig 4
    concat
    bytec_0 // 0x
    swap
    concat
    intc_3 // 10
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    uncover 2
    // tests/approvals/local-state.algo.ts:15
    // localObject = LocalState<Readonly<{ a: uint64; b: bytes }>>()
    bytec 7 // "localObject"
    // tests/approvals/local-state.algo.ts:28
    // this.localObject(Txn.sender).value = { a, b }
    uncover 2
    app_local_put
    // tests/approvals/local-state.algo.ts:29
    // this.localMutableObject(Txn.sender).value = { a, b, c: true, d: new arc4.Str('hello') }
    bytec 9 // 0x68656c6c6f
    len
    itob
    extract 6 2
    bytec 9 // 0x68656c6c6f
    concat
    swap
    itob
    bytec_0 // 0x
    swap
    concat
    dig 2
    len
    itob
    extract 6 2
    uncover 3
    concat
    bytec_0 // 0x
    dig 1
    concat
    swap
    len
    pushint 13 // 13
    +
    pushint 13 // 13
    itob
    extract 6 2
    uncover 3
    swap
    concat
    pushbytes 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    concat
    uncover 2
    uncover 3
    concat
    swap
    uncover 2
    itob
    extract 6 2
    concat
    swap
    concat
    txn Sender
    // tests/approvals/local-state.algo.ts:16
    // localMutableObject = LocalState<Data>()
    bytec 8 // "localMutableObject"
    // tests/approvals/local-state.algo.ts:29
    // this.localMutableObject(Txn.sender).value = { a, b, c: true, d: new arc4.Str('hello') }
    uncover 2
    app_local_put
    retsub


// tests/approvals/local-state.algo.ts::LocalStateDemo.getState() -> bytes:
getState:

getState_block@0:
    // tests/approvals/local-state.algo.ts:34
    // localUint: this.localUint(Txn.sender).value,
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:9
    // localUint = LocalState<uint64>({ key: 'l1' })
    bytec_1 // "l1"
    // tests/approvals/local-state.algo.ts:34
    // localUint: this.localUint(Txn.sender).value,
    app_local_get_ex
    assert // check LocalState exists
    // tests/approvals/local-state.algo.ts:35
    // localUint2: this.localUint2(Txn.sender).value,
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:10
    // localUint2 = LocalState<uint64>()
    bytec_2 // "localUint2"
    // tests/approvals/local-state.algo.ts:35
    // localUint2: this.localUint2(Txn.sender).value,
    app_local_get_ex
    assert // check LocalState exists
    // tests/approvals/local-state.algo.ts:36
    // localBytes: this.localBytes(Txn.sender).value,
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:11
    // localBytes = LocalState<bytes>({ key: 'b1' })
    bytec_3 // "b1"
    // tests/approvals/local-state.algo.ts:36
    // localBytes: this.localBytes(Txn.sender).value,
    app_local_get_ex
    assert // check LocalState exists
    // tests/approvals/local-state.algo.ts:37
    // localBytes2: this.localBytes2(Txn.sender).value,
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:12
    // localBytes2 = LocalState<bytes>()
    bytec 4 // "localBytes2"
    // tests/approvals/local-state.algo.ts:37
    // localBytes2: this.localBytes2(Txn.sender).value,
    app_local_get_ex
    swap
    cover 4
    assert // check LocalState exists
    // tests/approvals/local-state.algo.ts:38
    // localEncoded: clone(this.localEncoded(Txn.sender).value),
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:13
    // localEncoded = LocalState<SampleArray>()
    bytec 5 // "localEncoded"
    // tests/approvals/local-state.algo.ts:38
    // localEncoded: clone(this.localEncoded(Txn.sender).value),
    app_local_get_ex
    swap
    cover 5
    assert // check LocalState exists
    // tests/approvals/local-state.algo.ts:39
    // localTuple: this.localTuple(Txn.sender).value,
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:14
    // localTuple = LocalState<readonly [uint64, bytes]>()
    bytec 6 // "localTuple"
    // tests/approvals/local-state.algo.ts:39
    // localTuple: this.localTuple(Txn.sender).value,
    app_local_get_ex
    assert // check LocalState exists
    dup
    intc_0 // 0
    intc_2 // 8
    extract3
    btoi
    swap
    dup
    intc_2 // 8
    extract_uint16
    swap
    dup
    len
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    swap
    cover 4
    cover 5
    // tests/approvals/local-state.algo.ts:40
    // localObject: this.localObject(Txn.sender).value,
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:15
    // localObject = LocalState<Readonly<{ a: uint64; b: bytes }>>()
    bytec 7 // "localObject"
    // tests/approvals/local-state.algo.ts:40
    // localObject: this.localObject(Txn.sender).value,
    app_local_get_ex
    assert // check LocalState exists
    dup
    intc_0 // 0
    intc_2 // 8
    extract3
    btoi
    swap
    dup
    intc_2 // 8
    extract_uint16
    swap
    dup
    len
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    swap
    cover 7
    cover 7
    // tests/approvals/local-state.algo.ts:41
    // localMutableObject: clone(this.localMutableObject(Txn.sender).value),
    txn Sender
    intc_0 // 0
    // tests/approvals/local-state.algo.ts:16
    // localMutableObject = LocalState<Data>()
    bytec 8 // "localMutableObject"
    // tests/approvals/local-state.algo.ts:41
    // localMutableObject: clone(this.localMutableObject(Txn.sender).value),
    app_local_get_ex
    swap
    cover 10
    assert // check LocalState exists
    // tests/approvals/local-state.algo.ts:33-42
    // return {
    //   localUint: this.localUint(Txn.sender).value,
    //   localUint2: this.localUint2(Txn.sender).value,
    //   localBytes: this.localBytes(Txn.sender).value,
    //   localBytes2: this.localBytes2(Txn.sender).value,
    //   localEncoded: clone(this.localEncoded(Txn.sender).value),
    //   localTuple: this.localTuple(Txn.sender).value,
    //   localObject: this.localObject(Txn.sender).value,
    //   localMutableObject: clone(this.localMutableObject(Txn.sender).value),
    // }
    uncover 2
    itob
    bytec_0 // 0x
    swap
    concat
    uncover 2
    itob
    concat
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    bytec_0 // 0x
    dig 1
    concat
    cover 2
    len
    pushint 106 // 106
    +
    cover 2
    pushint 106 // 106
    itob
    extract 6 2
    concat
    cover 2
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    swap
    dig 1
    concat
    cover 3
    len
    dig 1
    +
    cover 3
    itob
    extract 6 2
    concat
    uncover 7
    concat
    uncover 3
    itob
    bytec_0 // 0x
    swap
    concat
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    bytec_0 // 0x
    swap
    concat
    intc_3 // 10
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    uncover 2
    dig 1
    concat
    cover 2
    len
    dig 3
    +
    cover 3
    uncover 2
    itob
    extract 6 2
    concat
    cover 2
    uncover 3
    itob
    bytec_0 // 0x
    swap
    concat
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    bytec_0 // 0x
    swap
    concat
    intc_3 // 10
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    swap
    dig 1
    concat
    swap
    len
    dig 2
    +
    swap
    uncover 2
    itob
    extract 6 2
    uncover 3
    swap
    concat
    swap
    uncover 3
    concat
    swap
    uncover 2
    itob
    extract 6 2
    concat
    swap
    concat
    retsub


// tests/approvals/local-state.algo.ts::LocalStateDemo.clearState() -> void:
clearState:

clearState_block@0:
    // tests/approvals/local-state.algo.ts:46
    // this.localUint(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:9
    // localUint = LocalState<uint64>({ key: 'l1' })
    bytec_1 // "l1"
    // tests/approvals/local-state.algo.ts:46
    // this.localUint(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:47
    // this.localUint2(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:10
    // localUint2 = LocalState<uint64>()
    bytec_2 // "localUint2"
    // tests/approvals/local-state.algo.ts:47
    // this.localUint2(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:48
    // this.localBytes(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:11
    // localBytes = LocalState<bytes>({ key: 'b1' })
    bytec_3 // "b1"
    // tests/approvals/local-state.algo.ts:48
    // this.localBytes(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:49
    // this.localBytes2(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:12
    // localBytes2 = LocalState<bytes>()
    bytec 4 // "localBytes2"
    // tests/approvals/local-state.algo.ts:49
    // this.localBytes2(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:50
    // this.localEncoded(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:13
    // localEncoded = LocalState<SampleArray>()
    bytec 5 // "localEncoded"
    // tests/approvals/local-state.algo.ts:50
    // this.localEncoded(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:51
    // this.localTuple(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:14
    // localTuple = LocalState<readonly [uint64, bytes]>()
    bytec 6 // "localTuple"
    // tests/approvals/local-state.algo.ts:51
    // this.localTuple(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:52
    // this.localObject(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:15
    // localObject = LocalState<Readonly<{ a: uint64; b: bytes }>>()
    bytec 7 // "localObject"
    // tests/approvals/local-state.algo.ts:52
    // this.localObject(Txn.sender).delete()
    app_local_del
    // tests/approvals/local-state.algo.ts:53
    // this.localMutableObject(Txn.sender).delete()
    txn Sender
    // tests/approvals/local-state.algo.ts:16
    // localMutableObject = LocalState<Data>()
    bytec 8 // "localMutableObject"
    // tests/approvals/local-state.algo.ts:53
    // this.localMutableObject(Txn.sender).delete()
    app_local_del
    retsub


// tests/approvals/local-state.algo.ts::LocalStateDemo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

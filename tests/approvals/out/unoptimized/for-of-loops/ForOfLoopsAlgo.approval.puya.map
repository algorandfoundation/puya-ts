{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/for-of-loops.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;AAAA;;AAqCE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArCF;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqCE;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5BF;;;AA4BE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnBF;;;AAmBE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAVF;;;AAUE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADF;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACE;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AADF;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AACE;;;AACsB;;AACT;;AACT;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AANqB;AAOjB;AAAJ;;;AAEF;AAJA;;AAAA;;;;;;;;;;;;;AAAW;;;;;;;;AAAA;;;;;AAOb;;;AACsB;AACpB;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACgB;AAAA;AAAd;;AAAA;AAAA;;AACS;AAhBY;AAgBjB;AAAJ;;;AAEF;;;;;;;;;;;;;AAGF;;;AACsB;;AACpB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACgB;AAAA;AAAd;;AAAA;AAAA;;AACS;AAzBY;AAyBjB;AAAJ;;;AAEF;;;;;;;;;;;;;AAGF;;;AACsB;AACpB;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;;AAAA;;AAAA;AAAA;;AAjCqB;AAkCjB;AAAJ;;;AAEF;;;;;;;;;;;;;AAGF;;;AAAsC;;AAAA;AAAA;AAAA;AAAA;AACpB;AAAA;AAAA;AADoB;;AAAA;AAAA;AAAA;AAAA;AACpB;AADoB;;AAAA;AAAA;AAAA;AAAA;AACpB;AAAA;;;AAAA;AAAA;;AAAA;AAAV;AACc;AAAhB;AACe;AAAA;AAAA;AAAA;;AAAnB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;;AAAA;;AAAA;AAAA;;AA3CqB;AA4CjB;AAAJ;;;AAEF;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 8 1 42"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x"
    },
    "15": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ],
      "stack_out": [
        "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "49": {
      "op": "store 0",
      "stack_out": []
    },
    "51": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "53": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "54": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "55": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "58": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "61": {
      "op": "pushbytes 0xcf1f20b8 // method \"test_for_of_loop_tuple((uint64,uint64,uint64))uint64\"",
      "defined_out": [
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)"
      ]
    },
    "67": {
      "op": "pushbytes 0x8c16ee87 // method \"test_for_of_loop_arc4_dynamic_array(uint64[])uint64\"",
      "defined_out": [
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)"
      ]
    },
    "73": {
      "op": "pushbytes 0xb2c753bf // method \"test_for_of_loop_arc4_static_array(uint64[5])uint64\"",
      "defined_out": [
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)"
      ]
    },
    "79": {
      "op": "pushbytes 0xd1b5beee // method \"test_for_of_loop_native_immutable_array(uint64[])uint64\"",
      "defined_out": [
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)",
        "Method(test_for_of_loop_native_immutable_array(uint64[])uint64)",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)",
        "Method(test_for_of_loop_native_immutable_array(uint64[])uint64)"
      ]
    },
    "85": {
      "op": "pushbytes 0xa1cc0d94 // method \"test_for_of_loop_native_mutable_array((uint64,uint64,uint64))uint64\"",
      "defined_out": [
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)",
        "Method(test_for_of_loop_native_immutable_array(uint64[])uint64)",
        "Method(test_for_of_loop_native_mutable_array((uint64,uint64,uint64))uint64)",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)",
        "Method(test_for_of_loop_native_immutable_array(uint64[])uint64)",
        "Method(test_for_of_loop_native_mutable_array((uint64,uint64,uint64))uint64)"
      ]
    },
    "91": {
      "op": "uncover 5",
      "stack_out": [
        "Method(test_for_of_loop_tuple((uint64,uint64,uint64))uint64)",
        "Method(test_for_of_loop_arc4_dynamic_array(uint64[])uint64)",
        "Method(test_for_of_loop_arc4_static_array(uint64[5])uint64)",
        "Method(test_for_of_loop_native_immutable_array(uint64[])uint64)",
        "Method(test_for_of_loop_native_mutable_array((uint64,uint64,uint64))uint64)",
        "tmp%2#0"
      ]
    },
    "93": {
      "op": "match main_test_for_of_loop_tuple_route@3 main_test_for_of_loop_arc4_dynamic_array_route@4 main_test_for_of_loop_arc4_static_array_route@5 main_test_for_of_loop_native_immutable_array_route@6 main_test_for_of_loop_native_mutable_array_route@7",
      "stack_out": []
    },
    "105": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "106": {
      "block": "main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "107": {
      "block": "main_test_for_of_loop_native_mutable_array_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "109": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "NoOp"
      ]
    },
    "110": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "111": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "112": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "114": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "115": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "116": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "117": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[24]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%1#0"
      ]
    },
    "120": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)",
        "0"
      ]
    },
    "122": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "123": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%1#0",
        "reinterpret_bytes[24]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%1#0",
        "item0%1#0"
      ]
    },
    "124": {
      "op": "btoi",
      "defined_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%1#0",
        "item0%1%0#0"
      ]
    },
    "125": {
      "op": "swap",
      "stack_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0"
      ]
    },
    "126": {
      "op": "dup",
      "stack_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)"
      ]
    },
    "127": {
      "op": "intc_1 // 8",
      "stack_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)",
        "8"
      ]
    },
    "128": {
      "op": "dup",
      "stack_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "reinterpret_bytes[24]%1#0 (copy)",
        "8",
        "8"
      ]
    },
    "129": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%1%0#0",
        "item1%1#0",
        "reinterpret_bytes[24]%1#0"
      ],
      "stack_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "item1%1#0"
      ]
    },
    "130": {
      "op": "btoi",
      "defined_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "reinterpret_bytes[24]%1#0"
      ],
      "stack_out": [
        "item0%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "item1%1%0#0"
      ]
    },
    "131": {
      "op": "swap",
      "stack_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "reinterpret_bytes[24]%1#0"
      ]
    },
    "132": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item0%1%0#0",
        "item1%1%0#0",
        "reinterpret_bytes[24]%1#0"
      ],
      "stack_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "16"
      ]
    },
    "134": {
      "op": "intc_1 // 8",
      "stack_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "reinterpret_bytes[24]%1#0",
        "16",
        "8"
      ]
    },
    "135": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "item2%1#0"
      ],
      "stack_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "item2%1#0"
      ]
    },
    "136": {
      "op": "btoi",
      "defined_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "item2%1%0#0"
      ],
      "stack_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "item2%1%0#0"
      ]
    },
    "137": {
      "op": "uncover 2",
      "stack_out": [
        "item1%1%0#0",
        "item2%1%0#0",
        "item0%1%0#0"
      ]
    },
    "139": {
      "op": "uncover 2",
      "stack_out": [
        "item2%1%0#0",
        "item0%1%0#0",
        "item1%1%0#0"
      ]
    },
    "141": {
      "op": "uncover 2",
      "stack_out": [
        "item0%1%0#0",
        "item1%1%0#0",
        "item2%1%0#0"
      ]
    },
    "143": {
      "callsub": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_native_mutable_array",
      "op": "callsub test_for_of_loop_native_mutable_array",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "146": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "147": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "148": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "149": {
      "op": "concat",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "150": {
      "op": "log",
      "stack_out": []
    },
    "151": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "152": {
      "op": "b main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15"
    },
    "155": {
      "block": "main_test_for_of_loop_native_immutable_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "157": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "NoOp"
      ]
    },
    "158": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "159": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "160": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "162": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0"
      ]
    },
    "163": {
      "op": "!=",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "164": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "165": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_uint64[]%0#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0"
      ]
    },
    "168": {
      "callsub": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_native_immutable_array",
      "op": "callsub test_for_of_loop_native_immutable_array",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "171": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0"
      ]
    },
    "172": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "173": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "174": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "175": {
      "op": "log",
      "stack_out": []
    },
    "176": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "177": {
      "op": "b main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15"
    },
    "180": {
      "block": "main_test_for_of_loop_arc4_static_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "182": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "NoOp"
      ]
    },
    "183": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "184": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "185": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "187": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "188": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "189": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "190": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[40]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[40]%0#0"
      ]
    },
    "193": {
      "callsub": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_arc4_static_array",
      "op": "callsub test_for_of_loop_arc4_static_array",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "196": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "197": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "198": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "199": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "200": {
      "op": "log",
      "stack_out": []
    },
    "201": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "202": {
      "op": "b main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15"
    },
    "205": {
      "block": "main_test_for_of_loop_arc4_dynamic_array_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "207": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "208": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "209": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "210": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "212": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "213": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "214": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "215": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "218": {
      "callsub": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_arc4_dynamic_array",
      "op": "callsub test_for_of_loop_arc4_dynamic_array",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "221": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "222": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "223": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "224": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "225": {
      "op": "log",
      "stack_out": []
    },
    "226": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "227": {
      "op": "b main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15"
    },
    "230": {
      "block": "main_test_for_of_loop_tuple_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "232": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "233": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "234": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "235": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "237": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "238": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "239": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "240": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[24]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%0#0"
      ]
    },
    "243": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)"
      ]
    },
    "244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)",
        "0"
      ]
    },
    "245": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "246": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "reinterpret_bytes[24]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%0#0",
        "item0%0#0"
      ]
    },
    "247": {
      "op": "btoi",
      "defined_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[24]%0#0",
        "item0%0%0#0"
      ]
    },
    "248": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0"
      ]
    },
    "249": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)"
      ]
    },
    "250": {
      "op": "intc_1 // 8",
      "stack_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)",
        "8"
      ]
    },
    "251": {
      "op": "dup",
      "stack_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "reinterpret_bytes[24]%0#0 (copy)",
        "8",
        "8"
      ]
    },
    "252": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0%0#0",
        "item1%0#0",
        "reinterpret_bytes[24]%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "item1%0#0"
      ]
    },
    "253": {
      "op": "btoi",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[24]%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "item1%0%0#0"
      ]
    },
    "254": {
      "op": "swap",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[24]%0#0"
      ]
    },
    "255": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[24]%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "16"
      ]
    },
    "257": {
      "op": "intc_1 // 8",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[24]%0#0",
        "16",
        "8"
      ]
    },
    "258": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0#0"
      ]
    },
    "259": {
      "op": "btoi",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ]
    },
    "260": {
      "op": "uncover 2",
      "stack_out": [
        "item1%0%0#0",
        "item2%0%0#0",
        "item0%0%0#0"
      ]
    },
    "262": {
      "op": "uncover 2",
      "stack_out": [
        "item2%0%0#0",
        "item0%0%0#0",
        "item1%0%0#0"
      ]
    },
    "264": {
      "op": "uncover 2",
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "item2%0%0#0"
      ]
    },
    "266": {
      "callsub": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_tuple",
      "op": "callsub test_for_of_loop_tuple",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "269": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "270": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "271": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "272": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "273": {
      "op": "log",
      "stack_out": []
    },
    "274": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "275": {
      "op": "b main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15"
    },
    "278": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0"
      ]
    },
    "281": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%29#0"
      ]
    },
    "282": {
      "op": "match main___algots__.defaultCreate@11",
      "stack_out": []
    },
    "286": {
      "block": "main_switch_case_next@13",
      "stack_in": [],
      "op": "b main_after_if_else@14"
    },
    "289": {
      "block": "main___algots__.defaultCreate@11",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "291": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "0"
      ]
    },
    "292": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "293": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "294": {
      "callsub": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "297": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "298": {
      "op": "b main_after_inlined_tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__puya_arc4_router__@15"
    },
    "301": {
      "subroutine": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_tuple",
      "params": {
        "items.0#0": "uint64",
        "items.1#0": "uint64",
        "items.2#0": "uint64"
      },
      "block": "test_for_of_loop_tuple",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "304": {
      "op": "intc_0 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0"
      ]
    },
    "305": {
      "op": "dup",
      "defined_out": [
        "loop_counter%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "306": {
      "op": "frame_dig -3",
      "defined_out": [
        "item#0",
        "loop_counter%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0"
      ]
    },
    "308": {
      "block": "test_for_of_loop_tuple_for_body@1",
      "stack_in": [
        "total#0",
        "loop_counter%0#0",
        "item#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0",
        "total#0"
      ]
    },
    "310": {
      "op": "swap",
      "defined_out": [
        "item#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "total#0",
        "item#0"
      ]
    },
    "311": {
      "op": "dup",
      "defined_out": [
        "item#0 (copy)",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "total#0",
        "item#0 (copy)",
        "item#0 (copy)"
      ]
    },
    "312": {
      "op": "cover 2",
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0",
        "total#0",
        "item#0 (copy)"
      ]
    },
    "314": {
      "op": "+",
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0",
        "total#0"
      ]
    },
    "315": {
      "op": "frame_bury 0",
      "defined_out": [
        "item#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0"
      ]
    },
    "317": {
      "op": "intc_3 // 42",
      "defined_out": [
        "42",
        "item#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0",
        "42"
      ]
    },
    "318": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "tmp%0#0"
      ]
    },
    "319": {
      "op": "bz test_for_of_loop_tuple_after_if_else@3",
      "stack_out": [
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "322": {
      "block": "test_for_of_loop_tuple_block@8",
      "stack_in": [
        "total#0",
        "loop_counter%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "total#0"
      ]
    },
    "323": {
      "block": "test_for_of_loop_tuple_for_footer@4",
      "stack_in": [
        "total#0",
        "loop_counter%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "325": {
      "op": "switch test_for_of_loop_tuple_for_header_1@5 test_for_of_loop_tuple_for_header_2@6",
      "stack_out": [
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "331": {
      "block": "test_for_of_loop_tuple_after_for@7",
      "stack_in": [
        "total#0",
        "loop_counter%0#0"
      ],
      "op": "b test_for_of_loop_tuple_block@8"
    },
    "334": {
      "block": "test_for_of_loop_tuple_for_header_2@6",
      "stack_in": [
        "total#0",
        "loop_counter%0#0"
      ],
      "op": "pushint 2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "336": {
      "op": "frame_bury 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "338": {
      "op": "frame_dig -1",
      "defined_out": [
        "item#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0"
      ]
    },
    "340": {
      "op": "b test_for_of_loop_tuple_for_body@1"
    },
    "343": {
      "block": "test_for_of_loop_tuple_for_header_1@5",
      "stack_in": [
        "total#0",
        "loop_counter%0#0"
      ],
      "op": "intc_2 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "344": {
      "op": "frame_bury 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "346": {
      "op": "frame_dig -2",
      "defined_out": [
        "item#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "total#0",
        "loop_counter%0#0",
        "item#0"
      ]
    },
    "348": {
      "op": "b test_for_of_loop_tuple_for_body@1"
    },
    "351": {
      "subroutine": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_arc4_dynamic_array",
      "params": {
        "items#0": "bytes"
      },
      "block": "test_for_of_loop_arc4_dynamic_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "354": {
      "op": "intc_0 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0"
      ]
    },
    "355": {
      "op": "frame_dig -1",
      "defined_out": [
        "items#0 (copy)",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "items#0 (copy)"
      ]
    },
    "357": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "items#0 (copy)",
        "0"
      ]
    },
    "358": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0"
      ]
    },
    "359": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "360": {
      "block": "test_for_of_loop_arc4_dynamic_array_for_header@1",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "362": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "364": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "365": {
      "op": "bz test_for_of_loop_arc4_dynamic_array_after_for@6",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "368": {
      "block": "test_for_of_loop_arc4_dynamic_array_for_body@2",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "items#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "items#0 (copy)"
      ]
    },
    "370": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "373": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "375": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "376": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "377": {
      "op": "intc_1 // 8",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "378": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "379": {
      "op": "dup",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)"
      ]
    },
    "380": {
      "op": "btoi",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "tmp%0#0"
      ]
    },
    "381": {
      "op": "frame_dig 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "383": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "384": {
      "op": "frame_bury 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "386": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "387": {
      "op": "intc_3 // 42",
      "defined_out": [
        "42",
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "42"
      ]
    },
    "388": {
      "op": "==",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%2#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "389": {
      "op": "bz test_for_of_loop_arc4_dynamic_array_after_if_else@4",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "392": {
      "block": "test_for_of_loop_arc4_dynamic_array_block@7",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "393": {
      "block": "test_for_of_loop_arc4_dynamic_array_for_footer@5",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "395": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "396": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "397": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "399": {
      "op": "b test_for_of_loop_arc4_dynamic_array_for_header@1"
    },
    "402": {
      "block": "test_for_of_loop_arc4_dynamic_array_after_for@6",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "b test_for_of_loop_arc4_dynamic_array_block@7"
    },
    "405": {
      "subroutine": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_arc4_static_array",
      "params": {
        "items#0": "bytes"
      },
      "block": "test_for_of_loop_arc4_static_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "408": {
      "op": "intc_0 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0"
      ]
    },
    "409": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "410": {
      "block": "test_for_of_loop_arc4_static_array_for_header@1",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "412": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "5"
      ]
    },
    "414": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "415": {
      "op": "bz test_for_of_loop_arc4_static_array_after_for@6",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "418": {
      "block": "test_for_of_loop_arc4_static_array_for_body@2",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "420": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "422": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "423": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "424": {
      "op": "intc_1 // 8",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "425": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "426": {
      "op": "dup",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)"
      ]
    },
    "427": {
      "op": "btoi",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "tmp%0#0"
      ]
    },
    "428": {
      "op": "frame_dig 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "430": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "431": {
      "op": "frame_bury 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "433": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "434": {
      "op": "intc_3 // 42",
      "defined_out": [
        "42",
        "item_index_internal%0#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "42"
      ]
    },
    "435": {
      "op": "==",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%2#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "436": {
      "op": "bz test_for_of_loop_arc4_static_array_after_if_else@4",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "439": {
      "block": "test_for_of_loop_arc4_static_array_block@7",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "440": {
      "block": "test_for_of_loop_arc4_static_array_for_footer@5",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "442": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "443": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "444": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "446": {
      "op": "b test_for_of_loop_arc4_static_array_for_header@1"
    },
    "449": {
      "block": "test_for_of_loop_arc4_static_array_after_for@6",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "b test_for_of_loop_arc4_static_array_block@7"
    },
    "452": {
      "subroutine": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_native_immutable_array",
      "params": {
        "items#0": "bytes"
      },
      "block": "test_for_of_loop_native_immutable_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "455": {
      "op": "intc_0 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0"
      ]
    },
    "456": {
      "op": "frame_dig -1",
      "defined_out": [
        "items#0 (copy)",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "items#0 (copy)"
      ]
    },
    "458": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "items#0 (copy)",
        "0"
      ]
    },
    "459": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0"
      ]
    },
    "460": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "461": {
      "block": "test_for_of_loop_native_immutable_array_for_header@1",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "463": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "465": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "466": {
      "op": "bz test_for_of_loop_native_immutable_array_after_for@6",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "469": {
      "block": "test_for_of_loop_native_immutable_array_for_body@2",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "items#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "items#0 (copy)"
      ]
    },
    "471": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "474": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "476": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "477": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "478": {
      "op": "intc_1 // 8",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "479": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%0#0",
        "value_at_index%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "value_at_index%0#0"
      ]
    },
    "480": {
      "op": "btoi",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "481": {
      "op": "frame_dig 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "483": {
      "op": "dig 1",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0",
        "item#0 (copy)"
      ]
    },
    "485": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "486": {
      "op": "frame_bury 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "488": {
      "op": "intc_3 // 42",
      "defined_out": [
        "42",
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "42"
      ]
    },
    "489": {
      "op": "==",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "490": {
      "op": "bz test_for_of_loop_native_immutable_array_after_if_else@4",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "493": {
      "block": "test_for_of_loop_native_immutable_array_block@7",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "494": {
      "block": "test_for_of_loop_native_immutable_array_for_footer@5",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "496": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "497": {
      "op": "+",
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "498": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "500": {
      "op": "b test_for_of_loop_native_immutable_array_for_header@1"
    },
    "503": {
      "block": "test_for_of_loop_native_immutable_array_after_for@6",
      "stack_in": [
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "b test_for_of_loop_native_immutable_array_block@7"
    },
    "506": {
      "subroutine": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_native_mutable_array",
      "params": {
        "items.0#0": "uint64",
        "items.1#0": "uint64",
        "items.2#0": "uint64"
      },
      "block": "test_for_of_loop_native_mutable_array",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "509": {
      "op": "frame_dig -3",
      "defined_out": [
        "items.0#0 (copy)"
      ],
      "stack_out": [
        "items.0#0 (copy)"
      ]
    },
    "511": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "array%sub_item%0#1"
      ]
    },
    "512": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "array%sub_item%0#1",
        "0x"
      ]
    },
    "513": {
      "op": "swap",
      "stack_out": [
        "0x",
        "array%sub_item%0#1"
      ]
    },
    "514": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1"
      ],
      "stack_out": [
        "array%encoded%0#1"
      ]
    },
    "515": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "array%encoded%0#1",
        "0x"
      ]
    },
    "516": {
      "op": "swap",
      "stack_out": [
        "0x",
        "array%encoded%0#1"
      ]
    },
    "517": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1"
      ],
      "stack_out": [
        "array%data%0#1"
      ]
    },
    "518": {
      "op": "frame_dig -2",
      "defined_out": [
        "array%data%0#1",
        "items.1#0 (copy)"
      ],
      "stack_out": [
        "array%data%0#1",
        "items.1#0 (copy)"
      ]
    },
    "520": {
      "op": "itob",
      "defined_out": [
        "array%data%0#1",
        "array%sub_item%1#1"
      ],
      "stack_out": [
        "array%data%0#1",
        "array%sub_item%1#1"
      ]
    },
    "521": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "array%data%0#1",
        "array%sub_item%1#1",
        "0x"
      ]
    },
    "522": {
      "op": "swap",
      "stack_out": [
        "array%data%0#1",
        "0x",
        "array%sub_item%1#1"
      ]
    },
    "523": {
      "op": "concat",
      "defined_out": [
        "array%data%0#1",
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%data%0#1",
        "array%encoded%1#1"
      ]
    },
    "524": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1"
      ],
      "stack_out": [
        "array%data%1#1"
      ]
    },
    "525": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%data%1#1",
        "items.2#0 (copy)"
      ],
      "stack_out": [
        "array%data%1#1",
        "items.2#0 (copy)"
      ]
    },
    "527": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%sub_item%2#1"
      ],
      "stack_out": [
        "array%data%1#1",
        "array%sub_item%2#1"
      ]
    },
    "528": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "array%data%1#1",
        "array%sub_item%2#1",
        "0x"
      ]
    },
    "529": {
      "op": "swap",
      "stack_out": [
        "array%data%1#1",
        "0x",
        "array%sub_item%2#1"
      ]
    },
    "530": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%2#1"
      ],
      "stack_out": [
        "array%data%1#1",
        "array%encoded%2#1"
      ]
    },
    "531": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "532": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0"
      ]
    },
    "535": {
      "op": "dup",
      "defined_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ],
      "stack_out": [
        "encoded%0#0",
        "slot%0#0",
        "slot%0#0 (copy)"
      ]
    },
    "536": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0#0",
        "slot%0#0 (copy)",
        "encoded%0#0"
      ]
    },
    "538": {
      "op": "stores",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0"
      ]
    },
    "539": {
      "op": "dup",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0"
      ]
    },
    "540": {
      "op": "intc_0 // 0",
      "defined_out": [
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "mutable#0",
        "total#0"
      ]
    },
    "541": {
      "op": "swap",
      "defined_out": [
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "mutable#0"
      ]
    },
    "542": {
      "op": "loads",
      "defined_out": [
        "mutable#0",
        "slot_contents%0#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "slot_contents%0#0"
      ]
    },
    "543": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array%bytes_len%0#1"
      ]
    },
    "544": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "545": {
      "op": "/",
      "defined_out": [
        "array_length%0#0",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0"
      ]
    },
    "546": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "547": {
      "block": "test_for_of_loop_native_mutable_array_for_header@1",
      "stack_in": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "549": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "551": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "552": {
      "op": "bz test_for_of_loop_native_mutable_array_after_for@6",
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "555": {
      "block": "test_for_of_loop_native_mutable_array_for_body@2",
      "stack_in": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "mutable#0"
      ]
    },
    "557": {
      "op": "loads",
      "defined_out": [
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ]
    },
    "558": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "560": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "item_index_internal%0#0",
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "561": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%0#1",
        "item_index_internal%0#0",
        "mutable#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "array%bytes_index%0#1"
      ]
    },
    "562": {
      "op": "intc_1 // 8",
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "array%bytes_index%0#1",
        "8"
      ]
    },
    "563": {
      "op": "extract3",
      "defined_out": [
        "array%value%0#1",
        "item_index_internal%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%value%0#1"
      ]
    },
    "564": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array%value%0#1",
        "item_index_internal%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%value%0#1",
        "0"
      ]
    },
    "565": {
      "op": "intc_1 // 8",
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%value%0#1",
        "0",
        "8"
      ]
    },
    "566": {
      "op": "extract3",
      "defined_out": [
        "array%sub_item%3#1",
        "item_index_internal%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array%sub_item%3#1"
      ]
    },
    "567": {
      "op": "btoi",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "mutable#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "568": {
      "op": "frame_dig 1",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "570": {
      "op": "dig 1",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0",
        "item#0 (copy)"
      ]
    },
    "572": {
      "op": "+",
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "573": {
      "op": "frame_bury 1",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "575": {
      "op": "intc_3 // 42",
      "defined_out": [
        "42",
        "item#0",
        "item_index_internal%0#0",
        "mutable#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item#0",
        "42"
      ]
    },
    "576": {
      "op": "==",
      "defined_out": [
        "item_index_internal%0#0",
        "mutable#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "577": {
      "op": "bz test_for_of_loop_native_mutable_array_after_if_else@4",
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "580": {
      "block": "test_for_of_loop_native_mutable_array_block@7",
      "stack_in": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "582": {
      "op": "frame_bury 0"
    },
    "584": {
      "retsub": true,
      "op": "retsub"
    },
    "585": {
      "block": "test_for_of_loop_native_mutable_array_for_footer@5",
      "stack_in": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "587": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "588": {
      "op": "+",
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "589": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "591": {
      "op": "b test_for_of_loop_native_mutable_array_for_header@1"
    },
    "594": {
      "block": "test_for_of_loop_native_mutable_array_after_for@6",
      "stack_in": [
        "mutable#0",
        "total#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "b test_for_of_loop_native_mutable_array_block@7"
    },
    "597": {
      "subroutine": "tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "598": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "600": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "601": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "603": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "606": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "608": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "609": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "610": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "611": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "613": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
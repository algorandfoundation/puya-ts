#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock 0x2a337771
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/circular-reference-2.algo.ts:6
    // export class ContractTwo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@5
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/circular-reference-2.algo.ts:6
    // export class ContractTwo extends Contract {
    txna ApplicationArgs 0
    bytec_0 // method "test(uint64)void"
    uncover 1
    match main_test_route@3
    b main_switch_case_next@4

main_switch_case_next@4:
    b main_after_if_else@6

main_after_if_else@6:
    // tests/approvals/circular-reference-2.algo.ts:6
    // export class ContractTwo extends Contract {
    err

main_test_route@3:
    // tests/approvals/circular-reference-2.algo.ts:7
    // test(appId: Application) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub test
    b main_switch_case_next@4

main___algots__.defaultCreate@5:
    // tests/approvals/circular-reference-2.algo.ts:6
    // export class ContractTwo extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    return


// tests/approvals/circular-reference-2.algo.ts::ContractTwo.test[routing]() -> void:
test:
    b test_block@0

test_block@0:
    // tests/approvals/circular-reference-2.algo.ts:7
    // test(appId: Application) {
    txna ApplicationArgs 1
    btoi
    callsub tests/approvals/circular-reference-2.algo.ts::ContractTwo.test
    intc_1 // 1
    return


// tests/approvals/circular-reference-2.algo.ts::ContractTwo.test(appId: uint64) -> void:
tests/approvals/circular-reference-2.algo.ts::ContractTwo.test:
    // tests/approvals/circular-reference-2.algo.ts:7
    // test(appId: Application) {
    proto 1 0
    b tests/approvals/circular-reference-2.algo.ts::ContractTwo.test_block@0

tests/approvals/circular-reference-2.algo.ts::ContractTwo.test_block@0:
    // tests/approvals/circular-reference-2.algo.ts:8
    // abiCall<typeof ContractOne.prototype.test>({ appId })
    itxn_begin
    frame_dig -1
    bytec_0 // method "test(uint64)void"
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    pushint 6 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    b tests/approvals/circular-reference-2.algo.ts::ContractTwo.test_next_txn@1

tests/approvals/circular-reference-2.algo.ts::ContractTwo.test_next_txn@1:
    // tests/approvals/circular-reference-2.algo.ts:8
    // abiCall<typeof ContractOne.prototype.test>({ appId })
    itxn_submit
    retsub


// tests/approvals/circular-reference-2.algo.ts::ContractTwo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

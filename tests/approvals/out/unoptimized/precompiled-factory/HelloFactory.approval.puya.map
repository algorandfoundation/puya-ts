{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/precompiled-factory.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;AA8FE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AA/BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AA/BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AA/BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AADF;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAIqB;AAEgD;;AAAX;AAAA;AAAA;;;AAAW;;AAAX;AAGlC;;;AAPH;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAIH;;;;;;;;;;AAFG;;;AAAA;;;AAAA;AAOL;;AAPN;AASM;AAEoD;AAAX;AAAA;AAAA;;;AAAW;AAAX;AAC1C;;;AADG;;;;;;AAFF;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAA;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;;;AAEG;;;;;;;;;;;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;;AAHd;;;AAAA;;;AAAA;;AAYiB;AAKG;;;AAPH;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAIH;;;;AAFG;;;AAAA;;;AAAA;AAOL;;AAPN;AASM;AAEoD;AAAX;AAAA;AAAA;;;AAAW;AAAX;AAC1C;;;AADG;;;;;;AAFF;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAA;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;;;AAEG;;;;;;;;;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;;AAHd;;;AAAA;;;AAAA;;AAYiB;AAKG;;;AAPH;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAIH;;;;AAFG;;;AAAA;;;AAAA;AAOL;;AAPN;AASM;AAEoD;AAAX;AAAA;AAAA;;;AAAW;AAAX;AAC1C;;;AADG;;;;;;AAFF;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAA;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;;;AAEG;;;;;;;;;;;;;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;;AAHd;;;AAAA;;;AAAA;;AAYiB;AAFA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAEA;;;AAAA;;;AAAA;AAOL;;AAPN;AASM;;;AAEE;;;;;;;;AAFF;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAA;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;AAEG;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;;AAHd;;;AAAA;;;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 5"
    },
    "7": {
      "op": "bytecblock 0x \"world\" base64(CoEBQw==) 0x151f7c75 0x24378d3c 0xd0a28200 \"hello\" 0x4c5c61ba"
    },
    "47": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "49": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "50": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "51": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "54": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "57": {
      "op": "pushbytes 0x2a17995c // method \"test_compile_contract()void\"",
      "defined_out": [
        "Method(test_compile_contract()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_compile_contract()void)"
      ]
    },
    "63": {
      "op": "pushbytes 0xe3254bc9 // method \"test_compile_contract_with_template()void\"",
      "defined_out": [
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_with_template()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_with_template()void)"
      ]
    },
    "69": {
      "op": "pushbytes 0xe2b7c692 // method \"test_compile_contract_with_template_and_custom_prefix()void\"",
      "defined_out": [
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_with_template()void)",
        "Method(test_compile_contract_with_template_and_custom_prefix()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_with_template()void)",
        "Method(test_compile_contract_with_template_and_custom_prefix()void)"
      ]
    },
    "75": {
      "op": "pushbytes 0x02947ca2 // method \"test_compile_contract_large()void\"",
      "defined_out": [
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_large()void)",
        "Method(test_compile_contract_with_template()void)",
        "Method(test_compile_contract_with_template_and_custom_prefix()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_with_template()void)",
        "Method(test_compile_contract_with_template_and_custom_prefix()void)",
        "Method(test_compile_contract_large()void)"
      ]
    },
    "81": {
      "op": "uncover 4",
      "stack_out": [
        "Method(test_compile_contract()void)",
        "Method(test_compile_contract_with_template()void)",
        "Method(test_compile_contract_with_template_and_custom_prefix()void)",
        "Method(test_compile_contract_large()void)",
        "tmp%2#0"
      ]
    },
    "83": {
      "op": "match main_test_compile_contract_route@3 main_test_compile_contract_with_template_route@4 main_test_compile_contract_with_template_and_custom_prefix_route@5 main_test_compile_contract_large_route@6",
      "stack_out": []
    },
    "93": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "94": {
      "block": "main_after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "95": {
      "block": "main_test_compile_contract_large_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "97": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "NoOp"
      ]
    },
    "98": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "99": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "102": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "103": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "104": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "105": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large",
      "op": "callsub test_compile_contract_large"
    },
    "108": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "109": {
      "op": "b main_after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__@14"
    },
    "112": {
      "block": "main_test_compile_contract_with_template_and_custom_prefix_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "114": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "NoOp"
      ]
    },
    "115": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "116": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "117": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "119": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "120": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "121": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "122": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix",
      "op": "callsub test_compile_contract_with_template_and_custom_prefix"
    },
    "125": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "126": {
      "op": "b main_after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__@14"
    },
    "129": {
      "block": "main_test_compile_contract_with_template_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "131": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "132": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "133": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "134": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "136": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "137": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "138": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "139": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template",
      "op": "callsub test_compile_contract_with_template"
    },
    "142": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "143": {
      "op": "b main_after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__@14"
    },
    "146": {
      "block": "main_test_compile_contract_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "148": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "149": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "150": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "151": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "154": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "155": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "156": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract",
      "op": "callsub test_compile_contract"
    },
    "159": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "160": {
      "op": "b main_after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__@14"
    },
    "163": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "165": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "166": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%19#0"
      ]
    },
    "167": {
      "op": "match main___algots__.defaultCreate@10",
      "stack_out": []
    },
    "171": {
      "block": "main_switch_case_next@12",
      "stack_in": [],
      "op": "b main_after_if_else@13"
    },
    "174": {
      "block": "main___algots__.defaultCreate@10",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0"
      ]
    },
    "177": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "178": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "179": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "182": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "183": {
      "op": "b main_after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__@14"
    },
    "186": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract",
      "params": {},
      "block": "test_compile_contract",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "187": {
      "op": "bytec 6 // \"hello\"",
      "defined_out": [
        "\"hello\""
      ],
      "stack_out": [
        "\"hello\""
      ]
    },
    "189": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "190": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "191": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "194": {
      "op": "bytec 6 // \"hello\"",
      "stack_out": [
        "length_uint16%0#0",
        "\"hello\""
      ]
    },
    "196": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "197": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "1"
      ]
    },
    "198": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "200": {
      "op": "bytec_2 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "CoEBQw=="
      ]
    },
    "201": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "203": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        ""
      ]
    },
    "204": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "206": {
      "op": "pushbytes base64(CiACAAEmAghncmVldGluZwAxGEAAA4gAsjEbIhNBAIw2GgCABACSJa6ABCQ3jTyABKDoGHKABNCiggBPBI4EAE4APAAqAAIiQzEZIhJEMRgiE0Q2GgFXAgCIAF1JFRZXBgJMUIAEFR98dUxQsCNC/9cxGYEEEkQxGCITRIgAOSNC/8UxGYEFEkQxGCITRIgAJiNC/7MxGSISRDEYIhJENhoBVwIAiAAHI0L/nEL/mIoBACiL/2eJiYmKAQEiKGVEKUxQgAEgUIv/UIkoKWeJ)",
      "defined_out": [
        "CiACAAEmAghncmVldGluZwAxGEAAA4gAsjEbIhNBAIw2GgCABACSJa6ABCQ3jTyABKDoGHKABNCiggBPBI4EAE4APAAqAAIiQzEZIhJEMRgiE0Q2GgFXAgCIAF1JFRZXBgJMUIAEFR98dUxQsCNC/9cxGYEEEkQxGCITRIgAOSNC/8UxGYEFEkQxGCITRIgAJiNC/7MxGSISRDEYIhJENhoBVwIAiAAHI0L/nEL/mIoBACiL/2eJiYmKAQEiKGVEKUxQgAEgUIv/UIkoKWeJ",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "CiACAAEmAghncmVldGluZwAxGEAAA4gAsjEbIhNBAIw2GgCABACSJa6ABCQ3jTyABKDoGHKABNCiggBPBI4EAE4APAAqAAIiQzEZIhJEMRgiE0Q2GgFXAgCIAF1JFRZXBgJMUIAEFR98dUxQsCNC/9cxGYEEEkQxGCITRIgAOSNC/8UxGYEFEkQxGCITRIgAJiNC/7MxGSISRDEYIhJENhoBVwIAiAAHI0L/nEL/mIoBACiL/2eJiYmKAQEiKGVEKUxQgAEgUIv/UIkoKWeJ"
      ]
    },
    "416": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "418": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        ""
      ]
    },
    "419": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "421": {
      "op": "pushbytes 0x009225ae // method \"helloCreate(string)void\"",
      "defined_out": [
        "Method(helloCreate(string)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(helloCreate(string)void)"
      ]
    },
    "427": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "429": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "431": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "432": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "434": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "435": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "437": {
      "block": "test_compile_contract_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "438": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0"
      ]
    },
    "440": {
      "op": "dup",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0"
      ]
    },
    "441": {
      "op": "itxn_begin"
    },
    "442": {
      "op": "bytec_1 // \"world\"",
      "defined_out": [
        "\"world\"",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "\"world\""
      ]
    },
    "443": {
      "op": "len",
      "defined_out": [
        "helloApp#0",
        "length%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length%1#0"
      ]
    },
    "444": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "as_bytes%1#0"
      ]
    },
    "445": {
      "op": "extract 6 2",
      "defined_out": [
        "helloApp#0",
        "length_uint16%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length_uint16%1#0"
      ]
    },
    "448": {
      "op": "bytec_1 // \"world\"",
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length_uint16%1#0",
        "\"world\""
      ]
    },
    "449": {
      "op": "concat",
      "defined_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "450": {
      "op": "swap",
      "defined_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "451": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "453": {
      "op": "bytec 5 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(greet(string)string)"
      ]
    },
    "455": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "457": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "459": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "6"
      ]
    },
    "460": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "helloApp#0",
        "0"
      ]
    },
    "463": {
      "op": "itxn_field Fee",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "465": {
      "block": "test_compile_contract_next_txn@2",
      "stack_in": [
        "helloApp#0"
      ],
      "op": "itxn_submit"
    },
    "466": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0"
      ]
    },
    "468": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "469": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%0#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%0#0"
      ]
    },
    "472": {
      "op": "swap",
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "txn.LastLog#0"
      ]
    },
    "473": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "476": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "477": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "478": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "helloApp#0",
        "tmp%0#0"
      ]
    },
    "479": {
      "op": "extract 2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0"
      ]
    },
    "482": {
      "op": "pushbytes \"hello world\"",
      "defined_out": [
        "\"hello world\"",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0",
        "\"hello world\""
      ]
    },
    "495": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%3#0"
      ]
    },
    "496": {
      "op": "assert",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "497": {
      "op": "itxn_begin",
      "defined_out": [
        "helloApp#0"
      ]
    },
    "498": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "5"
      ]
    },
    "499": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "501": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(delete()void)"
      ]
    },
    "503": {
      "op": "itxn_field ApplicationArgs",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "505": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "507": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "508": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "510": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "511": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "513": {
      "block": "test_compile_contract_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "514": {
      "retsub": true,
      "op": "retsub"
    },
    "515": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template",
      "params": {},
      "block": "test_compile_contract_with_template",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "516": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "517": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "519": {
      "op": "bytec_2 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "520": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "522": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        ""
      ]
    },
    "523": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "525": {
      "op": "pushbytes base64(CiACAAEmAwhncmVldGluZwADaGV5MRhAAAOIAKUxGyITQQCGNhoAgARMXGG6gAQkN408gASg6BhygATQooIATwSOBABOADwAKgACIkMxGSISRDEYIhNENhoBVwIAiABQSRUWVwYCTFCABBUffHVMULAjQv/XMRmBBBJEMRgiE0SIACwjQv/FMRmBBRJEMRgiE0SIABkjQv+zMRkiEkQxGCISRIgAByNC/6JC/56JiYmKAQEiKGVEKUxQgAEgUIv/UImIAAQoKmeJKClniQ==)",
      "defined_out": [
        "CiACAAEmAwhncmVldGluZwADaGV5MRhAAAOIAKUxGyITQQCGNhoAgARMXGG6gAQkN408gASg6BhygATQooIATwSOBABOADwAKgACIkMxGSISRDEYIhNENhoBVwIAiABQSRUWVwYCTFCABBUffHVMULAjQv/XMRmBBBJEMRgiE0SIACwjQv/FMRmBBRJEMRgiE0SIABkjQv+zMRkiEkQxGCISRIgAByNC/6JC/56JiYmKAQEiKGVEKUxQgAEgUIv/UImIAAQoKmeJKClniQ=="
      ],
      "stack_out": [
        "CiACAAEmAwhncmVldGluZwADaGV5MRhAAAOIAKUxGyITQQCGNhoAgARMXGG6gAQkN408gASg6BhygATQooIATwSOBABOADwAKgACIkMxGSISRDEYIhNENhoBVwIAiABQSRUWVwYCTFCABBUffHVMULAjQv/XMRmBBBJEMRgiE0SIACwjQv/FMRmBBRJEMRgiE0SIABkjQv+zMRkiEkQxGCISRIgAByNC/6JC/56JiYmKAQEiKGVEKUxQgAEgUIv/UImIAAQoKmeJKClniQ=="
      ]
    },
    "733": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "735": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        ""
      ]
    },
    "736": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "738": {
      "op": "bytec 7 // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "740": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "742": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "743": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "745": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "746": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "748": {
      "block": "test_compile_contract_with_template_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "749": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0"
      ]
    },
    "751": {
      "op": "dup",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0"
      ]
    },
    "752": {
      "op": "itxn_begin"
    },
    "753": {
      "op": "bytec_1 // \"world\"",
      "defined_out": [
        "\"world\"",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "\"world\""
      ]
    },
    "754": {
      "op": "len",
      "defined_out": [
        "helloApp#0",
        "length%0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length%0#0"
      ]
    },
    "755": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "as_bytes%0#0"
      ]
    },
    "756": {
      "op": "extract 6 2",
      "defined_out": [
        "helloApp#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length_uint16%0#0"
      ]
    },
    "759": {
      "op": "bytec_1 // \"world\"",
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length_uint16%0#0",
        "\"world\""
      ]
    },
    "760": {
      "op": "concat",
      "defined_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "761": {
      "op": "swap",
      "defined_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "762": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "764": {
      "op": "bytec 5 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(greet(string)string)"
      ]
    },
    "766": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "768": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "770": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "6"
      ]
    },
    "771": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "773": {
      "op": "intc_0 // 0",
      "stack_out": [
        "helloApp#0",
        "0"
      ]
    },
    "774": {
      "op": "itxn_field Fee",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "776": {
      "block": "test_compile_contract_with_template_next_txn@2",
      "stack_in": [
        "helloApp#0"
      ],
      "op": "itxn_submit"
    },
    "777": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0"
      ]
    },
    "779": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "780": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%0#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%0#0"
      ]
    },
    "783": {
      "op": "swap",
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "txn.LastLog#0"
      ]
    },
    "784": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "787": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "788": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "789": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "helloApp#0",
        "tmp%0#0"
      ]
    },
    "790": {
      "op": "extract 2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0"
      ]
    },
    "793": {
      "op": "pushbytes \"hey world\"",
      "defined_out": [
        "\"hey world\"",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0",
        "\"hey world\""
      ]
    },
    "804": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%3#0"
      ]
    },
    "805": {
      "op": "assert",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "806": {
      "op": "itxn_begin",
      "defined_out": [
        "helloApp#0"
      ]
    },
    "807": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "5"
      ]
    },
    "808": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "810": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(delete()void)"
      ]
    },
    "812": {
      "op": "itxn_field ApplicationArgs",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "814": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "816": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "817": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "819": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "820": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "822": {
      "block": "test_compile_contract_with_template_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "823": {
      "retsub": true,
      "op": "retsub"
    },
    "824": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix",
      "params": {},
      "block": "test_compile_contract_with_template_and_custom_prefix",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "825": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "826": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "828": {
      "op": "bytec_2 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "829": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "831": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        ""
      ]
    },
    "832": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "834": {
      "op": "pushbytes base64(CiACAAEmAwhncmVldGluZwAHYm9uam91cjEYQAADiAClMRsiE0EAhjYaAIAETFxhuoAEJDeNPIAEoOgYcoAE0KKCAE8EjgQATgA8ACoAAiJDMRkiEkQxGCITRDYaAVcCAIgAUEkVFlcGAkxQgAQVH3x1TFCwI0L/1zEZgQQSRDEYIhNEiAAsI0L/xTEZgQUSRDEYIhNEiAAZI0L/szEZIhJEMRgiEkSIAAcjQv+iQv+eiYmJigEBIihlRClMUIABIFCL/1CJiAAEKCpniSgpZ4k=)",
      "defined_out": [
        "CiACAAEmAwhncmVldGluZwAHYm9uam91cjEYQAADiAClMRsiE0EAhjYaAIAETFxhuoAEJDeNPIAEoOgYcoAE0KKCAE8EjgQATgA8ACoAAiJDMRkiEkQxGCITRDYaAVcCAIgAUEkVFlcGAkxQgAQVH3x1TFCwI0L/1zEZgQQSRDEYIhNEiAAsI0L/xTEZgQUSRDEYIhNEiAAZI0L/szEZIhJEMRgiEkSIAAcjQv+iQv+eiYmJigEBIihlRClMUIABIFCL/1CJiAAEKCpniSgpZ4k="
      ],
      "stack_out": [
        "CiACAAEmAwhncmVldGluZwAHYm9uam91cjEYQAADiAClMRsiE0EAhjYaAIAETFxhuoAEJDeNPIAEoOgYcoAE0KKCAE8EjgQATgA8ACoAAiJDMRkiEkQxGCITRDYaAVcCAIgAUEkVFlcGAkxQgAQVH3x1TFCwI0L/1zEZgQQSRDEYIhNEiAAsI0L/xTEZgQUSRDEYIhNEiAAZI0L/szEZIhJEMRgiEkSIAAcjQv+iQv+eiYmJigEBIihlRClMUIABIFCL/1CJiAAEKCpniSgpZ4k="
      ]
    },
    "1046": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "1048": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        ""
      ]
    },
    "1049": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "1051": {
      "op": "bytec 7 // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "1053": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1055": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "1056": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1058": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1059": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1061": {
      "block": "test_compile_contract_with_template_and_custom_prefix_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1062": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0"
      ]
    },
    "1064": {
      "op": "dup",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0"
      ]
    },
    "1065": {
      "op": "itxn_begin"
    },
    "1066": {
      "op": "bytec_1 // \"world\"",
      "defined_out": [
        "\"world\"",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "\"world\""
      ]
    },
    "1067": {
      "op": "len",
      "defined_out": [
        "helloApp#0",
        "length%0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length%0#0"
      ]
    },
    "1068": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "as_bytes%0#0"
      ]
    },
    "1069": {
      "op": "extract 6 2",
      "defined_out": [
        "helloApp#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length_uint16%0#0"
      ]
    },
    "1072": {
      "op": "bytec_1 // \"world\"",
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "length_uint16%0#0",
        "\"world\""
      ]
    },
    "1073": {
      "op": "concat",
      "defined_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1074": {
      "op": "swap",
      "defined_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1075": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1077": {
      "op": "bytec 5 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(greet(string)string)"
      ]
    },
    "1079": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1081": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "1083": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "6"
      ]
    },
    "1084": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "1086": {
      "op": "intc_0 // 0",
      "stack_out": [
        "helloApp#0",
        "0"
      ]
    },
    "1087": {
      "op": "itxn_field Fee",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "1089": {
      "block": "test_compile_contract_with_template_and_custom_prefix_next_txn@2",
      "stack_in": [
        "helloApp#0"
      ],
      "op": "itxn_submit"
    },
    "1090": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0"
      ]
    },
    "1092": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "1093": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%0#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%0#0"
      ]
    },
    "1096": {
      "op": "swap",
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "txn.LastLog#0"
      ]
    },
    "1097": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1100": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1101": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1102": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "helloApp#0",
        "tmp%0#0"
      ]
    },
    "1103": {
      "op": "extract 2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0"
      ]
    },
    "1106": {
      "op": "pushbytes \"bonjour world\"",
      "defined_out": [
        "\"bonjour world\"",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0",
        "\"bonjour world\""
      ]
    },
    "1121": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%3#0"
      ]
    },
    "1122": {
      "op": "assert",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "1123": {
      "op": "itxn_begin",
      "defined_out": [
        "helloApp#0"
      ]
    },
    "1124": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "5"
      ]
    },
    "1125": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "1127": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(delete()void)"
      ]
    },
    "1129": {
      "op": "itxn_field ApplicationArgs",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1131": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1133": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "1134": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1136": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1137": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1139": {
      "block": "test_compile_contract_with_template_and_custom_prefix_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1140": {
      "retsub": true,
      "op": "retsub"
    },
    "1141": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large",
      "params": {},
      "block": "test_compile_contract_large",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1142": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1143": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "1145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1146": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": []
    },
    "1148": {
      "op": "bytec_2 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "1149": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "1151": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        ""
      ]
    },
    "1152": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "1154": {
      "op": "pushbytes base64(CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ)",
      "defined_out": [
        "CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ"
      ],
      "stack_out": [
        "CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ"
      ]
    },
    "1273": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "1275": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        ""
      ]
    },
    "1276": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "1278": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "1279": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1281": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1282": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1284": {
      "block": "test_compile_contract_large_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1285": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1287": {
      "op": "dup",
      "defined_out": [
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "largeApp#0"
      ]
    },
    "1288": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1289": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1291": {
      "op": "pushbytes 0x02bf30cf // method \"getBigBytesLength()uint64\"",
      "defined_out": [
        "Method(getBigBytesLength()uint64)",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "Method(getBigBytesLength()uint64)"
      ]
    },
    "1297": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1299": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "6"
      ]
    },
    "1300": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1302": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "1303": {
      "op": "itxn_field Fee",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1305": {
      "block": "test_compile_contract_large_next_txn@2",
      "stack_in": [
        "largeApp#0"
      ],
      "op": "itxn_submit"
    },
    "1306": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "largeApp#0",
        "txn.LastLog#0"
      ]
    },
    "1308": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "largeApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "1309": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%0#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "largeApp#0",
        "txn.LastLog#0",
        "tmp%0#0"
      ]
    },
    "1312": {
      "op": "swap",
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "txn.LastLog#0"
      ]
    },
    "1313": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1316": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1317": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1318": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "largeApp#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1319": {
      "op": "btoi",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "largeApp#0",
        "result#0"
      ]
    },
    "1320": {
      "op": "pushint 4096 // 4096",
      "defined_out": [
        "4096",
        "result#0"
      ],
      "stack_out": [
        "largeApp#0",
        "result#0",
        "4096"
      ]
    },
    "1323": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%3#0"
      ]
    },
    "1324": {
      "op": "assert",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1325": {
      "op": "itxn_begin",
      "defined_out": [
        "largeApp#0"
      ]
    },
    "1326": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "5"
      ]
    },
    "1327": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1329": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "Method(delete()void)"
      ]
    },
    "1331": {
      "op": "itxn_field ApplicationArgs",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1333": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1335": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "1336": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1338": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1339": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1341": {
      "block": "test_compile_contract_large_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1342": {
      "retsub": true,
      "op": "retsub"
    },
    "1343": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}
main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        goto block@1
    block@1: // L6
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@9
    block@2: // abi_routing_L6
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "test_compile_contract()void" => block@3, method "test_compile_contract_with_template()void" => block@4, method "test_compile_contract_with_template_and_custom_prefix()void" => block@5, method "test_compile_contract_large()void" => block@6, * => block@7}
    block@3: // test_compile_contract_route_L7
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract()
        let tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#0: bool = 1u
        goto block@14
    block@4: // test_compile_contract_with_template_route_L38
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (== tmp%7#0 NoOp)
        (assert tmp%8#0) // OnCompletion is not NoOp
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (!= tmp%9#0 0u)
        (assert tmp%10#0) // can only call when not creating
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template()
        let tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#1: bool = 1u
        goto block@14
    block@5: // test_compile_contract_with_template_and_custom_prefix_route_L69
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: bool = (== tmp%11#0 NoOp)
        (assert tmp%12#0) // OnCompletion is not NoOp
        let tmp%13#0: uint64 = (txn ApplicationID)
        let tmp%14#0: bool = (!= tmp%13#0 0u)
        (assert tmp%14#0) // can only call when not creating
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix()
        let tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#2: bool = 1u
        goto block@14
    block@6: // test_compile_contract_large_route_L100
        let tmp%15#0: uint64 = (txn OnCompletion)
        let tmp%16#0: bool = (== tmp%15#0 NoOp)
        (assert tmp%16#0) // OnCompletion is not NoOp
        let tmp%17#0: uint64 = (txn ApplicationID)
        let tmp%18#0: bool = (!= tmp%17#0 0u)
        (assert tmp%18#0) // can only call when not creating
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large()
        let tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#3: bool = 1u
        goto block@14
    block@7: // switch_case_default_L6
        goto block@8
    block@8: // switch_case_next_L6
        goto block@13
    block@9: // bare_routing_L6
        let tmp%19#0: uint64 = (txn OnCompletion)
        switch tmp%19#0 {0u => block@10, * => block@11}
    block@10: // __algots__.defaultCreate_L6
        let tmp%20#0: uint64 = (txn ApplicationID)
        let tmp%21#0: bool = (== tmp%20#0 0u)
        (assert tmp%21#0) // can only call when creating
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.__algots__.defaultCreate()
        let tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#4: bool = 1u
        goto block@14
    block@11: // switch_case_default_L6
        goto block@12
    block@12: // switch_case_next_L6
        goto block@13
    block@13: // after_if_else_L6
        let tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#5: bool = 0u
        goto block@14
    block@14: // after_inlined_tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#0 <- block@3, tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#1 <- block@4, tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#2 <- block@5, tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#3 <- block@6, tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#4 <- block@10, tests/approvals/precompiled-factory.algo.ts::HelloFactory.__puya_arc4_router__%0#5 <- block@13)
        return tmp%0#0

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract() -> void:
    block@0: // L7
        itxn_begin
        let length%0#0: uint64 = (len "hello")
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 "hello")
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAEmAghncmVldGluZwAxGEAAA4gAsjEbIhNBAIw2GgCABACSJa6ABCQ3jTyABKDoGHKABNCiggBPBI4EAE4APAAqAAIiQzEZIhJEMRgiE0Q2GgFXAgCIAF1JFRZXBgJMUIAEFR98dUxQsCNC/9cxGYEEEkQxGCITRIgAOSNC/8UxGYEFEkQxGCITRIgAJiNC/7MxGSISRDEYIhJENhoBVwIAiAAHI0L/nEL/mIoBACiL/2eJiYmKAQEiKGVEKUxQgAEgUIv/UIkoKWeJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field ApplicationArgs) method "helloCreate(string)void")
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L10
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let length%1#0: uint64 = (len "world")
        let as_bytes%1#0: bytes[8] = (itob length%1#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 "world")
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = helloApp#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L19
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%0#0: bytes = ((extract 4 0) txn.LastLog#0)
        let tmp%1#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
        (assert tmp%2#0) // Bytes has valid prefix
        let result#0: bytes = ((extract 2 0) tmp%0#0)
        let tmp%3#0: bool = (== result#0 "hello world")
        (assert tmp%3#0)
        itxn_begin
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = helloApp#0
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L29
        itxn_submit
        return 

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template() -> void:
    block@0: // L38
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAEmAwhncmVldGluZwADaGV5MRhAAAOIAJExGyITQQCGNhoAgARMXGG6gAQkN408gASg6BhygATQooIATwSOBABOADwAKgACIkMxGSISRDEYIhNENhoBVwIAiABXSRUWVwYCTFCABBUffHVMULAjQv/XMRmBBBJEMRgiE0SIADMjQv/FMRmBBRJEMRgiE0SIACAjQv+zMRkiEkQxGCISRIgAByNC/6JC/56JiAAYKCpniYmJigEBIihlRClMUIABIFCL/1CJKClniQ==)
        (itxn_field ApprovalProgramPages)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L41
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let length%0#0: uint64 = (len "world")
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 "world")
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = helloApp#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L50
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%0#0: bytes = ((extract 4 0) txn.LastLog#0)
        let tmp%1#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
        (assert tmp%2#0) // Bytes has valid prefix
        let result#0: bytes = ((extract 2 0) tmp%0#0)
        let tmp%3#0: bool = (== result#0 "hey world")
        (assert tmp%3#0)
        itxn_begin
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = helloApp#0
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L60
        itxn_submit
        return 

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix() -> void:
    block@0: // L69
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAEmAwhncmVldGluZwAHYm9uam91cjEYQAADiACRMRsiE0EAhjYaAIAETFxhuoAEJDeNPIAEoOgYcoAE0KKCAE8EjgQATgA8ACoAAiJDMRkiEkQxGCITRDYaAVcCAIgAV0kVFlcGAkxQgAQVH3x1TFCwI0L/1zEZgQQSRDEYIhNEiAAzI0L/xTEZgQUSRDEYIhNEiAAgI0L/szEZIhJEMRgiEkSIAAcjQv+iQv+eiYgAGCgqZ4mJiYoBASIoZUQpTFCAASBQi/9QiSgpZ4k=)
        (itxn_field ApprovalProgramPages)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L72
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let length%0#0: uint64 = (len "world")
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 "world")
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = helloApp#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L81
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%0#0: bytes = ((extract 4 0) txn.LastLog#0)
        let tmp%1#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
        (assert tmp%2#0) // Bytes has valid prefix
        let result#0: bytes = ((extract 2 0) tmp%0#0)
        let tmp%3#0: bool = (== result#0 "bonjour world")
        (assert tmp%3#0)
        itxn_begin
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = helloApp#0
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L91
        itxn_submit
        return 

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large() -> void:
    block@0: // L100
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQBGNhoAgAQCvzDPgAQkN408TwKOAgAUAAIiQzEZgQUSRDEYIhNEiABAI0L/7TEZIhJEMRgiE0SIACoWgAQVH3x1TFCwI0L/0jEZIkyOAQADQv/GMRgiEkSIAA8jQv+7gYAgr4mI//gViYmJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L103
        itxn_submit
        let largeApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = largeApp#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "getBigBytesLength()uint64")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L112
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%0#0: bytes = ((extract 4 0) txn.LastLog#0)
        let tmp%1#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
        (assert tmp%2#0) // Bytes has valid prefix
        let reinterpret_bytes[8]%0#0: bytes[8] = tmp%0#0
        let result#0: uint64 = (btoi reinterpret_bytes[8]%0#0)
        let tmp%3#0: bool = (== result#0 4096u)
        (assert tmp%3#0)
        itxn_begin
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = largeApp#0
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L122
        itxn_submit
        return 

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.__algots__.defaultCreate() -> void:
    block@0: // L6
        return 
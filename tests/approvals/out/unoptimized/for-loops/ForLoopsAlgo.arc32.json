{
    "hints": {
        "test_for_loop(uint64,uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_for_loop_break(uint64,uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_for_loop_continue(uint64,uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_for_loop_labelled(uint64,uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ForLoopsAlgo",
        "methods": [
            {
                "name": "test_for_loop",
                "args": [
                    {
                        "type": "uint64",
                        "name": "start"
                    },
                    {
                        "type": "uint64",
                        "name": "stop"
                    },
                    {
                        "type": "uint64",
                        "name": "step"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "test_for_loop_break",
                "args": [
                    {
                        "type": "uint64",
                        "name": "start"
                    },
                    {
                        "type": "uint64",
                        "name": "stop"
                    },
                    {
                        "type": "uint64",
                        "name": "step"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "test_for_loop_continue",
                "args": [
                    {
                        "type": "uint64",
                        "name": "start"
                    },
                    {
                        "type": "uint64",
                        "name": "stop"
                    },
                    {
                        "type": "uint64",
                        "name": "step"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "test_for_loop_labelled",
                "args": [
                    {
                        "type": "uint64",
                        "name": "start"
                    },
                    {
                        "type": "uint64",
                        "name": "stop"
                    },
                    {
                        "type": "uint64",
                        "name": "step"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
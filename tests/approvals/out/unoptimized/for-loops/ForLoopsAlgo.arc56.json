{
    "name": "ForLoopsAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test_for_loop",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_break",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_continue",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_for_loop_labelled",
            "args": [
                {
                    "type": "uint64",
                    "name": "start"
                },
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "step"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        32
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        128
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiACAAEmAQQVH3x1QgAAQgAAMRsiE0EAXkIAADEZIhJEMRgiE0EATEIAADYaAIAE+GVPc4AEKH9MAoAES9d3jIAEM2deBk8EjgQAHAAWABAACkIAAEIAAEIAAACIAIdC//OIAGFC/+2IADtC/+eIABVC/+FC/+ExGSISMRgiEhBEiAGDI0NCAAA2GgEXNhoCFzYaAxdPAk8CTwKIAGgWKE8BULAjQ0IAADYaARc2GgIXNhoDF08CTwJPAogAchYoTwFQsCNDQgAANhoBFzYaAhc2GgMXTwJPAk8CiACLFihPAVCwI0NCAAA2GgEXNhoCFzYaAxdPAk8CTwKIAKcWKE8BULAjQ4oDAUIAACKL/UIAAIsBi/4MQQAVQgAAiwCLAUlOAgiMAIv/CIwBQv/jiYoDAUIAACKL/UIAAIsBi/4MQQAiQgAAiwCLAQhJjACBCg1BAAdCAABCAACJiwGL/wiMAUL/1kL/8ooDAUIAACKL/UIAAIsBi/4MQQAnQgAAiwGBBRgiEkEAEEIAAEIAAIsBi/8IjAFC/9uLAIsBCIwAQv/siYoDAYAAQgAAIov9QgAAiwKL/gxBAElCAACL/YwAQgAAiwCL/gxBAC1CAACLAkmLAElOAwiLAQiMAQuL/g1BAAtCAABCAACLAYwAiYsAi/8IjABC/8uLAov/CIwCQv+vQv/kQgAAiQ==",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
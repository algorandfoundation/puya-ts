#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 8 1
    bytecblock 0x151f7c75

main_block@0:

main_block@1:
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@9

main_abi_routing@2:
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0xf8654f73 // method "test_for_loop(uint64,uint64,uint64)uint64"
    pushbytes 0x287f4c02 // method "test_for_loop_break(uint64,uint64,uint64)uint64"
    pushbytes 0x4bd7778c // method "test_for_loop_continue(uint64,uint64,uint64)uint64"
    pushbytes 0x33675e06 // method "test_for_loop_labelled(uint64,uint64,uint64)uint64"
    uncover 4
    match main_test_for_loop_route@3 main_test_for_loop_break_route@4 main_test_for_loop_continue_route@5 main_test_for_loop_labelled_route@6

main_switch_case_default@7:

main_switch_case_next@8:

main_after_if_else@13:
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__puya_arc4_router__@14:
    return

main_test_for_loop_labelled_route@6:
    // tests/approvals/for-loops.algo.ts:32
    // test_for_loop_labelled(start: uint64, stop: uint64, step: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 3
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    // tests/approvals/for-loops.algo.ts:32
    // test_for_loop_labelled(start: uint64, stop: uint64, step: uint64) {
    uncover 2
    uncover 2
    uncover 2
    callsub test_for_loop_labelled
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__puya_arc4_router__@14

main_test_for_loop_continue_route@5:
    // tests/approvals/for-loops.algo.ts:24
    // test_for_loop_continue(start: uint64, stop: uint64, step: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 3
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    // tests/approvals/for-loops.algo.ts:24
    // test_for_loop_continue(start: uint64, stop: uint64, step: uint64) {
    uncover 2
    uncover 2
    uncover 2
    callsub test_for_loop_continue
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__puya_arc4_router__@14

main_test_for_loop_break_route@4:
    // tests/approvals/for-loops.algo.ts:13
    // test_for_loop_break(start: uint64, stop: uint64, step: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 3
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    // tests/approvals/for-loops.algo.ts:13
    // test_for_loop_break(start: uint64, stop: uint64, step: uint64) {
    uncover 2
    uncover 2
    uncover 2
    callsub test_for_loop_break
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__puya_arc4_router__@14

main_test_for_loop_route@3:
    // tests/approvals/for-loops.algo.ts:5
    // test_for_loop(start: uint64, stop: uint64, step: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 2
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txna ApplicationArgs 3
    dup
    len
    intc_1 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    // tests/approvals/for-loops.algo.ts:5
    // test_for_loop(start: uint64, stop: uint64, step: uint64) {
    uncover 2
    uncover 2
    uncover 2
    callsub test_for_loop
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    b main_after_inlined_tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@10

main_switch_case_default@11:

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/for-loops.algo.ts:4
    // class ForLoopsAlgo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_2 // 1
    b main_after_inlined_tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__puya_arc4_router__@14


// tests/approvals/for-loops.algo.ts::ForLoopsAlgo.test_for_loop(start: uint64, stop: uint64, step: uint64) -> uint64:
test_for_loop:
    // tests/approvals/for-loops.algo.ts:5
    // test_for_loop(start: uint64, stop: uint64, step: uint64) {
    proto 3 1

test_for_loop_block@0:
    // tests/approvals/for-loops.algo.ts:6
    // let total = Uint64(0)
    intc_0 // 0
    // tests/approvals/for-loops.algo.ts:7
    // for (let i = start; i < stop; i += step) {
    frame_dig -3

test_for_loop_while_top@1:
    // tests/approvals/for-loops.algo.ts:7
    // for (let i = start; i < stop; i += step) {
    frame_dig 1
    frame_dig -2
    <
    bz test_for_loop_after_while@3

test_for_loop_while_body@2:
    // tests/approvals/for-loops.algo.ts:8
    // total += i
    frame_dig 0
    frame_dig 1
    dup
    cover 2
    +
    frame_bury 0
    // tests/approvals/for-loops.algo.ts:7
    // for (let i = start; i < stop; i += step) {
    frame_dig -1
    +
    frame_bury 1
    b test_for_loop_while_top@1

test_for_loop_after_while@3:
    // tests/approvals/for-loops.algo.ts:10
    // return total
    retsub


// tests/approvals/for-loops.algo.ts::ForLoopsAlgo.test_for_loop_break(start: uint64, stop: uint64, step: uint64) -> uint64:
test_for_loop_break:
    // tests/approvals/for-loops.algo.ts:13
    // test_for_loop_break(start: uint64, stop: uint64, step: uint64) {
    proto 3 1

test_for_loop_break_block@0:
    // tests/approvals/for-loops.algo.ts:14
    // let total = Uint64(0)
    intc_0 // 0
    // tests/approvals/for-loops.algo.ts:15
    // for (let i = start; i < stop; i += step) {
    frame_dig -3

test_for_loop_break_while_top@1:
    // tests/approvals/for-loops.algo.ts:15
    // for (let i = start; i < stop; i += step) {
    frame_dig 1
    frame_dig -2
    <
    bz test_for_loop_break_after_while@5

test_for_loop_break_while_body@2:
    // tests/approvals/for-loops.algo.ts:16
    // total += i
    frame_dig 0
    frame_dig 1
    +
    dup
    frame_bury 0
    // tests/approvals/for-loops.algo.ts:17
    // if (total > 10) {
    pushint 10 // 10
    >
    bz test_for_loop_break_after_if_else@4

test_for_loop_break_if_body@3:

test_for_loop_break_block@6:
    // tests/approvals/for-loops.algo.ts:21
    // return total
    retsub

test_for_loop_break_after_if_else@4:
    // tests/approvals/for-loops.algo.ts:15
    // for (let i = start; i < stop; i += step) {
    frame_dig 1
    frame_dig -1
    +
    frame_bury 1
    b test_for_loop_break_while_top@1

test_for_loop_break_after_while@5:
    b test_for_loop_break_block@6


// tests/approvals/for-loops.algo.ts::ForLoopsAlgo.test_for_loop_continue(start: uint64, stop: uint64, step: uint64) -> uint64:
test_for_loop_continue:
    // tests/approvals/for-loops.algo.ts:24
    // test_for_loop_continue(start: uint64, stop: uint64, step: uint64) {
    proto 3 1

test_for_loop_continue_block@0:
    // tests/approvals/for-loops.algo.ts:25
    // let total = Uint64(0)
    intc_0 // 0
    // tests/approvals/for-loops.algo.ts:26
    // for (let i = start; i < stop; i += step) {
    frame_dig -3

test_for_loop_continue_while_top@1:
    // tests/approvals/for-loops.algo.ts:26
    // for (let i = start; i < stop; i += step) {
    frame_dig 1
    frame_dig -2
    <
    bz test_for_loop_continue_after_while@6

test_for_loop_continue_while_body@2:
    // tests/approvals/for-loops.algo.ts:27
    // if (i % 5 === 0) continue
    frame_dig 1
    pushint 5 // 5
    %
    intc_0 // 0
    ==
    bz test_for_loop_continue_after_if_else@4

test_for_loop_continue_if_body@3:

test_for_loop_continue_block@5:
    // tests/approvals/for-loops.algo.ts:26
    // for (let i = start; i < stop; i += step) {
    frame_dig 1
    frame_dig -1
    +
    frame_bury 1
    b test_for_loop_continue_while_top@1

test_for_loop_continue_after_if_else@4:
    // tests/approvals/for-loops.algo.ts:28
    // total += i
    frame_dig 0
    frame_dig 1
    +
    frame_bury 0
    b test_for_loop_continue_block@5

test_for_loop_continue_after_while@6:
    // tests/approvals/for-loops.algo.ts:30
    // return total
    retsub


// tests/approvals/for-loops.algo.ts::ForLoopsAlgo.test_for_loop_labelled(start: uint64, stop: uint64, step: uint64) -> uint64:
test_for_loop_labelled:
    // tests/approvals/for-loops.algo.ts:32
    // test_for_loop_labelled(start: uint64, stop: uint64, step: uint64) {
    proto 3 1
    pushbytes ""

test_for_loop_labelled_block@0:
    // tests/approvals/for-loops.algo.ts:33
    // let total = Uint64(0)
    intc_0 // 0
    // tests/approvals/for-loops.algo.ts:34
    // outer: for (let i = start; i < stop; i += step) {
    frame_dig -3

test_for_loop_labelled_while_top@1:
    // tests/approvals/for-loops.algo.ts:34
    // outer: for (let i = start; i < stop; i += step) {
    frame_dig 2
    frame_dig -2
    <
    bz test_for_loop_labelled_after_while@8

test_for_loop_labelled_while_body@2:
    // tests/approvals/for-loops.algo.ts:35
    // for (let j = start; j < stop; j += step) {
    frame_dig -3
    frame_bury 0

test_for_loop_labelled_while_top@3:
    // tests/approvals/for-loops.algo.ts:35
    // for (let j = start; j < stop; j += step) {
    frame_dig 0
    frame_dig -2
    <
    bz test_for_loop_labelled_after_while@7

test_for_loop_labelled_while_body@4:
    // tests/approvals/for-loops.algo.ts:36
    // total += i + j
    frame_dig 2
    dup
    frame_dig 0
    dup
    cover 3
    +
    frame_dig 1
    +
    frame_bury 1
    // tests/approvals/for-loops.algo.ts:38
    // if (i * j > stop) break outer
    *
    frame_dig -2
    >
    bz test_for_loop_labelled_after_if_else@6

test_for_loop_labelled_if_body@5:

test_for_loop_labelled_block@9:
    // tests/approvals/for-loops.algo.ts:41
    // return total
    frame_dig 1
    frame_bury 0
    retsub

test_for_loop_labelled_after_if_else@6:
    // tests/approvals/for-loops.algo.ts:35
    // for (let j = start; j < stop; j += step) {
    frame_dig 0
    frame_dig -1
    +
    frame_bury 0
    b test_for_loop_labelled_while_top@3

test_for_loop_labelled_after_while@7:
    // tests/approvals/for-loops.algo.ts:34
    // outer: for (let i = start; i < stop; i += step) {
    frame_dig 2
    frame_dig -1
    +
    frame_bury 2
    b test_for_loop_labelled_while_top@1

test_for_loop_labelled_after_while@8:
    b test_for_loop_labelled_block@9


// tests/approvals/for-loops.algo.ts::ForLoopsAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

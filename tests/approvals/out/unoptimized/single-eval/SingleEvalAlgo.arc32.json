{
    "hints": {
        "test()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJteVN0YXRlIiAiYSIKCm1haW5fYmxvY2tAMDoKCm1haW5fYmxvY2tAMToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIFNpbmdsZUV2YWxBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGludGNfMCAvLyAwCiAgICAhPQogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgoKbWFpbl9hYmlfcm91dGluZ0AyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NAogICAgLy8gY2xhc3MgU2luZ2xlRXZhbEFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBwdXNoYnl0ZXMgMHhhNzgwMDBkZSAvLyBtZXRob2QgInRlc3QoKXZvaWQiCiAgICBzd2FwCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVAMwoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDQ6CgptYWluX3N3aXRjaF9jYXNlX25leHRANToKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIFNpbmdsZUV2YWxBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18wIC8vIDAKCm1haW5fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTE6CiAgICByZXR1cm4KCm1haW5fdGVzdF9yb3V0ZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTYKICAgIC8vIHRlc3QoKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIHRlc3QKICAgIGludGNfMSAvLyAxCiAgICBiIG1haW5fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTEKCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo0CiAgICAvLyBjbGFzcyBTaW5nbGVFdmFsQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGludGNfMCAvLyAwCiAgICBzd2FwCiAgICBtYXRjaCBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA3CgptYWluX3N3aXRjaF9jYXNlX2RlZmF1bHRAODoKCm1haW5fc3dpdGNoX2Nhc2VfbmV4dEA5OgogICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDc6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo0CiAgICAvLyBjbGFzcyBTaW5nbGVFdmFsQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgPT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGNhbGxzdWIgX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlCiAgICBpbnRjXzEgLy8gMQogICAgYiBtYWluX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6OlNpbmdsZUV2YWxBbGdvLl9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgoKLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6OlNpbmdsZUV2YWxBbGdvLmEoKSAtPiBieXRlczoKYToKCmFfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjgKICAgIC8vIHRoaXMubXlTdGF0ZS52YWx1ZSArPSAxCiAgICBpbnRjXzAgLy8gMAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NQogICAgLy8gbXlTdGF0ZSA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oKQogICAgYnl0ZWNfMCAvLyAibXlTdGF0ZSIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjgKICAgIC8vIHRoaXMubXlTdGF0ZS52YWx1ZSArPSAxCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgaW50Y18xIC8vIDEKICAgICsKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjUKICAgIC8vIG15U3RhdGUgPSBHbG9iYWxTdGF0ZTx1aW50NjQ+KCkKICAgIGJ5dGVjXzAgLy8gIm15U3RhdGUiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo4CiAgICAvLyB0aGlzLm15U3RhdGUudmFsdWUgKz0gMQogICAgc3dhcAogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjkKICAgIC8vIHJldHVybiAnYScKICAgIGJ5dGVjXzEgLy8gImEiCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28uYigpIC0+IGJ5dGVzOgpiOgoKYl9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTMKICAgIC8vIHJldHVybiAnYicKICAgIHB1c2hieXRlcyAiYiIKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjpTaW5nbGVFdmFsQWxnby50ZXN0KCkgLT4gdm9pZDoKdGVzdDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjE2CiAgICAvLyB0ZXN0KCkgewogICAgcHJvdG8gMCAwCgp0ZXN0X2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo1CiAgICAvLyBteVN0YXRlID0gR2xvYmFsU3RhdGU8dWludDY0PigpCiAgICBieXRlY18wIC8vICJteVN0YXRlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTcKICAgIC8vIHRoaXMubXlTdGF0ZS52YWx1ZSA9IDAKICAgIGludGNfMCAvLyAwCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTgKICAgIC8vIGNvbnN0IHJlc3VsdCA9IHRoaXMuYSgpIHx8IHRoaXMuYigpCiAgICBjYWxsc3ViIGEKICAgIGR1cAogICAgbGVuCiAgICBieiB0ZXN0X3Rlcm5hcnlfZmFsc2VAMgoKdGVzdF90ZXJuYXJ5X3RydWVAMToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjE4CiAgICAvLyBjb25zdCByZXN1bHQgPSB0aGlzLmEoKSB8fCB0aGlzLmIoKQogICAgZnJhbWVfZGlnIDAKCnRlc3RfdGVybmFyeV9tZXJnZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTkKICAgIC8vIGFzc2VydCh0aGlzLm15U3RhdGUudmFsdWUgPT09IDEsICdhKCkgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIG9uY2UnKQogICAgaW50Y18wIC8vIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjUKICAgIC8vIG15U3RhdGUgPSBHbG9iYWxTdGF0ZTx1aW50NjQ+KCkKICAgIGJ5dGVjXzAgLy8gIm15U3RhdGUiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czoxOQogICAgLy8gYXNzZXJ0KHRoaXMubXlTdGF0ZS52YWx1ZSA9PT0gMSwgJ2EoKSBzaG91bGQgb25seSBiZSBjYWxsZWQgb25jZScpCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgaW50Y18xIC8vIDEKICAgID09CiAgICBhc3NlcnQgLy8gYSgpIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBvbmNlCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czoyMAogICAgLy8gYXNzZXJ0KHJlc3VsdCA9PT0gJ2EnLCAnUmVzdWx0IHNob3VsZCBiZSAiYSInKQogICAgYnl0ZWNfMSAvLyAiYSIKICAgID09CiAgICBhc3NlcnQgLy8gUmVzdWx0IHNob3VsZCBiZSAiYSIKICAgIHJldHN1YgoKdGVzdF90ZXJuYXJ5X2ZhbHNlQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czoxOAogICAgLy8gY29uc3QgcmVzdWx0ID0gdGhpcy5hKCkgfHwgdGhpcy5iKCkKICAgIGNhbGxzdWIgYgogICAgYiB0ZXN0X3Rlcm5hcnlfbWVyZ2VAMwoKCi8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjpTaW5nbGVFdmFsQWxnby5fX2FsZ290c19fLmRlZmF1bHRDcmVhdGUoKSAtPiB2b2lkOgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGU6CgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMDoKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "myState": {
                    "type": "uint64",
                    "key": "myState"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "SingleEvalAlgo",
        "methods": [
            {
                "name": "test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
{
    "name": "SingleEvalAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "myState": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bXlTdGF0ZQ=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        70
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        178
                    ],
                    "errorMessage": "Result should be \"a\""
                },
                {
                    "pc": [
                        175
                    ],
                    "errorMessage": "a() should only be called once"
                },
                {
                    "pc": [
                        107
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        75
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        123,
                        172
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJteVN0YXRlIiAiYSIKICAgIHB1c2hieXRlcyAiIgogICAgYiBtYWluX2Jsb2NrQDAKCm1haW5fYmxvY2tAMDoKICAgIGIgbWFpbl9ibG9ja0AxCgptYWluX2Jsb2NrQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo0CiAgICAvLyBjbGFzcyBTaW5nbGVFdmFsQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDYKICAgIGIgbWFpbl9hYmlfcm91dGluZ0AyCgptYWluX2FiaV9yb3V0aW5nQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo0CiAgICAvLyBjbGFzcyBTaW5nbGVFdmFsQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIHB1c2hieXRlcyAweGE3ODAwMGRlIC8vIG1ldGhvZCAidGVzdCgpdm9pZCIKICAgIHVuY292ZXIgMQogICAgbWF0Y2ggbWFpbl90ZXN0X3JvdXRlQDMKICAgIGIgbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDQKCm1haW5fc3dpdGNoX2Nhc2VfZGVmYXVsdEA0OgogICAgYiBtYWluX3N3aXRjaF9jYXNlX25leHRANQoKbWFpbl9zd2l0Y2hfY2FzZV9uZXh0QDU6CiAgICBiIG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAoKbWFpbl9hZnRlcl9pZl9lbHNlQDEwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NAogICAgLy8gY2xhc3MgU2luZ2xlRXZhbEFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICBpbnRjXzAgLy8gMAogICAgYnVyeSAxCiAgICBiIG1haW5fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTEKCm1haW5fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTE6CiAgICByZXR1cm4KCm1haW5fdGVzdF9yb3V0ZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTYKICAgIC8vIHRlc3QoKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIHRlc3QKICAgIGludGNfMSAvLyAxCiAgICBidXJ5IDEKICAgIGIgbWFpbl9hZnRlcl9pbmxpbmVkX3Rlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjpTaW5nbGVFdmFsQWxnby5fX3B1eWFfYXJjNF9yb3V0ZXJfX0AxMQoKbWFpbl9iYXJlX3JvdXRpbmdANjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIFNpbmdsZUV2YWxBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIDAKICAgIHVuY292ZXIgMQogICAgbWF0Y2ggbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVANwogICAgYiBtYWluX3N3aXRjaF9jYXNlX2RlZmF1bHRAOAoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDg6CiAgICBiIG1haW5fc3dpdGNoX2Nhc2VfbmV4dEA5CgptYWluX3N3aXRjaF9jYXNlX25leHRAOToKICAgIGIgbWFpbl9hZnRlcl9pZl9lbHNlQDEwCgptYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA3OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6NAogICAgLy8gY2xhc3MgU2luZ2xlRXZhbEFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgID09CiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBjYWxsc3ViIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZQogICAgaW50Y18xIC8vIDEKICAgIGJ1cnkgMQogICAgYiBtYWluX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6OlNpbmdsZUV2YWxBbGdvLl9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgoKLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6OlNpbmdsZUV2YWxBbGdvLmEoKSAtPiBieXRlczoKYToKICAgIGIgYV9ibG9ja0AwCgphX2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo4CiAgICAvLyB0aGlzLm15U3RhdGUudmFsdWUgKz0gMQogICAgaW50Y18wIC8vIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjUKICAgIC8vIG15U3RhdGUgPSBHbG9iYWxTdGF0ZTx1aW50NjQ+KCkKICAgIGJ5dGVjXzAgLy8gIm15U3RhdGUiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo4CiAgICAvLyB0aGlzLm15U3RhdGUudmFsdWUgKz0gMQogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIGludGNfMSAvLyAxCiAgICArCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo1CiAgICAvLyBteVN0YXRlID0gR2xvYmFsU3RhdGU8dWludDY0PigpCiAgICBieXRlY18wIC8vICJteVN0YXRlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6OAogICAgLy8gdGhpcy5teVN0YXRlLnZhbHVlICs9IDEKICAgIHVuY292ZXIgMQogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjkKICAgIC8vIHJldHVybiAnYScKICAgIGJ5dGVjXzEgLy8gImEiCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28uYigpIC0+IGJ5dGVzOgpiOgogICAgYiBiX2Jsb2NrQDAKCmJfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjEzCiAgICAvLyByZXR1cm4gJ2InCiAgICBwdXNoYnl0ZXMgImIiCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo6U2luZ2xlRXZhbEFsZ28udGVzdCgpIC0+IHZvaWQ6CnRlc3Q6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czoxNgogICAgLy8gdGVzdCgpIHsKICAgIHByb3RvIDAgMAogICAgaW50Y18wIC8vIDAKICAgIGIgdGVzdF9ibG9ja0AwCgp0ZXN0X2Jsb2NrQDA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo1CiAgICAvLyBteVN0YXRlID0gR2xvYmFsU3RhdGU8dWludDY0PigpCiAgICBieXRlY18wIC8vICJteVN0YXRlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTcKICAgIC8vIHRoaXMubXlTdGF0ZS52YWx1ZSA9IDAKICAgIGludGNfMCAvLyAwCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTgKICAgIC8vIGNvbnN0IHJlc3VsdCA9IHRoaXMuYSgpIHx8IHRoaXMuYigpCiAgICBjYWxsc3ViIGEKICAgIGR1cAogICAgbGVuCiAgICBieiB0ZXN0X3Rlcm5hcnlfZmFsc2VAMgogICAgYiB0ZXN0X3Rlcm5hcnlfdHJ1ZUAxCgp0ZXN0X3Rlcm5hcnlfdHJ1ZUAxOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTgKICAgIC8vIGNvbnN0IHJlc3VsdCA9IHRoaXMuYSgpIHx8IHRoaXMuYigpCiAgICBmcmFtZV9kaWcgMQogICAgZnJhbWVfYnVyeSAwCiAgICBiIHRlc3RfdGVybmFyeV9tZXJnZUAzCgp0ZXN0X3Rlcm5hcnlfbWVyZ2VAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjE4CiAgICAvLyBjb25zdCByZXN1bHQgPSB0aGlzLmEoKSB8fCB0aGlzLmIoKQogICAgZnJhbWVfZGlnIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjE5CiAgICAvLyBhc3NlcnQodGhpcy5teVN0YXRlLnZhbHVlID09PSAxLCAnYSgpIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBvbmNlJykKICAgIGludGNfMCAvLyAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvc2luZ2xlLWV2YWwuYWxnby50czo1CiAgICAvLyBteVN0YXRlID0gR2xvYmFsU3RhdGU8dWludDY0PigpCiAgICBieXRlY18wIC8vICJteVN0YXRlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTkKICAgIC8vIGFzc2VydCh0aGlzLm15U3RhdGUudmFsdWUgPT09IDEsICdhKCkgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIG9uY2UnKQogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIGludGNfMSAvLyAxCiAgICA9PQogICAgYXNzZXJ0IC8vIGEoKSBzaG91bGQgb25seSBiZSBjYWxsZWQgb25jZQogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MjAKICAgIC8vIGFzc2VydChyZXN1bHQgPT09ICdhJywgJ1Jlc3VsdCBzaG91bGQgYmUgImEiJykKICAgIGJ5dGVjXzEgLy8gImEiCiAgICA9PQogICAgYXNzZXJ0IC8vIFJlc3VsdCBzaG91bGQgYmUgImEiCiAgICByZXRzdWIKCnRlc3RfdGVybmFyeV9mYWxzZUAyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3NpbmdsZS1ldmFsLmFsZ28udHM6MTgKICAgIC8vIGNvbnN0IHJlc3VsdCA9IHRoaXMuYSgpIHx8IHRoaXMuYigpCiAgICBjYWxsc3ViIGIKICAgIGZyYW1lX2J1cnkgMAogICAgYiB0ZXN0X3Rlcm5hcnlfbWVyZ2VAMwoKCi8vIHRlc3RzL2FwcHJvdmFscy9zaW5nbGUtZXZhbC5hbGdvLnRzOjpTaW5nbGVFdmFsQWxnby5fX2FsZ290c19fLmRlZmF1bHRDcmVhdGUoKSAtPiB2b2lkOgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGU6CiAgICBiIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZV9ibG9ja0AwCgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMDoKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiACAAEmAgdteVN0YXRlAWGAAEIAAEIAADEbIhNBADVCAAA2GgCABKeAAN5PAY4BABBCAABCAABCAAAiRQFCAABDMRkiEkQxGCITRIgAPCNFAUL/7DEZIk8BjgEACUIAAEIAAEL/1DEYIhJEiABNI0UBQv/MQgAAIihlRCMIKE8BZymJQgAAgAFiiYoAACJCAAAoImeI/91JFUEAF0IAAIsBjABCAACLACIoZUQjEkQpEkSJiP/NjABC/+tCAACJ",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
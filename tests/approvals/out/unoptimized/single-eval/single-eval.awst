contract SingleEvalAlgo
{
  globals {
    ["myState"]: uint64
  }
  approvalProgram(): bool
  {
    return arc4Router()
  }
  
  clearProgram(): bool
  {
    return True
  }
  
  a(): string
  {
    GlobalState["myState"]: uint64 = GlobalState["myState"] + 1
    return "a"
  }
  
  b(): string
  {
    return "b"
  }
  
  test(): void
  {
    GlobalState["myState"]: uint64 = 0
    result: string = (Boolean(len(($0 = tests/approvals/single-eval.algo.ts::SingleEvalAlgo.a()))) ? $0 : tests/approvals/single-eval.algo.ts::SingleEvalAlgo.b())
    assert(GlobalState["myState"] == 1, comment=a() should only be called once)
    assert(result == "a", comment=Result should be "a")
  }
  
  __algots__.defaultCreate(): void
  {
  }
  
}
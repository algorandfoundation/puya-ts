{
    "name": "Arc4HybridAlgo",
    "structs": {},
    "methods": [
        {
            "name": "someMethod",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        107
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        144
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        112
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czo6QXJjNEh5YnJpZEFsZ28uYXBwcm92YWxQcm9ncmFtKCkgLT4gdWludDY0OgptYWluOgogICAgaW50Y2Jsb2NrIDAgMQogICAgYiBtYWluX2Jsb2NrQDAKCm1haW5fYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmM0LWh5YnJpZC5hbGdvLnRzOjUKICAgIC8vIGxvZygnYmVmb3JlJykKICAgIHB1c2hieXRlcyAiYmVmb3JlIgogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czo2CiAgICAvLyBjb25zdCByZXN1bHQgPSBzdXBlci5hcHByb3ZhbFByb2dyYW0oKQogICAgY2FsbHN1YiBhcHByb3ZhbFByb2dyYW0KICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmM0LWh5YnJpZC5hbGdvLnRzOjcKICAgIC8vIGxvZygnYWZ0ZXInKQogICAgcHVzaGJ5dGVzICJhZnRlciIKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzQtaHlicmlkLmFsZ28udHM6OAogICAgLy8gcmV0dXJuIHJlc3VsdAogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FyYzQtaHlicmlkLmFsZ28udHM6OkFyYzRIeWJyaWRBbGdvLnNvbWVNZXRob2QoKSAtPiB2b2lkOgpzb21lTWV0aG9kOgogICAgYiBzb21lTWV0aG9kX2Jsb2NrQDAKCnNvbWVNZXRob2RfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmM0LWh5YnJpZC5hbGdvLnRzOjE3CiAgICAvLyBsb2coJ3NvbWUgbWV0aG9kJykKICAgIHB1c2hieXRlcyAic29tZSBtZXRob2QiCiAgICBsb2cKICAgIHJldHN1YgoKCi8vIEBhbGdvcmFuZGZvdW5kYXRpb24vYWxnb3JhbmQtdHlwZXNjcmlwdC9hcmM0L2luZGV4LmQudHM6OkNvbnRyYWN0LmFwcHJvdmFsUHJvZ3JhbSgpIC0+IHVpbnQ2NDoKYXBwcm92YWxQcm9ncmFtOgogICAgcHJvdG8gMCAxCiAgICBwdXNoYnl0ZXMgIiIKICAgIGIgYXBwcm92YWxQcm9ncmFtX2Jsb2NrQDAKCmFwcHJvdmFsUHJvZ3JhbV9ibG9ja0AwOgogICAgYiBhcHByb3ZhbFByb2dyYW1fYmxvY2tAMQoKYXBwcm92YWxQcm9ncmFtX2Jsb2NrQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czozCiAgICAvLyBjbGFzcyBBcmM0SHlicmlkQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGJ6IGFwcHJvdmFsUHJvZ3JhbV9iYXJlX3JvdXRpbmdANgogICAgYiBhcHByb3ZhbFByb2dyYW1fYWJpX3JvdXRpbmdAMgoKYXBwcm92YWxQcm9ncmFtX2FiaV9yb3V0aW5nQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czozCiAgICAvLyBjbGFzcyBBcmM0SHlicmlkQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIHB1c2hieXRlcyAweGMyNTg0NjllIC8vIG1ldGhvZCAic29tZU1ldGhvZCgpdm9pZCIKICAgIHVuY292ZXIgMQogICAgbWF0Y2ggYXBwcm92YWxQcm9ncmFtX3NvbWVNZXRob2Rfcm91dGVAMwogICAgYiBhcHByb3ZhbFByb2dyYW1fc3dpdGNoX2Nhc2VfZGVmYXVsdEA0CgphcHByb3ZhbFByb2dyYW1fc3dpdGNoX2Nhc2VfZGVmYXVsdEA0OgogICAgYiBhcHByb3ZhbFByb2dyYW1fc3dpdGNoX2Nhc2VfbmV4dEA1CgphcHByb3ZhbFByb2dyYW1fc3dpdGNoX2Nhc2VfbmV4dEA1OgogICAgYiBhcHByb3ZhbFByb2dyYW1fYWZ0ZXJfaWZfZWxzZUAxMAoKYXBwcm92YWxQcm9ncmFtX2FmdGVyX2lmX2Vsc2VAMTA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czozCiAgICAvLyBjbGFzcyBBcmM0SHlicmlkQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCiAgICBmcmFtZV9idXJ5IDAKICAgIGIgYXBwcm92YWxQcm9ncmFtX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL2FyYzQtaHlicmlkLmFsZ28udHM6OkFyYzRIeWJyaWRBbGdvLl9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgphcHByb3ZhbFByb2dyYW1fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czo6QXJjNEh5YnJpZEFsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTE6CiAgICBmcmFtZV9kaWcgMAogICAgdW5jb3ZlciAxCiAgICByZXRzdWIKCmFwcHJvdmFsUHJvZ3JhbV9zb21lTWV0aG9kX3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czoxNgogICAgLy8gc29tZU1ldGhvZCgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGludGNfMCAvLyBOb09wCiAgICA9PQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGludGNfMCAvLyAwCiAgICAhPQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgc29tZU1ldGhvZAogICAgaW50Y18xIC8vIDEKICAgIGZyYW1lX2J1cnkgMAogICAgYiBhcHByb3ZhbFByb2dyYW1fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czo6QXJjNEh5YnJpZEFsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTEKCmFwcHJvdmFsUHJvZ3JhbV9iYXJlX3JvdXRpbmdANjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmM0LWh5YnJpZC5hbGdvLnRzOjMKICAgIC8vIGNsYXNzIEFyYzRIeWJyaWRBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIDAKICAgIHVuY292ZXIgMQogICAgbWF0Y2ggYXBwcm92YWxQcm9ncmFtX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA3CiAgICBiIGFwcHJvdmFsUHJvZ3JhbV9zd2l0Y2hfY2FzZV9kZWZhdWx0QDgKCmFwcHJvdmFsUHJvZ3JhbV9zd2l0Y2hfY2FzZV9kZWZhdWx0QDg6CiAgICBiIGFwcHJvdmFsUHJvZ3JhbV9zd2l0Y2hfY2FzZV9uZXh0QDkKCmFwcHJvdmFsUHJvZ3JhbV9zd2l0Y2hfY2FzZV9uZXh0QDk6CiAgICBiIGFwcHJvdmFsUHJvZ3JhbV9hZnRlcl9pZl9lbHNlQDEwCgphcHByb3ZhbFByb2dyYW1fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDc6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czozCiAgICAvLyBjbGFzcyBBcmM0SHlicmlkQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgPT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGNhbGxzdWIgX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlCiAgICBpbnRjXzEgLy8gMQogICAgZnJhbWVfYnVyeSAwCiAgICBiIGFwcHJvdmFsUHJvZ3JhbV9hZnRlcl9pbmxpbmVkX3Rlc3RzL2FwcHJvdmFscy9hcmM0LWh5YnJpZC5hbGdvLnRzOjpBcmM0SHlicmlkQWxnby5fX3B1eWFfYXJjNF9yb3V0ZXJfX0AxMQoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcmM0LWh5YnJpZC5hbGdvLnRzOjpBcmM0SHlicmlkQWxnby5fX2FsZ290c19fLmRlZmF1bHRDcmVhdGUoKSAtPiB2b2lkOgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGU6CiAgICBiIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZV9ibG9ja0AwCgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMDoKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjNC1oeWJyaWQuYWxnby50czo6QXJjNEh5YnJpZEFsZ28uY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzQtaHlicmlkLmFsZ28udHM6MTIKICAgIC8vIGxvZygnY2xlYXJpbmcgc3RhdGUnKQogICAgcHVzaGJ5dGVzICJjbGVhcmluZyBzdGF0ZSIKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzQtaHlicmlkLmFsZ28udHM6MTMKICAgIC8vIHJldHVybiB0cnVlCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAFCAACABmJlZm9yZbCIABuABWFmdGVysENCAACAC3NvbWUgbWV0aG9ksImKAAGAAEIAAEIAADEbIhNBADlCAAA2GgCABMJYRp5PAY4BABRCAABCAABCAAAijABCAACLAE8BiTEZIhJEMRgiE0SI/6kjjABC/+gxGSJPAY4BAAlCAABCAABC/9AxGCISRIgABiOMAEL/yEIAAIk=",
        "clear": "CkIAAIAOY2xlYXJpbmcgc3RhdGWwgQFD"
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
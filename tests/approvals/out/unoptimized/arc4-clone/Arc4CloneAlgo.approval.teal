#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 2 1 10
    bytecblock 0x
    intc_0 // 0
    bytec_0 // ""
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@9
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x398e270d // method "aliasing(uint64[])void"
    pushbytes 0x80acbe10 // method "receive(uint64[])void"
    pushbytes 0xe213f5b6 // method "receiveReadonly(uint64[])void"
    pushbytes 0x63e40e8d // method "structReturn((uint64,string,(byte[],uint8)))(byte[],uint8)"
    uncover 4
    match main_aliasing_route@3 main_receive_route@4 main_receiveReadonly_route@5 main_structReturn_route@6
    b main_switch_case_default@7

main_switch_case_default@7:
    b main_switch_case_next@8

main_switch_case_next@8:
    b main_after_if_else@13

main_after_if_else@13:
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    intc_0 // 0
    bury 1
    b main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14

main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14:
    return

main_structReturn_route@6:
    // tests/approvals/arc4-clone.algo.ts:53
    // structReturn(arg: TopLevelStruct): SharedStruct {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/arc4-clone.algo.ts:53
    // structReturn(arg: TopLevelStruct): SharedStruct {
    callsub structReturn
    pushbytes 0x151f7c75
    uncover 1
    concat
    log
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14

main_receiveReadonly_route@5:
    // tests/approvals/arc4-clone.algo.ts:51
    // receiveReadonly(a: readonly uint64[]) {}
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/arc4-clone.algo.ts:51
    // receiveReadonly(a: readonly uint64[]) {}
    callsub receiveReadonly
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14

main_receive_route@4:
    // tests/approvals/arc4-clone.algo.ts:49
    // receive(mutable: uint64[]) {}
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/arc4-clone.algo.ts:49
    // receive(mutable: uint64[]) {}
    callsub receive
    bury 2
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14

main_aliasing_route@3:
    // tests/approvals/arc4-clone.algo.ts:17
    // aliasing(mutable: uint64[]) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/arc4-clone.algo.ts:17
    // aliasing(mutable: uint64[]) {
    callsub aliasing
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txn OnCompletion
    intc_0 // 0
    uncover 1
    match main___algots__.defaultCreate@10
    b main_switch_case_default@11

main_switch_case_default@11:
    b main_switch_case_next@12

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/arc4-clone.algo.ts:16
    // export class Arc4CloneAlgo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_2 // 1
    bury 1
    b main_after_inlined_tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__puya_arc4_router__@14


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1
    bytec_0 // ""
    b dynamic_array_concat_dynamic_element_block@0

dynamic_array_concat_dynamic_element_block@0:
    bytec_0 // 0x
    frame_dig -2
    intc_1 // 2
    *
    frame_dig -4
    intc_1 // 2
    *
    intc_1 // 2
    assert // Step cannot be zero
    intc_0 // 0
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    b dynamic_array_concat_dynamic_element_for_body@2

dynamic_array_concat_dynamic_element_for_body@2:
    frame_dig -3
    frame_dig 4
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    uncover 1
    concat
    frame_bury 1
    b dynamic_array_concat_dynamic_element_for_footer@3

dynamic_array_concat_dynamic_element_for_footer@3:
    frame_dig 4
    intc_1 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3
    len
    frame_bury 2
    frame_dig -2
    intc_1 // 2
    *
    frame_bury 0
    intc_1 // 2
    assert // Step cannot be zero
    intc_0 // 0
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4
    frame_dig 0
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    b dynamic_array_concat_dynamic_element_for_body@6

dynamic_array_concat_dynamic_element_for_body@6:
    frame_dig -1
    frame_dig 4
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    uncover 1
    concat
    frame_bury 1
    b dynamic_array_concat_dynamic_element_for_footer@7

dynamic_array_concat_dynamic_element_for_footer@7:
    frame_dig 4
    intc_1 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    frame_dig 1
    concat
    frame_dig -4
    intc_1 // 2
    *
    frame_dig -3
    len
    frame_dig -3
    uncover 2
    uncover 2
    substring3
    concat
    frame_dig -2
    intc_1 // 2
    *
    frame_dig -1
    len
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    concat
    frame_bury 0
    retsub


// tests/approvals/arc4-clone.algo.ts::echo(s: bytes) -> bytes, bytes:
echo:
    // tests/approvals/arc4-clone.algo.ts:60
    // function echo(s: SharedStruct): SharedStruct {
    proto 1 2
    b echo_block@0

echo_block@0:
    // tests/approvals/arc4-clone.algo.ts:61
    // return s
    frame_dig -1
    frame_dig -1
    retsub


// tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.aliasing(mutable: bytes) -> void:
aliasing:
    // tests/approvals/arc4-clone.algo.ts:17
    // aliasing(mutable: uint64[]) {
    proto 1 0
    b aliasing_block@0

aliasing_block@0:
    // tests/approvals/arc4-clone.algo.ts:30
    // this.receive((z = clone(mutable)))
    frame_dig -1
    callsub receive
    // tests/approvals/arc4-clone.algo.ts:32
    // this.receiveReadonly(mutable)
    frame_dig -1
    callsub receiveReadonly
    // tests/approvals/arc4-clone.algo.ts:37
    // const nestedMutables = [[Uint64(1)]]
    intc_2 // 1
    itob
    extract 6 2
    intc_2 // 1
    itob
    concat
    intc_2 // 1
    itob
    extract 6 2
    intc_1 // 2
    itob
    extract 6 2
    concat
    uncover 1
    concat
    // tests/approvals/arc4-clone.algo.ts:43
    // const m4 = clone(nestedMutables).concat([Uint64(123)])
    intc_2 // 1
    itob
    extract 6 2
    pushint 123 // 123
    itob
    concat
    cover 1
    dup
    intc_0 // 0
    extract_uint16
    cover 2
    dup
    len
    cover 1
    intc_1 // 2
    uncover 2
    substring3
    intc_1 // 2
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    uncover 2
    concat
    uncover 2
    uncover 2
    intc_2 // 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    retsub


// tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.receive(mutable: bytes) -> bytes:
receive:
    // tests/approvals/arc4-clone.algo.ts:49
    // receive(mutable: uint64[]) {}
    proto 1 1
    b receive_block@0

receive_block@0:
    frame_dig -1
    retsub


// tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.receiveReadonly(a: bytes) -> void:
receiveReadonly:
    // tests/approvals/arc4-clone.algo.ts:51
    // receiveReadonly(a: readonly uint64[]) {}
    proto 1 0
    b receiveReadonly_block@0

receiveReadonly_block@0:
    retsub


// tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.structReturn(arg: bytes) -> bytes:
structReturn:
    // tests/approvals/arc4-clone.algo.ts:53
    // structReturn(arg: TopLevelStruct): SharedStruct {
    proto 1 1
    b structReturn_block@0

structReturn_block@0:
    // tests/approvals/arc4-clone.algo.ts:55
    // assert(arg.shared === echo(arg.shared), "this won't error")
    frame_dig -1
    intc_3 // 10
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    frame_dig -1
    intc_3 // 10
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    callsub echo
    cover 2
    ==
    assert // this won't error
    // tests/approvals/arc4-clone.algo.ts:56
    // return arg.shared
    frame_dig -1
    intc_3 // 10
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    uncover 2
    uncover 2
    substring3
    uncover 1
    retsub


// tests/approvals/arc4-clone.algo.ts::Arc4CloneAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

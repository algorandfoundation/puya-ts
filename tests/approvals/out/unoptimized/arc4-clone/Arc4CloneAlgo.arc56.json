{
    "name": "Arc4CloneAlgo",
    "structs": {
        "SharedStruct": [
            {
                "name": "foo",
                "type": "byte[]"
            },
            {
                "name": "bar",
                "type": "uint8"
            }
        ],
        "TopLevelStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            },
            {
                "name": "shared",
                "type": "SharedStruct"
            }
        ]
    },
    "methods": [
        {
            "name": "aliasing",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "mutable"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receive",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "mutable"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveReadonly",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "structReturn",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "(byte[],uint8)",
                "struct": "SharedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        122
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        266
                    ],
                    "errorMessage": "this won't error"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiADAAEKQgAAQgAAMRsiE0EAXkIAADEZIhJEMRgiE0EATEIAADYaAIAEOY4nDYAEgKy+EIAE4hP1toAEY+QOjU8EjgQAHAAWABAACkIAAEIAAEIAAACIAFNC//OIAEJC/+2IADFC/+eIACBC/+FC/+ExGSISMRgiEhBEiACeI0OKAQJCAACL/4v/iUIAADYaAYgALSNDQgAANhoBiAAzI0NCAAA2GgGIADEjQ0IAADYaAYgALYAEFR98dU8BULAjQ4oBAEIAAIv/iAAGi/+IAAqJigEBQgAAi/+JigEAQgAAiYoBAUIAAIv/JFmL/xWL/08CTwJSi/8kWYv/FYv/TwJPAlKI/3lOAhJEi/8kWYv/FYv/TwJPAlJPAYlCAACJ",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
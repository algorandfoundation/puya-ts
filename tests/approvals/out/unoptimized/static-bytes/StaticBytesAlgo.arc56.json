{
    "name": "StaticBytesAlgo",
    "structs": {},
    "methods": [
        {
            "name": "hashAddresses",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "a1"
                },
                {
                    "type": "byte[32]",
                    "name": "a2"
                }
            ],
            "returns": {
                "type": "byte[32]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveB32",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[32]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveBytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "returnLength",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testArray",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        448
                    ],
                    "errorMessage": "Length must be 55"
                },
                {
                    "pc": [
                        119,
                        136,
                        153,
                        178,
                        205,
                        234
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        277
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        124,
                        141,
                        158,
                        183,
                        210,
                        239
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        511
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        221,
                        253,
                        464,
                        483,
                        494
                    ],
                    "errorMessage": "invalid size"
                },
                {
                    "pc": [
                        501
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        531
                    ],
                    "errorMessage": "no available slots"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEACABNyYCBBUffHUAgCB//////////////////////////////////////////zUAMRsiE0EAzDYaAIAEJbs0ZYAEY/vtvoAEXG9JnIAE1xKA6oAEp4AA3oAEuXZ4j08GjgYAdQBYAD0AJAATAAIiQzEZIhJEMRgiE0SIAUYkQv/uMRkiEkQxGCITRIgAtSRC/90xGSISRDEYIhNENhoBiACaFihMULAkQv/EMRkiEkQxGCITRDYaAVcCADYaAheIAG8kQv+pMRkiEkQxGCITRDYaAYgATkkVIxJEKExQsCRC/4wxGSISRDEYIhNENhoBNhoCiAAkSRUjEkQoTFCwJEL/bDEZIkyOAQADQv9gMRgiEkSIAO0kQv9VigIBi/6L/1ADiYoBAYv/FSMSRIv/A4mKAgCL/hWL/xJEiYoBAYv/FYkxAIj/3EgxACOI/+KAIGFiY2RlZmdoYWJjZGVmZ2hhYmNkZWZnaGFiY2RlZmdoiP+wSCmAA2FiY1CAAqr/UIAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMdOVUUIAOSGVsbG8gQWxnb3JhbmRQSRUlEkQVJRJEiTEASUwxAEkVIxJEKUxQiAAwSU8CP0k+TEsCFSMSREsCKUxQSwQVIxJETwRQTwJMUEsBTD8+IiMLI1isMQASRImJNACTNACBgAJLAgkiVDUAiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
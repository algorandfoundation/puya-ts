{
    "name": "StaticBytesAlgo",
    "structs": {},
    "methods": [
        {
            "name": "hashAddresses",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "a1"
                },
                {
                    "type": "byte[32]",
                    "name": "a2"
                }
            ],
            "returns": {
                "type": "byte[32]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveB32",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[32]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receiveBytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "length"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "returnLength",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testArray",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test4",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        611
                    ],
                    "errorMessage": "Length must be 16"
                },
                {
                    "pc": [
                        779
                    ],
                    "errorMessage": "Length must be 32"
                },
                {
                    "pc": [
                        568
                    ],
                    "errorMessage": "Length must be 55"
                },
                {
                    "pc": [
                        71
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        237
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        687
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        271,
                        292,
                        635,
                        656,
                        668
                    ],
                    "errorMessage": "invalid size"
                },
                {
                    "pc": [
                        676
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        804
                    ],
                    "errorMessage": "no available slots"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyAEIAEAECYCBBUffHUAgCB//////////////////////////////////////////zUAQgAAQgAAMRskE0EApEIAADEZJBJEMRgkE0EAkkIAADYaAIAEJbs0ZYAEY/vtvoAEXG9JnIAE1xKA6oAEp4AA3oAEuXZ4j4AEnVLDj4AE35IPN4AEPUY0XE8JjgkAOgA0AC4AKAAiABwAFgAQAApCAABCAABCAAAAiADPQv/ziADBQv/tiAClQv/niACXQv/hiACJQv/biAByQv/ViABaQv/PiAA/Qv/JiAAhQv/DQv/DMRkkEjEYJBIQRIgCICNDigEBQgAAIq+L/6uJQgAANhoBNhoCiAB6SRUiEkQoTwFQsCNDQgAANhoBiABySRUiEkQoTwFQsCNDQgAANhoBVwIANhoCF4gAZiNDQgAANhoBiABpFihPAVCwI0NCAACIAGUjQ0IAAIgBDyNDQgAAiAFRSRUWVwYCTwFQKE8BULAjQ0IAAIgBgyNDQgAAiAF/I0OKAgFCAACL/ov/UAOJigEBQgAAi/8VIhJEi/8DiYoCAEIAAIv+FYv/EkSJigEBQgAAi/8ViUIAADEAiP/QSDEAIoj/2YAgYWJjZGVmZ2hhYmNkZWZnaGFiY2RlZmdoYWJjZGVmZ2iI/6RIKYADYWJjUIACqv9QgCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx05VRQgA5IZWxsbyBBbGdvcmFuZFBJFYE3EkQVgTcSRDEASRUkSwEPJEsCTwJNTgElSwEPJU8CTwJNTwJPAk8CUkkVJRJEiP6MFSISRIlCAAAxADEATgExAEkVIhJEKU8BUIgAkklPAj9JPk4BSwIVIhJESwIpTwFQSwQVIhJETwRQTwJPAVBLAU8BPz4kIgsiWKwxABJEiYoAAUIAAIAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkQgAAiwGBBQxBABNCAACLAElQAYwAiwEjCIwBQv/liUIAAIlCAAAxAEkVIhJEFSISRIlCAACJQgAANACTNACBgAJLAgkkVDUAiQ==",
        "clear": "C0IAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}
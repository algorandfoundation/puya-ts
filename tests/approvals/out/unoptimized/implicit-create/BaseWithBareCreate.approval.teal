#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/implicit-create.algo.ts:13
    // class BaseWithBareCreate extends Contract {
    txn NumAppArgs
    pushint 0 // 0
    !=
    bz main_create@3
    b main_abi_routing@2

main_abi_routing@2:
    b main_after_if_else@4

main_after_if_else@4:
    // tests/approvals/implicit-create.algo.ts:13
    // class BaseWithBareCreate extends Contract {
    err

main_create@3:
    // tests/approvals/implicit-create.algo.ts:14
    // @baremethod({ onCreate: 'require' })
    txn OnCompletion
    pushint 0 // NoOp
    ==
    txn ApplicationID
    pushint 0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub create
    pushint 1 // 1
    return


// tests/approvals/implicit-create.algo.ts::BaseWithBareCreate.create() -> void:
create:
    b create_block@0

create_block@0:
    retsub

{
    "name": "TuplesAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        60
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        112
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        65
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCA4IDEgMTYKICAgIHB1c2hieXRlcyAiIgogICAgYiBtYWluX2Jsb2NrQDAKCm1haW5fYmxvY2tAMDoKICAgIGIgbWFpbl9ibG9ja0AxCgptYWluX2Jsb2NrQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6NgogICAgLy8gY2xhc3MgVHVwbGVzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDYKICAgIGIgbWFpbl9hYmlfcm91dGluZ0AyCgptYWluX2FiaV9yb3V0aW5nQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6NgogICAgLy8gY2xhc3MgVHVwbGVzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIHB1c2hieXRlcyAweDM3ZTdjZTg3IC8vIG1ldGhvZCAidGVzdCh1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkIgogICAgdW5jb3ZlciAxCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVAMwogICAgYiBtYWluX3N3aXRjaF9jYXNlX2RlZmF1bHRANAoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDQ6CiAgICBiIG1haW5fc3dpdGNoX2Nhc2VfbmV4dEA1CgptYWluX3N3aXRjaF9jYXNlX25leHRANToKICAgIGIgbWFpbl9hZnRlcl9pZl9lbHNlQDEwCgptYWluX2FmdGVyX2lmX2Vsc2VAMTA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6NgogICAgLy8gY2xhc3MgVHVwbGVzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCiAgICBidXJ5IDEKICAgIGIgbWFpbl9hZnRlcl9pbmxpbmVkX3Rlc3RzL2FwcHJvdmFscy90dXBsZXMuYWxnby50czo6VHVwbGVzQWxnby5fX3B1eWFfYXJjNF9yb3V0ZXJfX0AxMQoKbWFpbl9hZnRlcl9pbmxpbmVkX3Rlc3RzL2FwcHJvdmFscy90dXBsZXMuYWxnby50czo6VHVwbGVzQWxnby5fX3B1eWFfYXJjNF9yb3V0ZXJfX0AxMToKICAgIHJldHVybgoKbWFpbl90ZXN0X3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6NwogICAgLy8gdGVzdChhOiBVaW50NjQsIGI6IFVpbnQ2NCwgYzogVWludDY0KSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6NgogICAgLy8gY2xhc3MgVHVwbGVzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDMKICAgIC8vIHRlc3RzL2FwcHJvdmFscy90dXBsZXMuYWxnby50czo3CiAgICAvLyB0ZXN0KGE6IFVpbnQ2NCwgYjogVWludDY0LCBjOiBVaW50NjQpIHsKICAgIHVuY292ZXIgMgogICAgdW5jb3ZlciAyCiAgICB1bmNvdmVyIDIKICAgIGNhbGxzdWIgdGVzdAogICAgaW50Y18yIC8vIDEKICAgIGJ1cnkgMQogICAgYiBtYWluX2FmdGVyX2lubGluZWRfdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjpUdXBsZXNBbGdvLl9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjYKICAgIC8vIGNsYXNzIFR1cGxlc0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gMAogICAgdW5jb3ZlciAxCiAgICBtYXRjaCBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA3CiAgICBiIG1haW5fc3dpdGNoX2Nhc2VfZGVmYXVsdEA4CgptYWluX3N3aXRjaF9jYXNlX2RlZmF1bHRAODoKICAgIGIgbWFpbl9zd2l0Y2hfY2FzZV9uZXh0QDkKCm1haW5fc3dpdGNoX2Nhc2VfbmV4dEA5OgogICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDc6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6NgogICAgLy8gY2xhc3MgVHVwbGVzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgPT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGNhbGxzdWIgX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlCiAgICBpbnRjXzIgLy8gMQogICAgYnVyeSAxCiAgICBiIG1haW5fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6OlR1cGxlc0FsZ28uX19wdXlhX2FyYzRfcm91dGVyX19AMTEKCgovLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6OlR1cGxlc0FsZ28udGVzdChhOiBieXRlcywgYjogYnl0ZXMsIGM6IGJ5dGVzKSAtPiB2b2lkOgp0ZXN0OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjcKICAgIC8vIHRlc3QoYTogVWludDY0LCBiOiBVaW50NjQsIGM6IFVpbnQ2NCkgewogICAgcHJvdG8gMyAwCiAgICBiIHRlc3RfYmxvY2tAMAoKdGVzdF9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjgKICAgIC8vIGNvbnN0IHJlYWRvbmx5VHVwbGUgPSBbYSwgYiwgY10gYXMgY29uc3QKICAgIGZyYW1lX2RpZyAtMwogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy90dXBsZXMuYWxnby50czoxMAogICAgLy8gY29uc3QgbXV0YWJsZVR1cGxlOiBbVWludDY0LCBVaW50NjQsIFVpbnQ2NF0gPSBbYSwgYiwgY10KICAgIHB1c2hieXRlcyAweAogICAgZnJhbWVfZGlnIC0zCiAgICBjb25jYXQKICAgIGZyYW1lX2RpZyAtMgogICAgY29uY2F0CiAgICBmcmFtZV9kaWcgLTEKICAgIGNvbmNhdAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjEyCiAgICAvLyBjb25zdCBhcmM0VHVwbGUgPSBuZXcgVHVwbGUoYSwgYiwgYykKICAgIHB1c2hieXRlcyAweAogICAgZnJhbWVfZGlnIC0zCiAgICBjb25jYXQKICAgIGZyYW1lX2RpZyAtMgogICAgY29uY2F0CiAgICBmcmFtZV9kaWcgLTEKICAgIGNvbmNhdAogICAgY292ZXIgMQogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjE0CiAgICAvLyB0aGlzLnJlY2VpdmVSZWFkb25seShyZWFkb25seVR1cGxlKQogICAgdW5jb3ZlciA0CiAgICB1bmNvdmVyIDQKICAgIHVuY292ZXIgNAogICAgY2FsbHN1YiByZWNlaXZlUmVhZG9ubHkKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjE1CiAgICAvLyB0aGlzLnJlY2VpdmVSZWFkb25seShtdXRhYmxlVHVwbGUpCiAgICBkdXAKICAgIGludGNfMCAvLyAwCiAgICBpbnRjXzEgLy8gOAogICAgZXh0cmFjdDMKICAgIGNvdmVyIDEKICAgIGR1cAogICAgaW50Y18xIC8vIDgKICAgIGludGNfMSAvLyA4CiAgICBleHRyYWN0MwogICAgY292ZXIgMQogICAgZHVwCiAgICBpbnRjXzMgLy8gMTYKICAgIGludGNfMSAvLyA4CiAgICBleHRyYWN0MwogICAgdW5jb3ZlciAzCiAgICB1bmNvdmVyIDMKICAgIHVuY292ZXIgMgogICAgY2FsbHN1YiByZWNlaXZlUmVhZG9ubHkKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjE2CiAgICAvLyB0aGlzLnJlY2VpdmVSZWFkb25seShhcmM0VHVwbGUubmF0aXZlKQogICAgZGlnIDEKICAgIGludGNfMCAvLyAwCiAgICBpbnRjXzEgLy8gOAogICAgZXh0cmFjdDMKICAgIGNvdmVyIDEKICAgIGRpZyAyCiAgICBpbnRjXzEgLy8gOAogICAgaW50Y18xIC8vIDgKICAgIGV4dHJhY3QzCiAgICBjb3ZlciAxCiAgICB1bmNvdmVyIDMKICAgIGludGNfMyAvLyAxNgogICAgaW50Y18xIC8vIDgKICAgIGV4dHJhY3QzCiAgICB1bmNvdmVyIDMKICAgIGNvdmVyIDEKICAgIHVuY292ZXIgMwogICAgdW5jb3ZlciAxCiAgICB1bmNvdmVyIDIKICAgIHVuY292ZXIgMgogICAgdW5jb3ZlciAyCiAgICBjYWxsc3ViIHJlY2VpdmVSZWFkb25seQogICAgcG9wCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6MTgKICAgIC8vIHRoaXMucmVjZWl2ZU11dGFibGUobXV0YWJsZVR1cGxlKQogICAgY2FsbHN1YiByZWNlaXZlTXV0YWJsZQogICAgcG9wCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvdHVwbGVzLmFsZ28udHM6OlR1cGxlc0FsZ28ucmVjZWl2ZVJlYWRvbmx5KGFyZy4wOiBieXRlcywgYXJnLjE6IGJ5dGVzLCBhcmcuMjogYnl0ZXMpIC0+IHVpbnQ2NDoKcmVjZWl2ZVJlYWRvbmx5OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjI4CiAgICAvLyBwcml2YXRlIHJlY2VpdmVSZWFkb25seShhcmc6IHJlYWRvbmx5IFtVaW50NjQsIFVpbnQ2NCwgVWludDY0XSk6IHVpbnQ2NCB7CiAgICBwcm90byAzIDEKICAgIGIgcmVjZWl2ZVJlYWRvbmx5X2Jsb2NrQDAKCnJlY2VpdmVSZWFkb25seV9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjI5CiAgICAvLyByZXR1cm4gYXJnLmxlbmd0aAogICAgcHVzaGludCAzIC8vIDMKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy90dXBsZXMuYWxnby50czo6VHVwbGVzQWxnby5yZWNlaXZlTXV0YWJsZShhcmc6IGJ5dGVzKSAtPiB1aW50NjQ6CnJlY2VpdmVNdXRhYmxlOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjMyCiAgICAvLyBwcml2YXRlIHJlY2VpdmVNdXRhYmxlKGFyZzogW1VpbnQ2NCwgVWludDY0LCBVaW50NjRdKTogdWludDY0IHsKICAgIHByb3RvIDEgMQogICAgYiByZWNlaXZlTXV0YWJsZV9ibG9ja0AwCgpyZWNlaXZlTXV0YWJsZV9ibG9ja0AwOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL3R1cGxlcy5hbGdvLnRzOjM0CiAgICAvLyByZXR1cm4gYXJnLmxlbmd0aAogICAgcHVzaGludCAzIC8vIDMKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy90dXBsZXMuYWxnby50czo6VHVwbGVzQWxnby5fX2FsZ290c19fLmRlZmF1bHRDcmVhdGUoKSAtPiB2b2lkOgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGU6CiAgICBiIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZV9ibG9ja0AwCgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMDoKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiAEAAgBEIAAQgAAQgAAMRsiE0EAREIAADYaAIAEN+fOh08BjgEAEEIAAEIAAEIAACJFAUIAAEMxGSISRDEYIhNENhoBNhoCNhoDTwJPAk8CiAAmJEUBQv/dMRkiTwGOAQAJQgAAQgAAQv/FMRgiEkSIAIokRQFC/72KAwBCAACL/Yv+i/+AAIv9UIv+UIv/UIAAi/1Qi/5Qi/9QTgFPBE8ETwSIAEVISSIjWE4BSSMjWE4BSSUjWE8DTwNPAogAK0hLASIjWE4BSwIjI1hOAU8DJSNYTwNOAU8DTwFPAk8CTwKIAAZIiAALSImKAwFCAACBA4mKAQFCAACBA4lCAACJ",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
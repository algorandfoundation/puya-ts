{
    "hints": {
        "test()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxIDIKCm1haW5fYmxvY2tAMDoKCm1haW5fYmxvY2tAMToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjE3CiAgICAvLyBjbGFzcyBEZXN0cnVjdHVyaW5nSXRlcmF0b3JzIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGludGNfMCAvLyAwCiAgICAhPQogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgoKbWFpbl9hYmlfcm91dGluZ0AyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2Rlc3RydWN0dXJpbmctaXRlcmF0b3JzLmFsZ28udHM6MTcKICAgIC8vIGNsYXNzIERlc3RydWN0dXJpbmdJdGVyYXRvcnMgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBwdXNoYnl0ZXMgMHhhNzgwMDBkZSAvLyBtZXRob2QgInRlc3QoKXZvaWQiCiAgICBzd2FwCiAgICBtYXRjaCBtYWluX3Rlc3Rfcm91dGVAMwoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDQ6CgptYWluX3N3aXRjaF9jYXNlX25leHRANToKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjE3CiAgICAvLyBjbGFzcyBEZXN0cnVjdHVyaW5nSXRlcmF0b3JzIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18wIC8vIDAKCm1haW5fYWZ0ZXJfaW5saW5lZF90ZXN0cy9hcHByb3ZhbHMvZGVzdHJ1Y3R1cmluZy1pdGVyYXRvcnMuYWxnby50czo6RGVzdHJ1Y3R1cmluZ0l0ZXJhdG9ycy5fX3B1eWFfYXJjNF9yb3V0ZXJfX0AxMToKICAgIHJldHVybgoKbWFpbl90ZXN0X3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZGVzdHJ1Y3R1cmluZy1pdGVyYXRvcnMuYWxnby50czoxOAogICAgLy8gdGVzdCgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGludGNfMCAvLyBOb09wCiAgICA9PQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGludGNfMCAvLyAwCiAgICAhPQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgdGVzdAogICAgaW50Y18xIC8vIDEKICAgIGIgbWFpbl9hZnRlcl9pbmxpbmVkX3Rlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjpEZXN0cnVjdHVyaW5nSXRlcmF0b3JzLl9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2Rlc3RydWN0dXJpbmctaXRlcmF0b3JzLmFsZ28udHM6MTcKICAgIC8vIGNsYXNzIERlc3RydWN0dXJpbmdJdGVyYXRvcnMgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gMAogICAgc3dhcAogICAgbWF0Y2ggbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVANwoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDg6CgptYWluX3N3aXRjaF9jYXNlX25leHRAOToKICAgIGIgbWFpbl9hZnRlcl9pZl9lbHNlQDEwCgptYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA3OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2Rlc3RydWN0dXJpbmctaXRlcmF0b3JzLmFsZ28udHM6MTcKICAgIC8vIGNsYXNzIERlc3RydWN0dXJpbmdJdGVyYXRvcnMgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgID09CiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBjYWxsc3ViIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZQogICAgaW50Y18xIC8vIDEKICAgIGIgbWFpbl9hZnRlcl9pbmxpbmVkX3Rlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjpEZXN0cnVjdHVyaW5nSXRlcmF0b3JzLl9fcHV5YV9hcmM0X3JvdXRlcl9fQDExCgoKLy8gdGVzdHMvYXBwcm92YWxzL2Rlc3RydWN0dXJpbmctaXRlcmF0b3JzLmFsZ28udHM6OnRlc3RfaW1tdXRhYmxlKCkgLT4gdm9pZDoKdGVzdF9pbW11dGFibGU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZGVzdHJ1Y3R1cmluZy1pdGVyYXRvcnMuYWxnby50czo0CiAgICAvLyBmdW5jdGlvbiB0ZXN0X2ltbXV0YWJsZSgpIHsKICAgIHByb3RvIDAgMAoKdGVzdF9pbW11dGFibGVfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjEwCiAgICAvLyBsZXQgdG90YWw6IHVpbnQ2NCA9IDAKICAgIGludGNfMCAvLyAwCiAgICBkdXAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjYKICAgIC8vIHsgYTogVWludDY0KDEpLCBiOiBVaW50NjQoMikgfSwKICAgIGludGNfMSAvLyAxCgp0ZXN0X2ltbXV0YWJsZV9mb3JfYm9keUAxOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2Rlc3RydWN0dXJpbmctaXRlcmF0b3JzLmFsZ28udHM6MTIKICAgIC8vIHRvdGFsICs9IGEKICAgIGZyYW1lX2RpZyAwCiAgICArCiAgICBmcmFtZV9idXJ5IDAKCnRlc3RfaW1tdXRhYmxlX2Zvcl9mb290ZXJAMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjExCiAgICAvLyBmb3IgKGNvbnN0IHsgYSB9IG9mIGl0ZW1zKSB7CiAgICBmcmFtZV9kaWcgMQogICAgc3dpdGNoIHRlc3RfaW1tdXRhYmxlX2Zvcl9oZWFkZXJfMUAzIHRlc3RfaW1tdXRhYmxlX2Zvcl9oZWFkZXJfMkA0Cgp0ZXN0X2ltbXV0YWJsZV9hZnRlcl9mb3JANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjE0CiAgICAvLyBhc3NlcnQodG90YWwgPT09IDYpCiAgICBmcmFtZV9kaWcgMAogICAgcHVzaGludCA2IC8vIDYKICAgID09CiAgICBhc3NlcnQKICAgIHJldHN1YgoKdGVzdF9pbW11dGFibGVfZm9yX2hlYWRlcl8yQDQ6CiAgICBpbnRjXzIgLy8gMgogICAgZnJhbWVfYnVyeSAxCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZGVzdHJ1Y3R1cmluZy1pdGVyYXRvcnMuYWxnby50czo4CiAgICAvLyB7IGE6IFVpbnQ2NCgzKSwgYjogVWludDY0KDIpIH0sCiAgICBwdXNoaW50IDMgLy8gMwogICAgYiB0ZXN0X2ltbXV0YWJsZV9mb3JfYm9keUAxCgp0ZXN0X2ltbXV0YWJsZV9mb3JfaGVhZGVyXzFAMzoKICAgIGludGNfMSAvLyAxCiAgICBmcmFtZV9idXJ5IDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjcKICAgIC8vIHsgYTogVWludDY0KDIpLCBiOiBVaW50NjQoMikgfSwKICAgIGludGNfMiAvLyAyCiAgICBiIHRlc3RfaW1tdXRhYmxlX2Zvcl9ib2R5QDEKCgovLyB0ZXN0cy9hcHByb3ZhbHMvZGVzdHJ1Y3R1cmluZy1pdGVyYXRvcnMuYWxnby50czo6RGVzdHJ1Y3R1cmluZ0l0ZXJhdG9ycy50ZXN0KCkgLT4gdm9pZDoKdGVzdDoKCnRlc3RfYmxvY2tAMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kZXN0cnVjdHVyaW5nLWl0ZXJhdG9ycy5hbGdvLnRzOjE5CiAgICAvLyB0ZXN0X2ltbXV0YWJsZSgpCiAgICBjYWxsc3ViIHRlc3RfaW1tdXRhYmxlCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvZGVzdHJ1Y3R1cmluZy1pdGVyYXRvcnMuYWxnby50czo6RGVzdHJ1Y3R1cmluZ0l0ZXJhdG9ycy5fX2FsZ290c19fLmRlZmF1bHRDcmVhdGUoKSAtPiB2b2lkOgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGU6CgpfX2FsZ290c19fLmRlZmF1bHRDcmVhdGVfYmxvY2tAMDoKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "DestructuringIterators",
        "methods": [
            {
                "name": "test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
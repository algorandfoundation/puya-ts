#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1

main_block@0:

main_block@1:
    // tests/approvals/multi-inheritance.algo.ts:61
    // class AbiCallMultiInheritance extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@6

main_abi_routing@2:
    // tests/approvals/multi-inheritance.algo.ts:61
    // class AbiCallMultiInheritance extends Contract {
    txna ApplicationArgs 0
    pushbytes 0xfefe8691 // method "test(application)void"
    swap
    match main_test_route@3

main_switch_case_default@4:

main_switch_case_next@5:

main_after_if_else@10:
    // tests/approvals/multi-inheritance.algo.ts:61
    // class AbiCallMultiInheritance extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/multi-inheritance.algo.ts::AbiCallMultiInheritance.__puya_arc4_router__@11:
    return

main_test_route@3:
    // tests/approvals/multi-inheritance.algo.ts:62
    // test(app: Application) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/multi-inheritance.algo.ts:61
    // class AbiCallMultiInheritance extends Contract {
    txna ApplicationArgs 1
    btoi
    txnas Applications
    // tests/approvals/multi-inheritance.algo.ts:62
    // test(app: Application) {
    callsub test
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::AbiCallMultiInheritance.__puya_arc4_router__@11

main_bare_routing@6:
    // tests/approvals/multi-inheritance.algo.ts:61
    // class AbiCallMultiInheritance extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@7

main_switch_case_default@8:

main_switch_case_next@9:
    b main_after_if_else@10

main___algots__.defaultCreate@7:
    // tests/approvals/multi-inheritance.algo.ts:61
    // class AbiCallMultiInheritance extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::AbiCallMultiInheritance.__puya_arc4_router__@11


// tests/approvals/multi-inheritance.algo.ts::AbiCallMultiInheritance.test(app: uint64) -> void:
test:
    // tests/approvals/multi-inheritance.algo.ts:62
    // test(app: Application) {
    proto 1 0

test_block@0:
    // tests/approvals/multi-inheritance.algo.ts:63-66
    // abiCall(MultiBases.prototype.methodTwo, {
    //   args: [],
    //   appId: app,
    // })
    itxn_begin
    // tests/approvals/multi-inheritance.algo.ts:65
    // appId: app,
    frame_dig -1
    // tests/approvals/multi-inheritance.algo.ts:63-66
    // abiCall(MultiBases.prototype.methodTwo, {
    //   args: [],
    //   appId: app,
    // })
    pushbytes 0x363b329e // method "methodTwo()string"
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    pushint 6 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_next_txn@1:
    // tests/approvals/multi-inheritance.algo.ts:63-66
    // abiCall(MultiBases.prototype.methodTwo, {
    //   args: [],
    //   appId: app,
    // })
    itxn_submit
    itxn LastLog
    extract 0 4
    pushbytes 0x151f7c75
    ==
    assert // Bytes has valid prefix
    retsub


// tests/approvals/multi-inheritance.algo.ts::AbiCallMultiInheritance.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

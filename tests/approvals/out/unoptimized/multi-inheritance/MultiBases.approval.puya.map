{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/multi-inheritance.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;AAAA;;AAdE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAdA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAWA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAoCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAHF;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAIW;;;;;;;;;;;;;AAAP;AAIO;;;AAAP;AAIO;;;AAAP;AAIO;;;AAAP;AApCO;;;;;;;;;;AAAP;AAXO;AAAP;AAIO;AAAP;AAcO;AAAP;AASO;AAAP;;AAIJ;;;AACE;;;;;;;;;;;;AAAyC;;;;;;AAAzC;;;;;;;;;AAxBF;;;AACE;;;;;;;;;;AAA8C;;AAA9C;;AAZA;;;;;;;;;;;;;AAAkD;;AAAlD;;AAkBF;;;AACE;;;;;;;;;;AAAuC;;;;;;;AAAvC;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x151f7c75 \"common\" \"base-two\""
    },
    "28": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "30": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "33": {
      "block": "main_if_body@1",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::MultiBases.constructor",
      "op": "callsub constructor"
    },
    "36": {
      "block": "main_block@3",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "38": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "39": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "40": {
      "op": "bz main_bare_routing@15",
      "stack_out": []
    },
    "43": {
      "block": "main_abi_routing@4",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "46": {
      "op": "pushbytes 0x290eba9f // method \"methodMulti()string\"",
      "defined_out": [
        "Method(methodMulti()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)"
      ]
    },
    "52": {
      "op": "pushbytes 0x839d96ff // method \"methodCallsSuper()string\"",
      "defined_out": [
        "Method(methodCallsSuper()string)",
        "Method(methodMulti()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)"
      ]
    },
    "58": {
      "op": "pushbytes 0xa978ca56 // method \"callB2CantOverride()string\"",
      "defined_out": [
        "Method(callB2CantOverride()string)",
        "Method(methodCallsSuper()string)",
        "Method(methodMulti()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)"
      ]
    },
    "64": {
      "op": "pushbytes 0x88547eb8 // method \"callB2Common()string\"",
      "defined_out": [
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodCallsSuper()string)",
        "Method(methodMulti()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)"
      ]
    },
    "70": {
      "op": "pushbytes 0xc32533e3 // method \"methodOne()string\"",
      "defined_out": [
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodCallsSuper()string)",
        "Method(methodMulti()string)",
        "Method(methodOne()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodOne()string)"
      ]
    },
    "76": {
      "op": "pushbytes 0x455c8d09 // method \"methodCommon()string\"",
      "defined_out": [
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodCallsSuper()string)",
        "Method(methodCommon()string)",
        "Method(methodMulti()string)",
        "Method(methodOne()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodOne()string)",
        "Method(methodCommon()string)"
      ]
    },
    "82": {
      "op": "pushbytes 0xf9f5142c // method \"b2CantOverride()string\"",
      "defined_out": [
        "Method(b2CantOverride()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodCallsSuper()string)",
        "Method(methodCommon()string)",
        "Method(methodMulti()string)",
        "Method(methodOne()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodOne()string)",
        "Method(methodCommon()string)",
        "Method(b2CantOverride()string)"
      ]
    },
    "88": {
      "op": "pushbytes 0x363b329e // method \"methodTwo()string\"",
      "defined_out": [
        "Method(b2CantOverride()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodCallsSuper()string)",
        "Method(methodCommon()string)",
        "Method(methodMulti()string)",
        "Method(methodOne()string)",
        "Method(methodTwo()string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodOne()string)",
        "Method(methodCommon()string)",
        "Method(b2CantOverride()string)",
        "Method(methodTwo()string)"
      ]
    },
    "94": {
      "op": "uncover 8",
      "stack_out": [
        "Method(methodMulti()string)",
        "Method(methodCallsSuper()string)",
        "Method(callB2CantOverride()string)",
        "Method(callB2Common()string)",
        "Method(methodOne()string)",
        "Method(methodCommon()string)",
        "Method(b2CantOverride()string)",
        "Method(methodTwo()string)",
        "tmp%2#0"
      ]
    },
    "96": {
      "op": "match main_methodMulti_route@5 main_methodCallsSuper_route@6 main_callB2CantOverride_route@7 main_callB2Common_route@8 main_methodOne_route@9 main_methodCommon_route@10 main_b2CantOverride_route@11 main_methodTwo_route@12",
      "stack_out": []
    },
    "114": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "115": {
      "block": "main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "116": {
      "block": "main_methodTwo_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "118": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "NoOp"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "120": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "121": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "0"
      ]
    },
    "124": {
      "op": "!=",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "125": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "126": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.methodTwo",
      "op": "callsub methodTwo",
      "defined_out": [
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0"
      ]
    },
    "129": {
      "op": "dup",
      "defined_out": [
        "to_encode%7#0",
        "to_encode%7#0 (copy)"
      ],
      "stack_out": [
        "to_encode%7#0",
        "to_encode%7#0 (copy)"
      ]
    },
    "130": {
      "op": "len",
      "defined_out": [
        "length%7#0",
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0",
        "length%7#0"
      ]
    },
    "131": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0",
        "as_bytes%7#0"
      ]
    },
    "132": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%7#0",
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0",
        "length_uint16%7#0"
      ]
    },
    "135": {
      "op": "swap",
      "stack_out": [
        "length_uint16%7#0",
        "to_encode%7#0"
      ]
    },
    "136": {
      "op": "concat",
      "defined_out": [
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0"
      ]
    },
    "137": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0",
        "0x151f7c75"
      ]
    },
    "138": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ]
    },
    "139": {
      "op": "concat",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "140": {
      "op": "log",
      "stack_out": []
    },
    "141": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "142": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "145": {
      "block": "main_b2CantOverride_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "147": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "NoOp"
      ]
    },
    "148": {
      "op": "==",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "149": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "150": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "0"
      ]
    },
    "153": {
      "op": "!=",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "154": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "155": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride",
      "op": "callsub b2CantOverride",
      "defined_out": [
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0"
      ]
    },
    "158": {
      "op": "dup",
      "defined_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ],
      "stack_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ]
    },
    "159": {
      "op": "len",
      "defined_out": [
        "length%6#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length%6#0"
      ]
    },
    "160": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "as_bytes%6#0"
      ]
    },
    "161": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%6#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length_uint16%6#0"
      ]
    },
    "164": {
      "op": "swap",
      "stack_out": [
        "length_uint16%6#0",
        "to_encode%6#0"
      ]
    },
    "165": {
      "op": "concat",
      "defined_out": [
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0"
      ]
    },
    "166": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0",
        "0x151f7c75"
      ]
    },
    "167": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%6#0"
      ]
    },
    "168": {
      "op": "concat",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "169": {
      "op": "log",
      "stack_out": []
    },
    "170": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "171": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "174": {
      "block": "main_methodCommon_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "176": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "NoOp"
      ]
    },
    "177": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "0"
      ]
    },
    "182": {
      "op": "!=",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "183": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "184": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon",
      "op": "callsub methodCommon",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "187": {
      "op": "dup",
      "defined_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ],
      "stack_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ]
    },
    "188": {
      "op": "len",
      "defined_out": [
        "length%5#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length%5#0"
      ]
    },
    "189": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "as_bytes%5#0"
      ]
    },
    "190": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%5#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length_uint16%5#0"
      ]
    },
    "193": {
      "op": "swap",
      "stack_out": [
        "length_uint16%5#0",
        "to_encode%5#0"
      ]
    },
    "194": {
      "op": "concat",
      "defined_out": [
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0"
      ]
    },
    "195": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "0x151f7c75"
      ]
    },
    "196": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%5#0"
      ]
    },
    "197": {
      "op": "concat",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "198": {
      "op": "log",
      "stack_out": []
    },
    "199": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "200": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "203": {
      "block": "main_methodOne_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "205": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "NoOp"
      ]
    },
    "206": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "207": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "208": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "210": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "0"
      ]
    },
    "211": {
      "op": "!=",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "212": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "213": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::BaseOne.methodOne",
      "op": "callsub methodOne",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "216": {
      "op": "dup",
      "defined_out": [
        "to_encode%4#0",
        "to_encode%4#0 (copy)"
      ],
      "stack_out": [
        "to_encode%4#0",
        "to_encode%4#0 (copy)"
      ]
    },
    "217": {
      "op": "len",
      "defined_out": [
        "length%4#0",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "length%4#0"
      ]
    },
    "218": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "as_bytes%4#0"
      ]
    },
    "219": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%4#0",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "length_uint16%4#0"
      ]
    },
    "222": {
      "op": "swap",
      "stack_out": [
        "length_uint16%4#0",
        "to_encode%4#0"
      ]
    },
    "223": {
      "op": "concat",
      "defined_out": [
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0"
      ]
    },
    "224": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "0x151f7c75"
      ]
    },
    "225": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%4#0"
      ]
    },
    "226": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "227": {
      "op": "log",
      "stack_out": []
    },
    "228": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "229": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "232": {
      "block": "main_callB2Common_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "234": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "NoOp"
      ]
    },
    "235": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "236": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "237": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "239": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0"
      ]
    },
    "240": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "241": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "242": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::MultiBases.callB2Common",
      "op": "callsub callB2Common",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "245": {
      "op": "dup",
      "defined_out": [
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ],
      "stack_out": [
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ]
    },
    "246": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "length%3#0"
      ]
    },
    "247": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "as_bytes%3#0"
      ]
    },
    "248": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "length_uint16%3#0"
      ]
    },
    "251": {
      "op": "swap",
      "stack_out": [
        "length_uint16%3#0",
        "to_encode%3#0"
      ]
    },
    "252": {
      "op": "concat",
      "defined_out": [
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0"
      ]
    },
    "253": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "0x151f7c75"
      ]
    },
    "254": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ]
    },
    "255": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "256": {
      "op": "log",
      "stack_out": []
    },
    "257": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "258": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "261": {
      "block": "main_callB2CantOverride_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "263": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "NoOp"
      ]
    },
    "264": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "265": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "266": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "268": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "269": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "270": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "271": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::MultiBases.callB2CantOverride",
      "op": "callsub callB2CantOverride",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "274": {
      "op": "dup",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "275": {
      "op": "len",
      "defined_out": [
        "length%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length%2#0"
      ]
    },
    "276": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "as_bytes%2#0"
      ]
    },
    "277": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length_uint16%2#0"
      ]
    },
    "280": {
      "op": "swap",
      "stack_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ]
    },
    "281": {
      "op": "concat",
      "defined_out": [
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0"
      ]
    },
    "282": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "0x151f7c75"
      ]
    },
    "283": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ]
    },
    "284": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "285": {
      "op": "log",
      "stack_out": []
    },
    "286": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "287": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "290": {
      "block": "main_methodCallsSuper_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "292": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "293": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "294": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "295": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "297": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "298": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "299": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "300": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::MultiBases.methodCallsSuper",
      "op": "callsub methodCallsSuper",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "303": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "304": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%1#0"
      ]
    },
    "305": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%1#0"
      ]
    },
    "306": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%1#0"
      ]
    },
    "309": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ]
    },
    "310": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "311": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "312": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "314": {
      "op": "log",
      "stack_out": []
    },
    "315": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "316": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "319": {
      "block": "main_methodMulti_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "321": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "322": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "323": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "324": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "326": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "327": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "328": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "329": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::MultiBases.methodMulti",
      "op": "callsub methodMulti",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "332": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "333": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "334": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "335": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "338": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "339": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "340": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "341": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "342": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "343": {
      "op": "log",
      "stack_out": []
    },
    "344": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "345": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "348": {
      "block": "main_bare_routing@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "350": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0",
        "0"
      ]
    },
    "351": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%43#0"
      ]
    },
    "352": {
      "op": "match main___algots__.defaultCreate@16",
      "stack_out": []
    },
    "356": {
      "block": "main_switch_case_next@18",
      "stack_in": [],
      "op": "b main_after_if_else@19"
    },
    "359": {
      "block": "main___algots__.defaultCreate@16",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "361": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "0"
      ]
    },
    "362": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "363": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "364": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::MultiBases.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "367": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "368": {
      "op": "b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::MultiBases.__puya_arc4_router__@20"
    },
    "371": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::MultiBases.methodMulti",
      "params": {},
      "block": "methodMulti",
      "stack_in": [],
      "op": "pushbytes \"multi-bases\"",
      "defined_out": [
        "\"multi-bases\""
      ],
      "stack_out": [
        "\"multi-bases\""
      ]
    },
    "384": {
      "retsub": true,
      "op": "retsub"
    },
    "385": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::MultiBases.methodCallsSuper",
      "params": {},
      "block": "methodCallsSuper",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.methodTwo",
      "op": "callsub methodTwo",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "388": {
      "retsub": true,
      "op": "retsub"
    },
    "389": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::MultiBases.callB2CantOverride",
      "params": {},
      "block": "callB2CantOverride",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.b2CantOverride",
      "op": "callsub tests/approvals/multi-inheritance.algo.ts::BaseTwo.b2CantOverride",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "392": {
      "retsub": true,
      "op": "retsub"
    },
    "393": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::MultiBases.callB2Common",
      "params": {},
      "block": "callB2Common",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon",
      "op": "callsub methodCommon",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "396": {
      "retsub": true,
      "op": "retsub"
    },
    "397": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::BaseOne.methodOne",
      "params": {},
      "block": "methodOne",
      "stack_in": [],
      "op": "pushbytes \"base-one\"",
      "defined_out": [
        "\"base-one\""
      ],
      "stack_out": [
        "\"base-one\""
      ]
    },
    "407": {
      "retsub": true,
      "op": "retsub"
    },
    "408": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon",
      "params": {},
      "block": "methodCommon",
      "stack_in": [],
      "op": "bytec_1 // \"common\"",
      "defined_out": [
        "\"common\""
      ],
      "stack_out": [
        "\"common\""
      ]
    },
    "409": {
      "retsub": true,
      "op": "retsub"
    },
    "410": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride",
      "params": {},
      "block": "b2CantOverride",
      "stack_in": [],
      "op": "bytec_1 // \"common\"",
      "defined_out": [
        "\"common\""
      ],
      "stack_out": [
        "\"common\""
      ]
    },
    "411": {
      "retsub": true,
      "op": "retsub"
    },
    "412": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.methodTwo",
      "params": {},
      "block": "methodTwo",
      "stack_in": [],
      "op": "bytec_2 // \"base-two\"",
      "defined_out": [
        "\"base-two\""
      ],
      "stack_out": [
        "\"base-two\""
      ]
    },
    "413": {
      "retsub": true,
      "op": "retsub"
    },
    "414": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.b2CantOverride",
      "params": {},
      "block": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.b2CantOverride",
      "stack_in": [],
      "op": "bytec_2 // \"base-two\"",
      "defined_out": [
        "\"base-two\""
      ],
      "stack_out": [
        "\"base-two\""
      ]
    },
    "415": {
      "retsub": true,
      "op": "retsub"
    },
    "416": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::MultiBases.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "417": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::MultiBases.constructor",
      "params": {},
      "block": "constructor",
      "stack_in": [],
      "callsub": "polytype/lib/polytype-module.d.ts::ClusteredContract<tests/approvals/multi-inheritance.algo.ts::BaseOne,tests/approvals/multi-inheritance.algo.ts::BaseTwo>.constructor",
      "op": "callsub polytype/lib/polytype-module.d.ts::ClusteredContract<tests/approvals/multi-inheritance.algo.ts::BaseOne,tests/approvals/multi-inheritance.algo.ts::BaseTwo>.constructor"
    },
    "420": {
      "op": "pushbytes \"stateMulti\"",
      "defined_out": [
        "\"stateMulti\""
      ],
      "stack_out": [
        "\"stateMulti\""
      ]
    },
    "432": {
      "op": "pushbytes \"Hmmm\"",
      "defined_out": [
        "\"Hmmm\"",
        "\"stateMulti\""
      ],
      "stack_out": [
        "\"stateMulti\"",
        "\"Hmmm\""
      ]
    },
    "438": {
      "op": "app_global_put",
      "stack_out": []
    },
    "439": {
      "retsub": true,
      "op": "retsub"
    },
    "440": {
      "subroutine": "polytype/lib/polytype-module.d.ts::ClusteredContract<tests/approvals/multi-inheritance.algo.ts::BaseOne,tests/approvals/multi-inheritance.algo.ts::BaseTwo>.constructor",
      "params": {},
      "block": "polytype/lib/polytype-module.d.ts::ClusteredContract<tests/approvals/multi-inheritance.algo.ts::BaseOne,tests/approvals/multi-inheritance.algo.ts::BaseTwo>.constructor",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::BaseOne.constructor",
      "op": "callsub tests/approvals/multi-inheritance.algo.ts::BaseOne.constructor"
    },
    "443": {
      "callsub": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.constructor",
      "op": "callsub tests/approvals/multi-inheritance.algo.ts::BaseTwo.constructor"
    },
    "446": {
      "retsub": true,
      "op": "retsub"
    },
    "447": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::BaseOne.constructor",
      "params": {},
      "block": "tests/approvals/multi-inheritance.algo.ts::BaseOne.constructor",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor",
      "op": "callsub tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor"
    },
    "450": {
      "op": "pushbytes \"stateOne\"",
      "defined_out": [
        "\"stateOne\""
      ],
      "stack_out": [
        "\"stateOne\""
      ]
    },
    "460": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "\"stateOne\"",
        "45"
      ],
      "stack_out": [
        "\"stateOne\"",
        "45"
      ]
    },
    "462": {
      "op": "app_global_put",
      "stack_out": []
    },
    "463": {
      "retsub": true,
      "op": "retsub"
    },
    "464": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor",
      "params": {},
      "block": "tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor_after_inlined_@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor@2",
      "stack_in": [],
      "op": "pushbytes \"stateCommon\"",
      "defined_out": [
        "\"stateCommon\""
      ],
      "stack_out": [
        "\"stateCommon\""
      ]
    },
    "477": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "\"stateCommon\"",
        "123"
      ],
      "stack_out": [
        "\"stateCommon\"",
        "123"
      ]
    },
    "479": {
      "op": "app_global_put",
      "stack_out": []
    },
    "480": {
      "retsub": true,
      "op": "retsub"
    },
    "481": {
      "subroutine": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.constructor",
      "params": {},
      "block": "tests/approvals/multi-inheritance.algo.ts::BaseTwo.constructor",
      "stack_in": [],
      "callsub": "tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor",
      "op": "callsub tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor"
    },
    "484": {
      "op": "pushbytes \"stateTwo\"",
      "defined_out": [
        "\"stateTwo\""
      ],
      "stack_out": [
        "\"stateTwo\""
      ]
    },
    "494": {
      "op": "pushbytes \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "\"stateTwo\""
      ],
      "stack_out": [
        "\"stateTwo\"",
        "\"Hello\""
      ]
    },
    "501": {
      "op": "app_global_put",
      "stack_out": []
    },
    "502": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
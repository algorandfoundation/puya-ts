#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock 0x151f7c75 "common"

main_block@0:
    txn ApplicationID
    bnz main_after_if_else@2

main_if_body@1:
    callsub constructor

main_after_if_else@2:

main_block@3:
    // tests/approvals/multi-inheritance.algo.ts:18
    // export class BaseOne extends CommonBase {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@10

main_abi_routing@4:
    // tests/approvals/multi-inheritance.algo.ts:18
    // export class BaseOne extends CommonBase {
    txna ApplicationArgs 0
    pushbytes 0xc32533e3 // method "methodOne()string"
    pushbytes 0x455c8d09 // method "methodCommon()string"
    pushbytes 0xf9f5142c // method "b2CantOverride()string"
    uncover 3
    match main_methodOne_route@5 main_methodCommon_route@6 main_b2CantOverride_route@7

main_switch_case_default@8:

main_switch_case_next@9:

main_after_if_else@14:
    // tests/approvals/multi-inheritance.algo.ts:18
    // export class BaseOne extends CommonBase {
    intc_0 // 0

main_after_inlined_tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__@15:
    return

main_b2CantOverride_route@7:
    // tests/approvals/multi-inheritance.algo.ts:13
    // b2CantOverride(): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub b2CantOverride
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__@15

main_methodCommon_route@6:
    // tests/approvals/multi-inheritance.algo.ts:9
    // methodCommon() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub methodCommon
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__@15

main_methodOne_route@5:
    // tests/approvals/multi-inheritance.algo.ts:20
    // methodOne() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub methodOne
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__@15

main_bare_routing@10:
    // tests/approvals/multi-inheritance.algo.ts:18
    // export class BaseOne extends CommonBase {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@11

main_switch_case_default@12:

main_switch_case_next@13:
    b main_after_if_else@14

main___algots__.defaultCreate@11:
    // tests/approvals/multi-inheritance.algo.ts:18
    // export class BaseOne extends CommonBase {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance.algo.ts::BaseOne.__puya_arc4_router__@15


// tests/approvals/multi-inheritance.algo.ts::BaseOne.methodOne() -> bytes:
methodOne:

methodOne_block@0:
    // tests/approvals/multi-inheritance.algo.ts:21
    // return 'base-one'
    pushbytes "base-one"
    retsub


// tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon() -> bytes:
methodCommon:

methodCommon_block@0:
    // tests/approvals/multi-inheritance.algo.ts:10
    // return 'common'
    bytec_1 // "common"
    retsub


// tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride() -> bytes:
b2CantOverride:

b2CantOverride_block@0:
    // tests/approvals/multi-inheritance.algo.ts:14
    // return 'common'
    bytec_1 // "common"
    retsub


// tests/approvals/multi-inheritance.algo.ts::BaseOne.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub


// tests/approvals/multi-inheritance.algo.ts::BaseOne.constructor() -> void:
constructor:

constructor_block@0:
    // tests/approvals/multi-inheritance.algo.ts:18
    // export class BaseOne extends CommonBase {
    callsub tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor
    // tests/approvals/multi-inheritance.algo.ts:19
    // stateOne = GlobalState({ initialValue: Uint64(45) })
    pushbytes "stateOne"
    pushint 45 // 45
    app_global_put
    retsub


// tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor() -> void:
tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor:

tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor_block@0:

tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor_block@1:

tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor_after_inlined_@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor@2:
    // tests/approvals/multi-inheritance.algo.ts:7
    // stateCommon = GlobalState<uint64>({ initialValue: 123 })
    pushbytes "stateCommon"
    pushint 123 // 123
    app_global_put
    retsub

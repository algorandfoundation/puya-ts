#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 2 3
    bytecblock 0x 0x151f7c75 0x0000

main_block@0:

main_block@1:
    // tests/approvals/native-arrays.algo.ts:5
    // export class NativeArraysAlgo extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@8

main_abi_routing@2:
    // tests/approvals/native-arrays.algo.ts:5
    // export class NativeArraysAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x0f4c11ca // method "buildArray()uint64[]"
    pushbytes 0xe2d5e035 // method "buildReadonly()uint64[]"
    pushbytes 0x13a588c8 // method "doThings()void"
    uncover 3
    match main_buildArray_route@3 main_buildReadonly_route@4 main_doThings_route@5

main_switch_case_default@6:

main_switch_case_next@7:

main_after_if_else@12:
    // tests/approvals/native-arrays.algo.ts:5
    // export class NativeArraysAlgo extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__@13:
    return

main_doThings_route@5:
    // tests/approvals/native-arrays.algo.ts:15
    // doThings() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub doThings
    intc_1 // 1
    b main_after_inlined_tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__@13

main_buildReadonly_route@4:
    // tests/approvals/native-arrays.algo.ts:10
    // buildReadonly(): ReadonlyArray<uint64> {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub buildReadonly
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__@13

main_buildArray_route@3:
    // tests/approvals/native-arrays.algo.ts:6
    // buildArray(): Array<uint64> {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub buildArray
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    b main_after_inlined_tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__@13

main_bare_routing@8:
    // tests/approvals/native-arrays.algo.ts:5
    // export class NativeArraysAlgo extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@9

main_switch_case_default@10:

main_switch_case_next@11:
    b main_after_if_else@12

main___algots__.defaultCreate@9:
    // tests/approvals/native-arrays.algo.ts:5
    // export class NativeArraysAlgo extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__puya_arc4_router__@13


// tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.buildArray() -> bytes:
buildArray:

buildArray_block@0:
    // tests/approvals/native-arrays.algo.ts:7
    // return [1, 2, 3, 4]
    bytec_2 // 0x0000
    bytec_0 // 0x
    concat
    extract 2 0
    intc_1 // 1
    itob
    bytec_0 // 0x
    swap
    concat
    bytec_0 // 0x
    swap
    concat
    intc_2 // 2
    itob
    bytec_0 // 0x
    swap
    concat
    concat
    intc_3 // 3
    itob
    bytec_0 // 0x
    swap
    concat
    concat
    pushint 4 // 4
    itob
    bytec_0 // 0x
    swap
    concat
    concat
    concat
    dup
    len
    pushint 8 // 8
    /
    itob
    extract 6 2
    swap
    concat
    retsub


// tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.buildReadonly() -> bytes:
buildReadonly:

buildReadonly_block@0:
    // tests/approvals/native-arrays.algo.ts:11
    // return [1, 2, 3, 4]
    bytec_2 // 0x0000
    bytec_0 // 0x
    concat
    extract 2 0
    intc_1 // 1
    itob
    bytec_0 // 0x
    swap
    concat
    bytec_0 // 0x
    swap
    concat
    intc_2 // 2
    itob
    bytec_0 // 0x
    swap
    concat
    concat
    intc_3 // 3
    itob
    bytec_0 // 0x
    swap
    concat
    concat
    pushint 4 // 4
    itob
    bytec_0 // 0x
    swap
    concat
    concat
    concat
    dup
    len
    pushint 8 // 8
    /
    itob
    extract 6 2
    swap
    concat
    retsub


// tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.doThings() -> void:
doThings:

doThings_block@0:
    // tests/approvals/native-arrays.algo.ts:16
    // const arr = this.buildArray()
    callsub buildArray
    pop
    retsub


// tests/approvals/native-arrays.algo.ts::NativeArraysAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub

#pragma version 10
#pragma typetrack false

// tests/approvals/casting.algo.ts::CastingAlgo.approvalProgram() -> uint64:
main:
    intcblock 8 1 2 3

main_block@0:
    // tests/approvals/casting.algo.ts:8
    // const y = [1, 2, 3] as [uint64, uint64, uint64]
    intc_1 // 1
    itob
    pushbytes 0x
    swap
    concat
    intc_2 // 2
    itob
    concat
    intc_3 // 3
    itob
    concat
    // tests/approvals/casting.algo.ts:12
    // return x > y[0] * y[1] * y[2] * z[0] * z[1] * z[2]
    dup
    pushint 0 // 0
    intc_0 // 8
    extract3
    btoi
    swap
    dup
    intc_0 // 8
    dup
    extract3
    btoi
    uncover 2
    *
    swap
    pushint 16 // 16
    intc_0 // 8
    extract3
    btoi
    *
    // tests/approvals/casting.algo.ts:10
    // const z = [1 as uint64, 2 as uint64, 3 as uint64] as const
    intc_1 // 1
    // tests/approvals/casting.algo.ts:12
    // return x > y[0] * y[1] * y[2] * z[0] * z[1] * z[2]
    *
    // tests/approvals/casting.algo.ts:10
    // const z = [1 as uint64, 2 as uint64, 3 as uint64] as const
    intc_2 // 2
    // tests/approvals/casting.algo.ts:12
    // return x > y[0] * y[1] * y[2] * z[0] * z[1] * z[2]
    *
    // tests/approvals/casting.algo.ts:10
    // const z = [1 as uint64, 2 as uint64, 3 as uint64] as const
    intc_3 // 3
    // tests/approvals/casting.algo.ts:12
    // return x > y[0] * y[1] * y[2] * z[0] * z[1] * z[2]
    *
    pushint 123 // 123
    <
    return

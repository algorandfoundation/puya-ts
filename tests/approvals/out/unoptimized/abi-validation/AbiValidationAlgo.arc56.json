{
    "name": "AbiValidationAlgo",
    "structs": {},
    "methods": [
        {
            "name": "withValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "withoutValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "defaultValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "manualValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "manualValidationInConvert",
            "args": [
                {
                    "type": "byte[]",
                    "name": "rawBytes"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "manualValidationAfterConvert",
            "args": [
                {
                    "type": "byte[]",
                    "name": "rawBytes"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        34
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        158
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        250,
                        282
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        259,
                        291
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        174,
                        213,
                        347,
                        363,
                        377
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyAEAQAgAiYBBBUffHVCAABCAAAxGyMTQQB6QgAAMRkjEkQxGCMTQQBoQgAANhoAgAQmPpwzgATg4HB0gARGoNJRgATmFjLBgAT7hrwAgATA8F0QTwaOBgAoACIAHAAWABAACkIAAEIAAEIAAACIAKFC//OIAHtC/+2IAGRC/+eIAEhC/+GIADFC/9uIABVC/9VC/9UxGSMSMRgjEhBEiADaIkNCAAA2GgFJFSQSRIgAgBYoTwFQsCJDQgAANhoBiAB5FihPAVCwIkNCAAA2GgFJFSQSRIgAbRYoTwFQsCJDQgAANhoBiABmFihPAVCwIkNCAAA2GgFJI1kiCyUISwEVEkRXAgCIAFYWKE8BULAiQ0IAADYaAUkjWSILJQhLARUSRFcCAIgARBYoTwFQsCJDigEBQgAAi/8ViYoBAUIAAIv/FYmKAQFCAACL/xWJigEBQgAAi/8VJBJEi/8ViYoBAUIAAIv/FSQSRCSJigEBQgAAi/8VJBJEJIlCAACJ",
        "clear": "C0IAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}
{
    "name": "MatchExprAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testMatches",
            "args": [
                {
                    "type": "uint64",
                    "name": "x"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        160,
                        187,
                        215,
                        243,
                        270
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        34
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        93
                    ],
                    "errorMessage": "assert target is match for conditions"
                },
                {
                    "pc": [
                        66
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        39
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "x should be 5"
                },
                {
                    "pc": [
                        87
                    ],
                    "errorMessage": "x should not be 3"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAAEIBTEbIhNBACU2GgCABJN+cppMjgEAAiJDMRkiEkQxGCITRDYaAReIABsjQv/qMRkiTI4BAANC/94xGCISRIgA5iNC/9OKAQCL/0klEkRJgQMTRDEAMgMTREmBBA1ESYEGDERJJQ9EJQ5EgAIAAIAAUFcCAIv/FoAATFCAAExQUEkVJAoWVwYCTFBJIlkjEkEAkYsAVwIAIiQLJFgXJRJBAIEjRIsAIlkjEkEAcosAVwIAIiQLJFgXgQQNQQBhI0SLACJZIxJBAFKLAFcCACIkCyRYF4EGDEEAQSNEiwAiWSMSQQAyiwBXAgAiJAskWBclD0EAIiNEiwAiWSMSQQATiwBXAgAiJAskWBclDkEAAyNEiSJC//oiQv/bIkL/vCJC/5wiQv98iQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
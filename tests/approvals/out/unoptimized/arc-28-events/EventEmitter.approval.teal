#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 3 4
    bytecblock 0x 0x0b6325ed 0x388cc12d 0x00 0xa313c066
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/arc-28-events.algo.ts:13
    // class EventEmitter extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main___algots__.defaultCreate@10
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/arc-28-events.algo.ts:13
    // class EventEmitter extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    bz main_create_NoOp@8
    b main_call_NoOp@3

main_call_NoOp@3:
    // tests/approvals/arc-28-events.algo.ts:13
    // class EventEmitter extends Contract {
    txna ApplicationArgs 0
    pushbytes 0x8769b79a // method "emitSwapped(uint8,uint8)void"
    pushbytes 0xf14889d7 // method "emitCustom(string,bool)void"
    pushbytes 0xd4c97c9c // method "emitDynamicBytes(byte[],byte[])void"
    uncover 3
    match main_emitSwapped_route@4 main_emitCustom_route@5 main_emitDynamicBytes_route@6
    b main_switch_case_next@7

main_switch_case_next@7:
    b main_after_if_else@9

main_after_if_else@9:
    b main_after_if_else@11

main_after_if_else@11:
    // tests/approvals/arc-28-events.algo.ts:13
    // class EventEmitter extends Contract {
    err

main_emitDynamicBytes_route@6:
    // tests/approvals/arc-28-events.algo.ts:40
    // emitDynamicBytes(x: bytes, y: DynamicBytes) {
    callsub emitDynamicBytes
    b main_switch_case_next@7

main_emitCustom_route@5:
    // tests/approvals/arc-28-events.algo.ts:35
    // emitCustom(arg0: string, arg1: boolean) {
    callsub emitCustom
    b main_switch_case_next@7

main_emitSwapped_route@4:
    // tests/approvals/arc-28-events.algo.ts:14
    // emitSwapped(a: Uint8, b: Uint8) {
    callsub emitSwapped
    b main_switch_case_next@7

main_create_NoOp@8:
    b main_after_if_else@9

main___algots__.defaultCreate@10:
    // tests/approvals/arc-28-events.algo.ts:13
    // class EventEmitter extends Contract {
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    return


// tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped[routing]() -> void:
emitSwapped:
    b emitSwapped_block@0

emitSwapped_block@0:
    // tests/approvals/arc-28-events.algo.ts:14
    // emitSwapped(a: Uint8, b: Uint8) {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped
    intc_1 // 1
    return


// tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom[routing]() -> void:
emitCustom:
    b emitCustom_block@0

emitCustom_block@0:
    // tests/approvals/arc-28-events.algo.ts:35
    // emitCustom(arg0: string, arg1: boolean) {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    intc_0 // 0
    getbit
    callsub tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom
    intc_1 // 1
    return


// tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes[routing]() -> void:
emitDynamicBytes:
    b emitDynamicBytes_block@0

emitDynamicBytes_block@0:
    // tests/approvals/arc-28-events.algo.ts:40
    // emitDynamicBytes(x: bytes, y: DynamicBytes) {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    callsub tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes
    intc_1 // 1
    return


// tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped(a: bytes, b: bytes) -> void:
tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped:
    // tests/approvals/arc-28-events.algo.ts:14
    // emitSwapped(a: Uint8, b: Uint8) {
    proto 2 0
    b tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped_block@0

tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped_block@0:
    // tests/approvals/arc-28-events.algo.ts:15
    // emit<Swapped>({ a: b, b: a })
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -2
    concat
    bytec_1 // method "Swapped(uint8,uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:17
    // const x: Swapped = { a: b, b: a }
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -2
    concat
    // tests/approvals/arc-28-events.algo.ts:18
    // emit(x)
    bytec_1 // method "Swapped(uint8,uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:20-23
    // const y = new SwappedArc4({
    //   a: b,
    //   b: a,
    // })
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -2
    concat
    // tests/approvals/arc-28-events.algo.ts:24
    // emit(y)
    pushbytes 0x441e2cd8 // method "SwappedArc4(uint8,uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:26
    // emit('Swapped', b, a)
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -2
    concat
    bytec_1 // method "Swapped(uint8,uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:28
    // emit('Swapped(uint8,uint8)', b, a)
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -2
    concat
    bytec_1 // method "Swapped(uint8,uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:29
    // emit('Swapped((uint8,uint8),uint8)', [b, b] as const, a)
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -1
    concat
    bytec_0 // 0x
    uncover 1
    concat
    frame_dig -2
    concat
    bytec_2 // method "Swapped((uint8,uint8),uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:31
    // emit('Swapped((uint8,uint8),uint8)', [b, b], a)
    bytec_0 // 0x
    frame_dig -1
    concat
    frame_dig -1
    concat
    bytec_0 // 0x
    uncover 1
    concat
    frame_dig -2
    concat
    bytec_2 // method "Swapped((uint8,uint8),uint8)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:32
    // emit('Swapped(uint8[],uint8)', [b, b], a)
    pushint 2 // 2
    itob
    extract 6 2
    frame_dig -1
    concat
    frame_dig -1
    concat
    intc_2 // 3
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    frame_dig -2
    concat
    uncover 1
    concat
    pushbytes 0x08754e0c // method "Swapped(uint8[],uint8)"
    uncover 1
    concat
    log
    retsub


// tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom(arg0: bytes, arg1: uint64) -> void:
tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom:
    // tests/approvals/arc-28-events.algo.ts:35
    // emitCustom(arg0: string, arg1: boolean) {
    proto 2 0
    b tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom_block@0

tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom_block@0:
    // tests/approvals/arc-28-events.algo.ts:36
    // emit('Custom', arg0, arg1)
    frame_dig -2
    len
    itob
    extract 6 2
    frame_dig -2
    concat
    bytec_3 // 0x00
    intc_0 // 0
    frame_dig -1
    setbit
    intc_2 // 3
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    bytec 4 // method "Custom(string,bool)"
    uncover 1
    concat
    log
    // tests/approvals/arc-28-events.algo.ts:37
    // emit('Custom(string,bool)', arg0, arg1)
    frame_dig -2
    len
    itob
    extract 6 2
    frame_dig -2
    concat
    bytec_3 // 0x00
    intc_0 // 0
    frame_dig -1
    setbit
    intc_2 // 3
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    bytec 4 // method "Custom(string,bool)"
    uncover 1
    concat
    log
    retsub


// tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes(x: bytes, y: bytes) -> void:
tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes:
    // tests/approvals/arc-28-events.algo.ts:40
    // emitDynamicBytes(x: bytes, y: DynamicBytes) {
    proto 2 0
    b tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes_block@0

tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes_block@0:
    // tests/approvals/arc-28-events.algo.ts:42
    // emit('DB(byte[],byte[])', x, y)
    frame_dig -2
    len
    itob
    extract 6 2
    frame_dig -2
    concat
    intc_3 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    uncover 1
    concat
    cover 1
    dup
    len
    intc_3 // 4
    +
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    uncover 1
    concat
    frame_dig -1
    concat
    pushbytes 0x4524e1dd // method "DB(byte[],byte[])"
    uncover 1
    concat
    log
    retsub


// tests/approvals/arc-28-events.algo.ts::EventEmitter.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/arc-28-events.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAYA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;AAwBE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxBF;;;AAAA;;;AAAA;;;AAwBE;;;AAAA;;;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnBF;;;AAAA;;;AAAA;;;;AAAA;AAmBE;;;AAAA;;;;AAlBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADF;;;AAAA;;;AACE;;;AAAA;;;;AADF;;AAAA;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AACE;;;AACgB;AAAA;;AAAA;AAAA;;AAAA;AAAd;AAAA;AAAA;AAAA;AAEM;;AAAA;;AAAA;AACD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAEU;AAAA;;AAAA;AAAA;;AAAA;AAIV;;;;;;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACsC;AAAA;;AAAA;AAAA;;AAAA;AAAtC;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;;AAGF;;;AACiB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAM;AAAA;AAAA;;AAAA;AAArB;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAM;AAAA;AAAA;;AAAA;AAAlC;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGF;;;AAC4B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA1B;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 3 4"
    },
    "7": {
      "op": "bytecblock 0x 0x0b6325ed 0x00 0xa313c066"
    },
    "22": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "24": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "25": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "26": {
      "op": "bz main_bare_routing@8",
      "stack_out": []
    },
    "29": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "32": {
      "op": "pushbytes 0x8769b79a // method \"emitSwapped(uint8,uint8)void\"",
      "defined_out": [
        "Method(emitSwapped(uint8,uint8)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(emitSwapped(uint8,uint8)void)"
      ]
    },
    "38": {
      "op": "pushbytes 0xf14889d7 // method \"emitCustom(string,bool)void\"",
      "defined_out": [
        "Method(emitCustom(string,bool)void)",
        "Method(emitSwapped(uint8,uint8)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(emitSwapped(uint8,uint8)void)",
        "Method(emitCustom(string,bool)void)"
      ]
    },
    "44": {
      "op": "pushbytes 0xd4c97c9c // method \"emitDynamicBytes(byte[],byte[])void\"",
      "defined_out": [
        "Method(emitCustom(string,bool)void)",
        "Method(emitDynamicBytes(byte[],byte[])void)",
        "Method(emitSwapped(uint8,uint8)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(emitSwapped(uint8,uint8)void)",
        "Method(emitCustom(string,bool)void)",
        "Method(emitDynamicBytes(byte[],byte[])void)"
      ]
    },
    "50": {
      "op": "uncover 3",
      "stack_out": [
        "Method(emitSwapped(uint8,uint8)void)",
        "Method(emitCustom(string,bool)void)",
        "Method(emitDynamicBytes(byte[],byte[])void)",
        "tmp%2#0"
      ]
    },
    "52": {
      "op": "match main_emitSwapped_route@3 main_emitCustom_route@4 main_emitDynamicBytes_route@5",
      "stack_out": []
    },
    "60": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "61": {
      "block": "main_after_inlined_tests/approvals/arc-28-events.algo.ts::EventEmitter.__puya_arc4_router__@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "62": {
      "block": "main_emitDynamicBytes_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "64": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "NoOp"
      ]
    },
    "65": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "66": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "67": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "70": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "71": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "72": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "75": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "78": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "81": {
      "callsub": "tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes",
      "op": "callsub emitDynamicBytes",
      "stack_out": []
    },
    "84": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "85": {
      "op": "b main_after_inlined_tests/approvals/arc-28-events.algo.ts::EventEmitter.__puya_arc4_router__@13"
    },
    "88": {
      "block": "main_emitCustom_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "90": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "91": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "92": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "93": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "95": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "96": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "97": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "98": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "101": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "104": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "107": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "reinterpret_bytes[1]%2#0",
        "0"
      ]
    },
    "108": {
      "op": "getbit",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "109": {
      "callsub": "tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom",
      "op": "callsub emitCustom",
      "stack_out": []
    },
    "112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "b main_after_inlined_tests/approvals/arc-28-events.algo.ts::EventEmitter.__puya_arc4_router__@13"
    },
    "116": {
      "block": "main_emitSwapped_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "118": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "120": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "121": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "124": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "125": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "126": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "129": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "132": {
      "callsub": "tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped",
      "op": "callsub emitSwapped",
      "stack_out": []
    },
    "135": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "136": {
      "op": "b main_after_inlined_tests/approvals/arc-28-events.algo.ts::EventEmitter.__puya_arc4_router__@13"
    },
    "139": {
      "block": "main_bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "141": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0"
      ]
    },
    "142": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%21#0"
      ]
    },
    "143": {
      "op": "match main___algots__.defaultCreate@9",
      "stack_out": []
    },
    "147": {
      "block": "main_switch_case_next@11",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "150": {
      "block": "main___algots__.defaultCreate@9",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "153": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "154": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "155": {
      "callsub": "tests/approvals/arc-28-events.algo.ts::EventEmitter.__algots__.defaultCreate",
      "op": "callsub __algots__.defaultCreate"
    },
    "158": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "159": {
      "op": "b main_after_inlined_tests/approvals/arc-28-events.algo.ts::EventEmitter.__puya_arc4_router__@13"
    },
    "162": {
      "subroutine": "tests/approvals/arc-28-events.algo.ts::EventEmitter.emitSwapped",
      "params": {
        "a#0": "bytes",
        "b#0": "bytes"
      },
      "block": "emitSwapped",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "165": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "166": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "b#0 (copy)"
      ],
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "168": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "169": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "a#0 (copy)"
      ]
    },
    "171": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "172": {
      "op": "bytec_1 // method \"Swapped(uint8,uint8)\"",
      "defined_out": [
        "Method(Swapped(uint8,uint8))",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "Method(Swapped(uint8,uint8))"
      ]
    },
    "173": {
      "op": "swap",
      "stack_out": [
        "Method(Swapped(uint8,uint8))",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "174": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "175": {
      "op": "log",
      "stack_out": []
    },
    "176": {
      "op": "frame_dig -1",
      "defined_out": [
        "x.a#0"
      ],
      "stack_out": [
        "x.a#0"
      ]
    },
    "178": {
      "op": "frame_dig -2",
      "defined_out": [
        "x.a#0",
        "x.b#0"
      ],
      "stack_out": [
        "x.a#0",
        "x.b#0"
      ]
    },
    "180": {
      "op": "swap",
      "stack_out": [
        "x.b#0",
        "x.a#0"
      ]
    },
    "181": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "x.b#0",
        "x.a#0",
        "0x"
      ]
    },
    "182": {
      "op": "swap",
      "stack_out": [
        "x.b#0",
        "0x",
        "x.a#0"
      ]
    },
    "183": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "x.b#0"
      ],
      "stack_out": [
        "x.b#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "184": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "x.b#0"
      ]
    },
    "185": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0"
      ]
    },
    "186": {
      "op": "bytec_1 // method \"Swapped(uint8,uint8)\"",
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "Method(Swapped(uint8,uint8))"
      ]
    },
    "187": {
      "op": "swap",
      "stack_out": [
        "Method(Swapped(uint8,uint8))",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "188": {
      "op": "concat",
      "defined_out": [
        "event%1#0"
      ],
      "stack_out": [
        "event%1#0"
      ]
    },
    "189": {
      "op": "log",
      "stack_out": []
    },
    "190": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "191": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "193": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "194": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "a#0 (copy)"
      ]
    },
    "196": {
      "op": "concat",
      "defined_out": [
        "y#0"
      ],
      "stack_out": [
        "y#0"
      ]
    },
    "197": {
      "op": "pushbytes 0x441e2cd8 // method \"SwappedArc4(uint8,uint8)\"",
      "defined_out": [
        "Method(SwappedArc4(uint8,uint8))",
        "y#0"
      ],
      "stack_out": [
        "y#0",
        "Method(SwappedArc4(uint8,uint8))"
      ]
    },
    "203": {
      "op": "swap",
      "stack_out": [
        "Method(SwappedArc4(uint8,uint8))",
        "y#0"
      ]
    },
    "204": {
      "op": "concat",
      "defined_out": [
        "event%2#0"
      ],
      "stack_out": [
        "event%2#0"
      ]
    },
    "205": {
      "op": "log",
      "stack_out": []
    },
    "206": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "207": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "209": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0"
      ]
    },
    "210": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "a#0 (copy)"
      ]
    },
    "212": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%11#0"
      ]
    },
    "213": {
      "op": "bytec_1 // method \"Swapped(uint8,uint8)\"",
      "stack_out": [
        "encoded_tuple_buffer%11#0",
        "Method(Swapped(uint8,uint8))"
      ]
    },
    "214": {
      "op": "swap",
      "stack_out": [
        "Method(Swapped(uint8,uint8))",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "215": {
      "op": "concat",
      "defined_out": [
        "event%3#0"
      ],
      "stack_out": [
        "event%3#0"
      ]
    },
    "216": {
      "op": "log",
      "stack_out": []
    },
    "217": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "218": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%13#0"
      ]
    },
    "221": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%13#0",
        "a#0 (copy)"
      ]
    },
    "223": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%14#0"
      ]
    },
    "224": {
      "op": "bytec_1 // method \"Swapped(uint8,uint8)\"",
      "stack_out": [
        "encoded_tuple_buffer%14#0",
        "Method(Swapped(uint8,uint8))"
      ]
    },
    "225": {
      "op": "swap",
      "stack_out": [
        "Method(Swapped(uint8,uint8))",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "226": {
      "op": "concat",
      "defined_out": [
        "event%4#0"
      ],
      "stack_out": [
        "event%4#0"
      ]
    },
    "227": {
      "op": "log",
      "stack_out": []
    },
    "228": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "229": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "231": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%16#0"
      ]
    },
    "232": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_tuple_buffer%16#0",
        "b#0 (copy)"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%17#0"
      ]
    },
    "235": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "encoded_tuple_buffer%17#0",
        "0x"
      ]
    },
    "236": {
      "op": "swap",
      "stack_out": [
        "0x",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "237": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%19#0"
      ]
    },
    "238": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%19#0",
        "a#0 (copy)"
      ]
    },
    "240": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%20#0"
      ]
    },
    "241": {
      "op": "pushbytes 0x388cc12d // method \"Swapped((uint8,uint8),uint8)\"",
      "defined_out": [
        "Method(Swapped((uint8,uint8),uint8))",
        "encoded_tuple_buffer%20#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%20#0",
        "Method(Swapped((uint8,uint8),uint8))"
      ]
    },
    "247": {
      "op": "swap",
      "stack_out": [
        "Method(Swapped((uint8,uint8),uint8))",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "248": {
      "op": "concat",
      "defined_out": [
        "event%5#0"
      ],
      "stack_out": [
        "event%5#0"
      ]
    },
    "249": {
      "op": "log",
      "stack_out": []
    },
    "250": {
      "retsub": true,
      "op": "retsub"
    },
    "251": {
      "subroutine": "tests/approvals/arc-28-events.algo.ts::EventEmitter.emitCustom",
      "params": {
        "arg0#0": "bytes",
        "arg1#0": "uint64"
      },
      "block": "emitCustom",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "254": {
      "op": "frame_dig -2",
      "defined_out": [
        "arg0#0 (copy)"
      ],
      "stack_out": [
        "arg0#0 (copy)"
      ]
    },
    "256": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "257": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "258": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "261": {
      "op": "frame_dig -2",
      "stack_out": [
        "length_uint16%0#0",
        "arg0#0 (copy)"
      ]
    },
    "263": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "264": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x00"
      ]
    },
    "265": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x00",
        "0"
      ]
    },
    "266": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "0x00",
        "arg1#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x00",
        "0",
        "arg1#0 (copy)"
      ]
    },
    "268": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0"
      ]
    },
    "269": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "encoded_bool%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "3"
      ]
    },
    "270": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_bool%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "as_bytes%1#0"
      ]
    },
    "271": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "offset_as_uint16%0#0"
      ]
    },
    "274": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "offset_as_uint16%0#0",
        "0x"
      ]
    },
    "275": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "0x",
        "offset_as_uint16%0#0"
      ]
    },
    "276": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "277": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "encoded_bool%0#0"
      ]
    },
    "278": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "279": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "280": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "281": {
      "op": "bytec_3 // method \"Custom(string,bool)\"",
      "defined_out": [
        "Method(Custom(string,bool))",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "Method(Custom(string,bool))"
      ]
    },
    "282": {
      "op": "swap",
      "stack_out": [
        "Method(Custom(string,bool))",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "283": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "284": {
      "op": "log",
      "stack_out": []
    },
    "285": {
      "op": "frame_dig -2",
      "stack_out": [
        "arg0#0 (copy)"
      ]
    },
    "287": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "288": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0"
      ],
      "stack_out": [
        "as_bytes%2#0"
      ]
    },
    "289": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0"
      ],
      "stack_out": [
        "length_uint16%1#0"
      ]
    },
    "292": {
      "op": "frame_dig -2",
      "stack_out": [
        "length_uint16%1#0",
        "arg0#0 (copy)"
      ]
    },
    "294": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "295": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "encoded_value%1#0",
        "0x00"
      ]
    },
    "296": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_value%1#0",
        "0x00",
        "0"
      ]
    },
    "297": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_value%1#0",
        "0x00",
        "0",
        "arg1#0 (copy)"
      ]
    },
    "299": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0"
      ]
    },
    "300": {
      "op": "intc_2 // 3",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0",
        "3"
      ]
    },
    "301": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "encoded_bool%1#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0",
        "as_bytes%3#0"
      ]
    },
    "302": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_bool%1#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "305": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0",
        "offset_as_uint16%1#0",
        "0x"
      ]
    },
    "306": {
      "op": "swap",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0",
        "0x",
        "offset_as_uint16%1#0"
      ]
    },
    "307": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_bool%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "308": {
      "op": "swap",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_bool%1#0"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "310": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ]
    },
    "311": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "312": {
      "op": "bytec_3 // method \"Custom(string,bool)\"",
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "Method(Custom(string,bool))"
      ]
    },
    "313": {
      "op": "swap",
      "stack_out": [
        "Method(Custom(string,bool))",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "314": {
      "op": "concat",
      "defined_out": [
        "event%1#0"
      ],
      "stack_out": [
        "event%1#0"
      ]
    },
    "315": {
      "op": "log",
      "stack_out": []
    },
    "316": {
      "retsub": true,
      "op": "retsub"
    },
    "317": {
      "subroutine": "tests/approvals/arc-28-events.algo.ts::EventEmitter.emitDynamicBytes",
      "params": {
        "x#0": "bytes",
        "y#0": "bytes"
      },
      "block": "emitDynamicBytes",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "320": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "x#0 (copy)"
      ]
    },
    "322": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "323": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "324": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "327": {
      "op": "frame_dig -2",
      "stack_out": [
        "length_uint16%0#0",
        "x#0 (copy)"
      ]
    },
    "329": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "330": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "4"
      ]
    },
    "331": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "332": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_value%0#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "offset_as_uint16%0#0"
      ]
    },
    "335": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "encoded_value%0#0",
        "offset_as_uint16%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "offset_as_uint16%0#0",
        "0x"
      ]
    },
    "336": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "0x",
        "offset_as_uint16%0#0"
      ]
    },
    "337": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "338": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ]
    },
    "339": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "340": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "data_length%0#0"
      ]
    },
    "341": {
      "op": "intc_3 // 4",
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "data_length%0#0",
        "4"
      ]
    },
    "342": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "current_tail_offset%1#0"
      ]
    },
    "343": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "as_bytes%2#0"
      ]
    },
    "344": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "encoded_value%0#0",
        "offset_as_uint16%1#0"
      ]
    },
    "347": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "offset_as_uint16%1#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "349": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "351": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "352": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "353": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "y#0 (copy)"
      ]
    },
    "355": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "356": {
      "op": "pushbytes 0x4524e1dd // method \"DB(byte[],byte[])\"",
      "defined_out": [
        "Method(DB(byte[],byte[]))",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "Method(DB(byte[],byte[]))"
      ]
    },
    "362": {
      "op": "swap",
      "stack_out": [
        "Method(DB(byte[],byte[]))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "363": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "364": {
      "op": "log",
      "stack_out": []
    },
    "365": {
      "retsub": true,
      "op": "retsub"
    },
    "366": {
      "subroutine": "tests/approvals/arc-28-events.algo.ts::EventEmitter.__algots__.defaultCreate",
      "params": {},
      "block": "__algots__.defaultCreate",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}
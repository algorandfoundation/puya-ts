#pragma version 10
#pragma typetrack false

// tests/approvals/box-proxies.algo.ts::BoxContract.approvalProgram() -> uint64:
main:
    intcblock 0 4 2 1
    bytecblock 0x "A" "a" "abc" 0xffffffff "one" "two" "three"

main_block@0:
    // tests/approvals/box-proxies.algo.ts:102
    // if (Txn.applicationId.id !== 0) {
    txn ApplicationID
    intc_0 // 0
    !=
    bz main_after_if_else@2

main_if_body@1:
    // tests/approvals/box-proxies.algo.ts:97
    // boxOne = Box<[string, bytes]>({ key: 'one' })
    bytec 5 // "one"
    // tests/approvals/box-proxies.algo.ts:103
    // testBox(this.boxOne, 'aaaaaargh')
    pushbytes "aaaaaargh"
    callsub testBox
    // tests/approvals/box-proxies.algo.ts:105
    // testBoxMap(this.boxMapTwo, 'what?', itob(256456))
    pushint 256456 // 256456
    itob
    // tests/approvals/box-proxies.algo.ts:98
    // boxMapTwo = BoxMap<string, bytes>({ keyPrefix: 'two' })
    bytec 6 // "two"
    // tests/approvals/box-proxies.algo.ts:105
    // testBoxMap(this.boxMapTwo, 'what?', itob(256456))
    pushbytes "what?"
    uncover 2
    callsub testBoxMap
    // tests/approvals/box-proxies.algo.ts:99
    // boxRefThree = BoxRef({ key: 'three' })
    bytec 7 // "three"
    // tests/approvals/box-proxies.algo.ts:107
    // testBoxRef(this.boxRefThree, 99)
    pushint 99 // 99
    callsub testBoxRef

main_after_if_else@2:
    // tests/approvals/box-proxies.algo.ts:109
    // return true
    intc_3 // 1
    return


// tests/approvals/box-proxies.algo.ts::testBox(box: bytes, str: bytes) -> void:
testBox:
    // tests/approvals/box-proxies.algo.ts:7
    // function testBox(box: Box<[string, bytes]>, str: string) {
    proto 2 0
    intc_0 // 0
    dupn 14
    bytec_0 // ""
    dupn 8

testBox_block@0:
    // tests/approvals/box-proxies.algo.ts:8
    // const value: [string, bytes] = [str, Bytes('a')]
    frame_dig -1
    dupn 2
    len
    itob
    extract 6 2
    dig 1
    concat
    bytec_2 // "a"
    len
    itob
    extract 6 2
    bytec_2 // "a"
    concat
    swap
    // tests/approvals/box-proxies.algo.ts:9
    // box.value = value
    intc_1 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    intc_1 // 4
    +
    itob
    extract 6 2
    concat
    swap
    concat
    swap
    concat
    frame_dig -2
    box_del
    pop
    frame_dig -2
    swap
    box_put
    // tests/approvals/box-proxies.algo.ts:8
    // const value: [string, bytes] = [str, Bytes('a')]
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_2 // "a"
    len
    itob
    extract 6 2
    bytec_2 // "a"
    concat
    swap
    // tests/approvals/box-proxies.algo.ts:10
    // boxA.value = value
    intc_1 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    intc_1 // 4
    +
    itob
    extract 6 2
    concat
    swap
    concat
    swap
    concat
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:10
    // boxA.value = value
    box_del
    pop
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:10
    // boxA.value = value
    swap
    box_put
    // tests/approvals/box-proxies.algo.ts:12
    // assert(box.key === Bytes('one'))
    frame_dig -2
    bytec 5 // "one"
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:13
    // assert(boxA.key === Bytes('A'))
    bytec_1 // "A"
    dup
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    frame_dig -2
    box_get
    dup
    cover 2
    cover 2
    swap
    bz testBox_ternary_false@2

testBox_ternary_true@1:
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    frame_dig 26
    dup
    intc_0 // 0
    extract_uint16
    swap
    dup
    intc_2 // 2
    extract_uint16
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    frame_bury 7

testBox_ternary_merge@3:
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    frame_dig 25
    assert // Box must have value
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    box_get
    dup
    cover 2
    frame_bury 15
    frame_bury 0
    bz testBox_ternary_false@5

testBox_ternary_true@4:
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    frame_dig 0
    dup
    intc_0 // 0
    extract_uint16
    swap
    dup
    intc_2 // 2
    extract_uint16
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0

testBox_ternary_merge@6:
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    frame_dig 15
    assert // Box must have value
    frame_dig 7
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    frame_dig -2
    box_get
    dup
    cover 2
    frame_bury 20
    frame_bury 1
    bz testBox_ternary_false@8

testBox_ternary_true@7:
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    frame_dig 1
    dup
    intc_2 // 2
    extract_uint16
    swap
    dup
    len
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    frame_bury 9

testBox_ternary_merge@9:
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    frame_dig 20
    assert // Box must have value
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    box_get
    dup
    cover 2
    frame_bury 21
    frame_bury 2
    bz testBox_ternary_false@11

testBox_ternary_true@10:
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    frame_dig 2
    dup
    intc_2 // 2
    extract_uint16
    swap
    dup
    len
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0

testBox_ternary_merge@12:
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    frame_dig 21
    assert // Box must have value
    frame_dig 9
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:18
    // assert(box.exists && boxA.exists)
    frame_dig -2
    box_len
    bury 1
    bz testBox_bool_false@15

testBox_and_contd@13:
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:18
    // assert(box.exists && boxA.exists)
    box_len
    bury 1
    bz testBox_bool_false@15

testBox_bool_true@14:
    intc_3 // 1

testBox_bool_merge@16:
    // tests/approvals/box-proxies.algo.ts:18
    // assert(box.exists && boxA.exists)
    assert
    // tests/approvals/box-proxies.algo.ts:20
    // assert(box.length)
    frame_dig -2
    box_len
    assert // Box must have value
    assert
    // tests/approvals/box-proxies.algo.ts:22
    // assert(box.delete(), 'delete failed')
    frame_dig -2
    box_del
    assert // delete failed
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:23
    // const isBoxADeleted = boxA.delete()
    box_del
    // tests/approvals/box-proxies.algo.ts:24
    // assert(isBoxADeleted, 'delete failed')
    assert // delete failed
    // tests/approvals/box-proxies.algo.ts:25
    // assert(!box.exists && !boxA.exists)
    frame_dig -2
    box_len
    bury 1
    bnz testBox_bool_false@19

testBox_and_contd@17:
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:25
    // assert(!box.exists && !boxA.exists)
    box_len
    bury 1
    bnz testBox_bool_false@19

testBox_bool_true@18:
    intc_3 // 1

testBox_bool_merge@20:
    // tests/approvals/box-proxies.algo.ts:25
    // assert(!box.exists && !boxA.exists)
    assert
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    box_get
    dup
    cover 2
    frame_bury 22
    frame_bury 3
    bz testBox_ternary_false@22

testBox_ternary_true@21:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 3
    dup
    intc_0 // 0
    extract_uint16
    swap
    dup
    intc_2 // 2
    extract_uint16
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    frame_bury 10

testBox_ternary_merge@23:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 22
    bz testBox_ternary_false@25

testBox_ternary_true@24:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 10
    frame_bury 11

testBox_ternary_merge@26:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig -2
    box_get
    dup
    cover 2
    frame_bury 23
    frame_bury 4
    bz testBox_ternary_false@28

testBox_ternary_true@27:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 4
    dup
    intc_0 // 0
    extract_uint16
    swap
    dup
    intc_2 // 2
    extract_uint16
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    frame_bury 12

testBox_ternary_merge@29:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 23
    bz testBox_ternary_false@31

testBox_ternary_true@30:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 12

testBox_ternary_merge@32:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_dig 11
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:6
    // const boxA = Box<[string, bytes]>({ key: Bytes('A') })
    bytec_1 // "A"
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    box_get
    dup
    cover 2
    frame_bury 16
    frame_bury 5
    bz testBox_ternary_false@34

testBox_ternary_true@33:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 5
    dup
    intc_2 // 2
    extract_uint16
    swap
    dup
    len
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    frame_bury 13

testBox_ternary_merge@35:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 16
    bz testBox_ternary_false@37

testBox_ternary_true@36:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 13
    frame_bury 14

testBox_ternary_merge@38:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig -2
    box_get
    dup
    cover 2
    frame_bury 17
    frame_bury 6
    bz testBox_ternary_false@40

testBox_ternary_true@39:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 6
    dup
    intc_2 // 2
    extract_uint16
    swap
    dup
    len
    swap
    uncover 2
    uncover 2
    substring3
    extract 2 0
    frame_bury 8

testBox_ternary_merge@41:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 17
    bz testBox_ternary_false@43

testBox_ternary_true@42:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 8

testBox_ternary_merge@44:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_dig 14
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:31
    // let [, e] = box.maybe()
    frame_dig -2
    box_get
    dup
    cover 2
    frame_bury 18
    pop
    bz testBox_ternary_false@46

testBox_ternary_true@45:

testBox_ternary_merge@47:
    // tests/approvals/box-proxies.algo.ts:31
    // let [, e] = box.maybe()
    frame_dig 18
    // tests/approvals/box-proxies.algo.ts:32
    // assert(!e)
    !
    assert
    // tests/approvals/box-proxies.algo.ts:8
    // const value: [string, bytes] = [str, Bytes('a')]
    frame_dig 24
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_2 // "a"
    len
    itob
    extract 6 2
    bytec_2 // "a"
    concat
    swap
    // tests/approvals/box-proxies.algo.ts:33
    // box.value = value
    intc_1 // 4
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    intc_1 // 4
    +
    itob
    extract 6 2
    concat
    swap
    concat
    swap
    concat
    frame_dig -2
    box_del
    pop
    frame_dig -2
    swap
    box_put
    // tests/approvals/box-proxies.algo.ts:34
    // ;[, e] = box.maybe()
    frame_dig -2
    box_get
    dup
    cover 2
    frame_bury 19
    pop
    bz testBox_ternary_false@49

testBox_ternary_true@48:

testBox_ternary_merge@50:
    // tests/approvals/box-proxies.algo.ts:34
    // ;[, e] = box.maybe()
    frame_dig 19
    // tests/approvals/box-proxies.algo.ts:35
    // assert(e)
    assert
    retsub

testBox_ternary_false@49:
    b testBox_ternary_merge@50

testBox_ternary_false@46:
    b testBox_ternary_merge@47

testBox_ternary_false@43:
    // tests/approvals/box-proxies.algo.ts:27
    // const defaultVal: [string, bytes] = ['O', Bytes('0')]
    pushbytes "0"
    b testBox_ternary_merge@44

testBox_ternary_false@40:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    intc_0 // 0
    frame_bury 8
    b testBox_ternary_merge@41

testBox_ternary_false@37:
    // tests/approvals/box-proxies.algo.ts:27
    // const defaultVal: [string, bytes] = ['O', Bytes('0')]
    pushbytes "0"
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    frame_bury 14
    b testBox_ternary_merge@38

testBox_ternary_false@34:
    // tests/approvals/box-proxies.algo.ts:29
    // assert(boxA.get({ default: defaultVal })[1] === box.get({ default: defaultVal })[1])
    intc_0 // 0
    frame_bury 13
    b testBox_ternary_merge@35

testBox_ternary_false@31:
    // tests/approvals/box-proxies.algo.ts:27
    // const defaultVal: [string, bytes] = ['O', Bytes('0')]
    pushbytes "O"
    b testBox_ternary_merge@32

testBox_ternary_false@28:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    intc_0 // 0
    frame_bury 12
    b testBox_ternary_merge@29

testBox_ternary_false@25:
    // tests/approvals/box-proxies.algo.ts:27
    // const defaultVal: [string, bytes] = ['O', Bytes('0')]
    pushbytes "O"
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    frame_bury 11
    b testBox_ternary_merge@26

testBox_ternary_false@22:
    // tests/approvals/box-proxies.algo.ts:28
    // assert(boxA.get({ default: defaultVal })[0] === box.get({ default: defaultVal })[0])
    intc_0 // 0
    frame_bury 10
    b testBox_ternary_merge@23

testBox_bool_false@19:
    intc_0 // 0
    b testBox_bool_merge@20

testBox_bool_false@15:
    intc_0 // 0
    b testBox_bool_merge@16

testBox_ternary_false@11:
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    intc_0 // 0
    b testBox_ternary_merge@12

testBox_ternary_false@8:
    // tests/approvals/box-proxies.algo.ts:16
    // assert(box.value[1] === boxA.value[1])
    intc_0 // 0
    frame_bury 9
    b testBox_ternary_merge@9

testBox_ternary_false@5:
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    intc_0 // 0
    b testBox_ternary_merge@6

testBox_ternary_false@2:
    // tests/approvals/box-proxies.algo.ts:15
    // assert(box.value[0] === boxA.value[0])
    intc_0 // 0
    frame_bury 7
    b testBox_ternary_merge@3


// tests/approvals/box-proxies.algo.ts::testBoxMap(box: bytes, key: bytes, value: bytes) -> void:
testBoxMap:
    // tests/approvals/box-proxies.algo.ts:40
    // function testBoxMap(box: BoxMap<string, bytes>, key: string, value: bytes) {
    proto 3 0

testBoxMap_block@0:
    // tests/approvals/box-proxies.algo.ts:41
    // box(key).value = value
    frame_dig -3
    frame_dig -2
    concat
    dup
    box_del
    pop
    frame_dig -1
    box_put
    // tests/approvals/box-proxies.algo.ts:38
    // const boxMap = BoxMap<string, bytes>({ keyPrefix: '' })
    bytec_0 // ""
    frame_dig -2
    concat
    // tests/approvals/box-proxies.algo.ts:42
    // boxMap(key).value = value
    dup
    box_del
    pop
    frame_dig -1
    box_put
    // tests/approvals/box-proxies.algo.ts:38
    // const boxMap = BoxMap<string, bytes>({ keyPrefix: '' })
    bytec_0 // ""
    // tests/approvals/box-proxies.algo.ts:44
    // const boxMapItem = boxMap(key)
    frame_dig -2
    // tests/approvals/box-proxies.algo.ts:38
    // const boxMap = BoxMap<string, bytes>({ keyPrefix: '' })
    concat
    // tests/approvals/box-proxies.algo.ts:46
    // assert(boxMapItem.exists)
    box_len
    bury 1
    assert
    // tests/approvals/box-proxies.algo.ts:48
    // assert(box.keyPrefix === Bytes('two'))
    frame_dig -3
    bytec 6 // "two"
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:49
    // assert(boxMap.keyPrefix === Bytes(''))
    bytec_0 // ""
    dup
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:51
    // assert(box(key).length)
    frame_dig -3
    frame_dig -2
    concat
    box_len
    assert // Box must have value
    assert
    // tests/approvals/box-proxies.algo.ts:53
    // assert(box(key).maybe()[1])
    frame_dig -3
    frame_dig -2
    concat
    box_get
    bury 1
    assert
    // tests/approvals/box-proxies.algo.ts:55
    // assert(box(key).value === boxMap(key).value)
    frame_dig -3
    frame_dig -2
    concat
    box_get
    assert // Box must have value
    // tests/approvals/box-proxies.algo.ts:38
    // const boxMap = BoxMap<string, bytes>({ keyPrefix: '' })
    bytec_0 // ""
    frame_dig -2
    concat
    // tests/approvals/box-proxies.algo.ts:55
    // assert(box(key).value === boxMap(key).value)
    box_get
    assert // Box must have value
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:57
    // const isBoxDeleted = box(key).delete()
    frame_dig -3
    frame_dig -2
    concat
    box_del
    // tests/approvals/box-proxies.algo.ts:58
    // assert(isBoxDeleted, 'delete failed')
    assert // delete failed
    // tests/approvals/box-proxies.algo.ts:60
    // assert(box(`${key}x`).get({ default: Bytes('b') }) === boxMap(`${key}x`).get({ default: Bytes('b') }))
    bytec_0 // ""
    frame_dig -2
    concat
    pushbytes "x"
    concat
    frame_dig -3
    swap
    concat
    box_get
    swap
    pushbytes "b"
    swap
    uncover 2
    select
    bytec_0 // ""
    frame_dig -2
    concat
    pushbytes "x"
    concat
    // tests/approvals/box-proxies.algo.ts:38
    // const boxMap = BoxMap<string, bytes>({ keyPrefix: '' })
    bytec_0 // ""
    swap
    concat
    // tests/approvals/box-proxies.algo.ts:60
    // assert(box(`${key}x`).get({ default: Bytes('b') }) === boxMap(`${key}x`).get({ default: Bytes('b') }))
    box_get
    swap
    pushbytes "b"
    swap
    uncover 2
    select
    ==
    assert
    retsub


// tests/approvals/box-proxies.algo.ts::testBoxRef(box: bytes, length: uint64) -> void:
testBoxRef:
    // tests/approvals/box-proxies.algo.ts:65
    // function testBoxRef(box: BoxRef, length: uint64) {
    proto 2 0

testBoxRef_block@0:
    // tests/approvals/box-proxies.algo.ts:66
    // assert(box.key === Bytes('three'))
    frame_dig -2
    bytec 7 // "three"
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:67
    // assert(boxRef.key === Bytes('abc'))
    bytec_3 // "abc"
    dup
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:63
    // const boxRef = BoxRef({ key: 'abc' })
    bytec_3 // "abc"
    // tests/approvals/box-proxies.algo.ts:69
    // if (!boxRef.exists) {
    box_len
    bury 1
    bnz testBoxRef_else_body@2

testBoxRef_if_body@1:
    // tests/approvals/box-proxies.algo.ts:63
    // const boxRef = BoxRef({ key: 'abc' })
    bytec_3 // "abc"
    // tests/approvals/box-proxies.algo.ts:70
    // boxRef.create({ size: 1000 })
    pushint 1000 // 1000
    box_create
    pop

testBoxRef_after_if_else@5:
    // tests/approvals/box-proxies.algo.ts:74
    // if (box.exists) {
    frame_dig -2
    box_len
    bury 1
    bz testBoxRef_else_body@7

testBoxRef_if_body@6:
    // tests/approvals/box-proxies.algo.ts:75
    // box.resize(4)
    frame_dig -2
    intc_1 // 4
    box_resize

testBoxRef_after_if_else@8:
    // tests/approvals/box-proxies.algo.ts:80
    // box.put(someBytes)
    frame_dig -2
    // tests/approvals/box-proxies.algo.ts:79
    // const someBytes = Bytes.fromHex('FFFFFFFF')
    bytec 4 // 0xffffffff
    // tests/approvals/box-proxies.algo.ts:80
    // box.put(someBytes)
    box_put
    // tests/approvals/box-proxies.algo.ts:82
    // assert(box.get({ default: Bytes() }) === Bytes.fromHex('FFFFFFFF'))
    frame_dig -2
    box_get
    swap
    bytec_0 // 0x
    swap
    uncover 2
    select
    bytec 4 // 0xffffffff
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:84
    // const maybeBox = box.maybe()
    frame_dig -2
    box_get
    bury 1
    // tests/approvals/box-proxies.algo.ts:85
    // assert(maybeBox[1])
    assert
    // tests/approvals/box-proxies.algo.ts:87
    // assert(box.value === Bytes.fromHex('FFFFFFFF'))
    frame_dig -2
    box_get
    assert // Box must have value
    bytec 4 // 0xffffffff
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:88
    // box.splice(1, 1, Bytes.fromHex('00'))
    frame_dig -2
    intc_3 // 1
    dup
    pushbytes 0x00
    box_splice
    // tests/approvals/box-proxies.algo.ts:89
    // assert(box.value === Bytes.fromHex('FF00FFFF'))
    frame_dig -2
    box_get
    assert // Box must have value
    pushbytes 0xff00ffff
    ==
    assert
    // tests/approvals/box-proxies.algo.ts:91
    // const x = box.delete()
    frame_dig -2
    box_del
    // tests/approvals/box-proxies.algo.ts:92
    // assert(x, 'delete failed')
    assert // delete failed
    // tests/approvals/box-proxies.algo.ts:93
    // assert(!box.exists)
    frame_dig -2
    box_len
    bury 1
    !
    assert
    retsub

testBoxRef_else_body@7:
    // tests/approvals/box-proxies.algo.ts:77
    // box.create({ size: 4 })
    frame_dig -2
    intc_1 // 4
    box_create
    pop
    b testBoxRef_after_if_else@8

testBoxRef_else_body@2:
    // tests/approvals/box-proxies.algo.ts:63
    // const boxRef = BoxRef({ key: 'abc' })
    bytec_3 // "abc"
    // tests/approvals/box-proxies.algo.ts:71
    // } else if (boxRef.length !== length) {
    box_len
    assert // Box must have value
    frame_dig -1
    !=
    bz testBoxRef_after_if_else@4

testBoxRef_if_body@3:
    // tests/approvals/box-proxies.algo.ts:63
    // const boxRef = BoxRef({ key: 'abc' })
    bytec_3 // "abc"
    // tests/approvals/box-proxies.algo.ts:72
    // boxRef.resize(length)
    frame_dig -1
    box_resize

testBoxRef_after_if_else@4:
    b testBoxRef_after_if_else@5

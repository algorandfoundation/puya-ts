main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        goto block@1
    block@1: // L141
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@5
    block@2: // abi_routing_L141
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "createBoxes()void" => block@3, * => block@4}
    block@3: // createBoxes_route_L150
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        let tmp%7#0: bool = (&& tmp%4#0 tmp%6#0)
        (assert tmp%7#0) // OnCompletion must be NoOp && can only call when not creating
        tests/approvals/box-proxies.algo.ts::BoxCreate.createBoxes[routing]()
        goto block@4
    block@4: // switch_case_next_L141
        goto block@6
    block@5: // __algots__.defaultCreate_L141
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 NoOp)
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (== tmp%10#0 0u)
        let tmp%12#0: bool = (&& tmp%9#0 tmp%11#0)
        (assert tmp%12#0) // OnCompletion must be NoOp && can only call when creating
        tests/approvals/box-proxies.algo.ts::BoxCreate.__algots__.defaultCreate()
        exit 1u
    block@6: // after_if_else_L141
        exit 0u
    block@7: // after_inlined_tests/approvals/box-proxies.algo.ts::BoxCreate.__puya_arc4_router___L1
        let tmp%0#0: bool = undefined
        return tmp%0#0

subroutine tests/approvals/box-proxies.algo.ts::BoxCreate.createBoxes[routing]() -> void:
    block@0: // L150
        tests/approvals/box-proxies.algo.ts::BoxCreate.createBoxes()
        exit 1u

subroutine tests/approvals/box-proxies.algo.ts::BoxCreate.createBoxes() -> void:
    block@0: // L150
        (box_create "a" 10u)
        let (value%0#0: uint64, check%0#0: bool) = (box_len "a")
        (assert check%0#0) // Box must have value
        let tmp%0#0: bool = (== value%0#0 10u)
        (assert tmp%0#0)
        (box_create "b" 8u)
        let (value%1#0: uint64, check%1#0: bool) = (box_len "b")
        (assert check%1#0) // Box must have value
        let tmp%1#0: bool = (== value%1#0 8u)
        (assert tmp%1#0)
        (box_create "c" 40u)
        let (value%2#0: uint64, check%2#0: bool) = (box_len "c")
        (assert check%2#0) // Box must have value
        let tmp%2#0: bool = (== value%2#0 40u)
        (assert tmp%2#0)
        (box_create "d" 2u)
        let (value%3#0: uint64, check%3#0: bool) = (box_len "d")
        (assert check%3#0) // Box must have value
        let tmp%3#0: bool = (== value%3#0 2u)
        (assert tmp%3#0)
        (box_create "e" 3u)
        let (value%4#0: uint64, check%4#0: bool) = (box_len "e")
        (assert check%4#0) // Box must have value
        let tmp%4#0: bool = (== value%4#0 3u)
        (assert tmp%4#0)
        (box_create "bool" 8u)
        let (value%5#0: uint64, check%5#0: bool) = (box_len "bool")
        (assert check%5#0) // Box must have value
        let tmp%5#0: bool = (== value%5#0 8u)
        (assert tmp%5#0)
        (box_create "arc4b" 1u)
        let (value%6#0: uint64, check%6#0: bool) = (box_len "arc4b")
        (assert check%6#0) // Box must have value
        let tmp%6#0: bool = (== value%6#0 1u)
        (assert tmp%6#0)
        return 

subroutine tests/approvals/box-proxies.algo.ts::BoxCreate.__algots__.defaultCreate() -> void:
    block@0: // L141
        return 
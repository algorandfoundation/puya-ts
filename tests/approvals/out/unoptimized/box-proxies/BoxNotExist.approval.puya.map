{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/box-proxies.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;AA8GY;;AAAqB;AAAzB;AAAJ;;;AAC8B;AAApB;;AACD;;;;;AAAA;AAAL;;;AAC6B;AAAS;AAAA;AAAA;AAAA;AAAA;AAApC;AAFwB;AAApB;;AAGD;;;;;;;;AAAA;AAAL;;;AAC8C;;;AAAO;;;;AAAP;AAAa;AAAA;AAAA;AAAA;AAAA;AAAzD;AAJwB;AAApB;;AAKD;;;;;;;;;;;AAAA;AAAL;;;AACuC;AAArC;AAAoB;AAApB;AAAA;AACO;AAAP;AAGC;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "tests/approvals/box-proxies.algo.ts::BoxNotExist.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"abc\""
    },
    "11": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "14": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "bz main_after_if_else@11",
      "stack_out": []
    },
    "18": {
      "block": "main_if_body@1",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "19": {
      "op": "txnas ApplicationArgs",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "21": {
      "op": "pushbytes \"box\"",
      "defined_out": [
        "\"box\"",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "\"box\""
      ]
    },
    "26": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "27": {
      "op": "bz main_after_if_else@4",
      "stack_out": []
    },
    "30": {
      "block": "main_block@3",
      "stack_in": [],
      "op": "bytec_0 // \"abc\"",
      "defined_out": [
        "\"abc\""
      ],
      "stack_out": [
        "\"abc\""
      ]
    },
    "31": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "32": {
      "op": "swap",
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "33": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0"
      ]
    },
    "34": {
      "op": "swap",
      "stack_out": [
        "maybe_value_converted%0#0",
        "maybe_exists%0#0"
      ]
    },
    "35": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value_converted%0#0"
      ]
    },
    "36": {
      "op": "return",
      "stack_out": []
    },
    "37": {
      "block": "main_after_if_else@4",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "38": {
      "op": "txnas ApplicationArgs",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "40": {
      "op": "pushbytes \"boxmap\"",
      "defined_out": [
        "\"boxmap\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "\"boxmap\""
      ]
    },
    "48": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "49": {
      "op": "bz main_after_if_else@7",
      "stack_out": []
    },
    "52": {
      "block": "main_block@6",
      "stack_in": [],
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "55": {
      "op": "pushbytes \"bc\"",
      "defined_out": [
        "\"a\"",
        "\"bc\""
      ],
      "stack_out": [
        "\"a\"",
        "\"bc\""
      ]
    },
    "59": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "60": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "61": {
      "op": "swap",
      "stack_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "62": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value_converted%1#0"
      ],
      "stack_out": [
        "maybe_exists%1#0",
        "maybe_value_converted%1#0"
      ]
    },
    "63": {
      "op": "swap",
      "stack_out": [
        "maybe_value_converted%1#0",
        "maybe_exists%1#0"
      ]
    },
    "64": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value_converted%1#0"
      ]
    },
    "65": {
      "op": "return",
      "stack_out": []
    },
    "66": {
      "block": "main_after_if_else@7",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "67": {
      "op": "txnas ApplicationArgs",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "69": {
      "op": "pushbytes \"createbox\"",
      "defined_out": [
        "\"createbox\"",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "\"createbox\""
      ]
    },
    "80": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "81": {
      "op": "bz main_after_if_else@10",
      "stack_out": []
    },
    "84": {
      "block": "main_block@9",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "85": {
      "op": "itob",
      "defined_out": [
        "new_box_value%0#0"
      ],
      "stack_out": [
        "new_box_value%0#0"
      ]
    },
    "86": {
      "op": "bytec_0 // \"abc\"",
      "defined_out": [
        "\"abc\"",
        "new_box_value%0#0"
      ],
      "stack_out": [
        "new_box_value%0#0",
        "\"abc\""
      ]
    },
    "87": {
      "op": "swap",
      "stack_out": [
        "\"abc\"",
        "new_box_value%0#0"
      ]
    },
    "88": {
      "op": "box_put",
      "stack_out": []
    },
    "89": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "90": {
      "op": "return",
      "stack_out": []
    },
    "91": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "92": {
      "op": "return",
      "stack_out": []
    }
  }
}
#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 0 32 6
    bytecblock 0x 0xdf920f37 0x151f7c75 "Hello test4"
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // tests/approvals/gtxns.algo.ts:16
    // export class GtxnsAlgo extends Contract {
    txn NumAppArgs
    intc_1 // 0
    !=
    bz main___algots__.defaultCreate@13
    b main_abi_routing@2

main_abi_routing@2:
    // tests/approvals/gtxns.algo.ts:16
    // export class GtxnsAlgo extends Contract {
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_1 // 0
    !=
    bz main_create_NoOp@11
    b main_call_NoOp@3

main_call_NoOp@3:
    // tests/approvals/gtxns.algo.ts:16
    // export class GtxnsAlgo extends Contract {
    txna ApplicationArgs 0
    pushbytes 0xa78000de // method "test()void"
    pushbytes 0xf1908524 // method "test2()void"
    bytec_1 // method "test3()void"
    pushbytes 0xedb4f973 // method "test4(appl)void"
    pushbytes 0x13de6a54 // method "reflectAllPay(pay)(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])"
    pushbytes 0x7459fb1f // method "test5(txn)uint64"
    uncover 6
    match main_test_route@4 main_test2_route@5 main_test3_route@6 main_test4_route@7 main_reflectAllPay_route@8 main_test5_route@9
    b main_switch_case_next@10

main_switch_case_next@10:
    b main_after_if_else@12

main_after_if_else@12:
    b main_after_if_else@14

main_after_if_else@14:
    // tests/approvals/gtxns.algo.ts:16
    // export class GtxnsAlgo extends Contract {
    err

main_test5_route@9:
    // tests/approvals/gtxns.algo.ts:80
    // test5(txn: gtxn.Transaction): uint64 {
    callsub test5
    b main_switch_case_next@10

main_reflectAllPay_route@8:
    // tests/approvals/gtxns.algo.ts:61
    // reflectAllPay(pay: gtxn.PaymentTxn) {
    callsub reflectAllPay
    b main_switch_case_next@10

main_test4_route@7:
    // tests/approvals/gtxns.algo.ts:53
    // test4(other: gtxn.ApplicationCallTxn) {
    callsub test4
    b main_switch_case_next@10

main_test3_route@6:
    // tests/approvals/gtxns.algo.ts:47
    // test3() {
    callsub test3
    b main_switch_case_next@10

main_test2_route@5:
    // tests/approvals/gtxns.algo.ts:21
    // test2() {
    callsub test2
    b main_switch_case_next@10

main_test_route@4:
    // tests/approvals/gtxns.algo.ts:17
    // test() {
    callsub test
    b main_switch_case_next@10

main_create_NoOp@11:
    b main_after_if_else@12

main___algots__.defaultCreate@13:
    // tests/approvals/gtxns.algo.ts:16
    // export class GtxnsAlgo extends Contract {
    txn OnCompletion
    intc_1 // NoOp
    ==
    txn ApplicationID
    intc_1 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub __algots__.defaultCreate
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test[routing]() -> void:
test:
    b test_block@0

test_block@0:
    // tests/approvals/gtxns.algo.ts:17
    // test() {
    callsub tests/approvals/gtxns.algo.ts::GtxnsAlgo.test
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2[routing]() -> void:
test2:
    b test2_block@0

test2_block@0:
    // tests/approvals/gtxns.algo.ts:21
    // test2() {
    callsub tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test3[routing]() -> void:
test3:
    b test3_block@0

test3_block@0:
    // tests/approvals/gtxns.algo.ts:47
    // test3() {
    callsub tests/approvals/gtxns.algo.ts::GtxnsAlgo.test3
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test4[routing]() -> void:
test4:
    b test4_block@0

test4_block@0:
    // tests/approvals/gtxns.algo.ts:53
    // test4(other: gtxn.ApplicationCallTxn) {
    txn GroupIndex
    intc_0 // 1
    -
    dup
    gtxns TypeEnum
    intc_3 // appl
    ==
    assert // transaction type is appl
    callsub tests/approvals/gtxns.algo.ts::GtxnsAlgo.test4
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.reflectAllPay[routing]() -> void:
reflectAllPay:
    b reflectAllPay_block@0

reflectAllPay_block@0:
    // tests/approvals/gtxns.algo.ts:61
    // reflectAllPay(pay: gtxn.PaymentTxn) {
    txn GroupIndex
    intc_0 // 1
    -
    dup
    gtxns TypeEnum
    intc_0 // pay
    ==
    assert // transaction type is pay
    callsub tests/approvals/gtxns.algo.ts::GtxnsAlgo.reflectAllPay
    bytec_2 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5[routing]() -> void:
test5:
    b test5_block@0

test5_block@0:
    // tests/approvals/gtxns.algo.ts:80
    // test5(txn: gtxn.Transaction): uint64 {
    txn GroupIndex
    intc_0 // 1
    -
    callsub tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5
    itob
    bytec_2 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test() -> void:
tests/approvals/gtxns.algo.ts::GtxnsAlgo.test:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test_block@0

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test_block@0:
    // tests/approvals/gtxns.algo.ts:18
    // assert(gtxn.PaymentTxn(0).amount > 0)
    intc_1 // 0
    gtxns TypeEnum
    intc_0 // pay
    ==
    assert // transaction type is pay
    intc_1 // 0
    gtxns Amount
    intc_1 // 0
    >
    assert
    retsub


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2() -> void:
tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2:
    // tests/approvals/gtxns.algo.ts:21
    // test2() {
    proto 0 0
    bytec_0 // ""
    bytec_0 // ""
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@0

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@0:
    // tests/approvals/gtxns.algo.ts:22
    // for (const i of urange(Global.groupSize)) {
    global GroupSize
    intc_0 // 1
    assert // Step cannot be zero
    intc_1 // 0
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_header@1

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_header@1:
    // tests/approvals/gtxns.algo.ts:22
    // for (const i of urange(Global.groupSize)) {
    frame_dig 3
    frame_dig 2
    <
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_for@21
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_body@2

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_body@2:
    // tests/approvals/gtxns.algo.ts:22
    // for (const i of urange(Global.groupSize)) {
    frame_dig 3
    // tests/approvals/gtxns.algo.ts:23
    // const txn = gtxn.Transaction(i)
    dup
    frame_bury 1
    // tests/approvals/gtxns.algo.ts:24
    // switch (txn.type) {
    gtxns TypeEnum
    dup
    frame_bury 0
    // tests/approvals/gtxns.algo.ts:25
    // case TransactionType.ApplicationCall:
    intc_3 // 6
    ==
    // tests/approvals/gtxns.algo.ts:25-27
    // case TransactionType.ApplicationCall:
    //   log(txn.appId.id)
    //   break
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@5
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@3

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@3:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@4

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@4:
    // tests/approvals/gtxns.algo.ts:26
    // log(txn.appId.id)
    frame_dig 1
    gtxns ApplicationID
    itob
    log
    // tests/approvals/gtxns.algo.ts:27
    // break
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_footer@20

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_footer@20:
    // tests/approvals/gtxns.algo.ts:22
    // for (const i of urange(Global.groupSize)) {
    frame_dig 3
    intc_0 // 1
    +
    frame_bury 3
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_for_header@1

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@5:
    // tests/approvals/gtxns.algo.ts:28
    // case TransactionType.AssetTransfer:
    frame_dig 0
    pushint 4 // 4
    ==
    // tests/approvals/gtxns.algo.ts:28-30
    // case TransactionType.AssetTransfer:
    //   log(txn.xferAsset.id)
    //   break
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@8
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@6

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@6:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@7

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@7:
    // tests/approvals/gtxns.algo.ts:29
    // log(txn.xferAsset.id)
    frame_dig 1
    gtxns XferAsset
    itob
    log
    // tests/approvals/gtxns.algo.ts:30
    // break
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@8:
    // tests/approvals/gtxns.algo.ts:31
    // case TransactionType.AssetConfig:
    frame_dig 0
    pushint 3 // 3
    ==
    // tests/approvals/gtxns.algo.ts:31-33
    // case TransactionType.AssetConfig:
    //   log(txn.configAsset.id)
    //   break
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@11
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@9

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@9:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@10

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@10:
    // tests/approvals/gtxns.algo.ts:32
    // log(txn.configAsset.id)
    frame_dig 1
    gtxns ConfigAsset
    itob
    log
    // tests/approvals/gtxns.algo.ts:33
    // break
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@11:
    // tests/approvals/gtxns.algo.ts:34
    // case TransactionType.Payment:
    frame_dig 0
    intc_0 // 1
    ==
    // tests/approvals/gtxns.algo.ts:34-36
    // case TransactionType.Payment:
    //   log(txn.receiver)
    //   break
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@14
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@12

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@12:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@13

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@13:
    // tests/approvals/gtxns.algo.ts:35
    // log(txn.receiver)
    frame_dig 1
    gtxns Receiver
    log
    // tests/approvals/gtxns.algo.ts:36
    // break
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@14:
    // tests/approvals/gtxns.algo.ts:37
    // case TransactionType.KeyRegistration:
    frame_dig 0
    pushint 2 // 2
    ==
    // tests/approvals/gtxns.algo.ts:37-39
    // case TransactionType.KeyRegistration:
    //   log(txn.voteKey)
    //   break
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@17
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@15

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_if_body@15:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@16

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@16:
    // tests/approvals/gtxns.algo.ts:38
    // log(txn.voteKey)
    frame_dig 1
    gtxns VotePK
    log
    // tests/approvals/gtxns.algo.ts:39
    // break
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_if_else@17:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@18

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@18:
    // tests/approvals/gtxns.algo.ts:41
    // log(txn.freezeAsset.id)
    frame_dig 1
    gtxns FreezeAsset
    itob
    log
    // tests/approvals/gtxns.algo.ts:42
    // break
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_block@19

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test2_after_for@21:
    retsub


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test3() -> void:
tests/approvals/gtxns.algo.ts::GtxnsAlgo.test3:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test3_block@0

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test3_block@0:
    // tests/approvals/gtxns.algo.ts:48
    // assert(Txn.onCompletion === OnCompleteAction.NoOp, 'OCA must be NoOp')
    txn OnCompletion
    intc_1 // 0
    ==
    assert // OCA must be NoOp
    // tests/approvals/gtxns.algo.ts:49
    // assert(Txn.typeEnum === TransactionType.ApplicationCall)
    txn TypeEnum
    intc_3 // 6
    ==
    assert
    // tests/approvals/gtxns.algo.ts:50
    // log('Hello test4')
    bytec_3 // "Hello test4"
    log
    retsub


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test4(other: uint64) -> void:
tests/approvals/gtxns.algo.ts::GtxnsAlgo.test4:
    // tests/approvals/gtxns.algo.ts:53
    // test4(other: gtxn.ApplicationCallTxn) {
    proto 1 0
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test4_block@0

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test4_block@0:
    // tests/approvals/gtxns.algo.ts:54
    // assert(other.onCompletion === OnCompleteAction.NoOp, 'Other txn must be NoOp')
    frame_dig -1
    gtxns OnCompletion
    intc_1 // 0
    ==
    assert // Other txn must be NoOp
    // tests/approvals/gtxns.algo.ts:55
    // assert(other.type === TransactionType.ApplicationCall)
    frame_dig -1
    gtxns TypeEnum
    intc_3 // 6
    ==
    assert
    // tests/approvals/gtxns.algo.ts:56
    // assert(other.lastLog === Bytes('Hello test4'))
    frame_dig -1
    gtxns LastLog
    bytec_3 // "Hello test4"
    ==
    assert
    // tests/approvals/gtxns.algo.ts:57
    // assert(other.appArgs(0) === methodSelector(GtxnsAlgo.prototype.test3))
    frame_dig -1
    intc_1 // 0
    gtxnsas ApplicationArgs
    bytec_1 // method "test3()void"
    ==
    assert
    // tests/approvals/gtxns.algo.ts:58
    // assert(other.appId === Global.currentApplicationId)
    frame_dig -1
    gtxns ApplicationID
    global CurrentApplicationID
    ==
    assert
    retsub


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.reflectAllPay(pay: uint64) -> bytes:
tests/approvals/gtxns.algo.ts::GtxnsAlgo.reflectAllPay:
    // tests/approvals/gtxns.algo.ts:61
    // reflectAllPay(pay: gtxn.PaymentTxn) {
    proto 1 1
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.reflectAllPay_block@0

tests/approvals/gtxns.algo.ts::GtxnsAlgo.reflectAllPay_block@0:
    // tests/approvals/gtxns.algo.ts:63
    // sender: pay.sender.bytes,
    frame_dig -1
    gtxns Sender
    // tests/approvals/gtxns.algo.ts:64
    // fee: pay.fee,
    frame_dig -1
    gtxns Fee
    cover 1
    // tests/approvals/gtxns.algo.ts:65
    // firstValid: pay.firstValid,
    frame_dig -1
    gtxns FirstValid
    cover 2
    // tests/approvals/gtxns.algo.ts:66
    // firstValidTime: pay.firstValidTime,
    frame_dig -1
    gtxns FirstValidTime
    cover 3
    // tests/approvals/gtxns.algo.ts:67
    // lastValid: pay.lastValid,
    frame_dig -1
    gtxns LastValid
    cover 4
    // tests/approvals/gtxns.algo.ts:68
    // note: pay.note,
    frame_dig -1
    gtxns Note
    cover 5
    // tests/approvals/gtxns.algo.ts:69
    // lease: pay.lease,
    frame_dig -1
    gtxns Lease
    cover 6
    // tests/approvals/gtxns.algo.ts:70
    // typeBytes: pay.typeBytes,
    frame_dig -1
    gtxns Type
    cover 7
    // tests/approvals/gtxns.algo.ts:71
    // groupIndex: pay.groupIndex,
    frame_dig -1
    gtxns GroupIndex
    cover 8
    // tests/approvals/gtxns.algo.ts:72
    // txnId: pay.txnId,
    frame_dig -1
    gtxns TxID
    cover 9
    // tests/approvals/gtxns.algo.ts:73
    // rekeyTo: pay.rekeyTo.bytes,
    frame_dig -1
    gtxns RekeyTo
    cover 10
    // tests/approvals/gtxns.algo.ts:74
    // receiver: pay.receiver.bytes,
    frame_dig -1
    gtxns Receiver
    cover 11
    // tests/approvals/gtxns.algo.ts:75
    // amount: pay.amount,
    frame_dig -1
    gtxns Amount
    cover 12
    // tests/approvals/gtxns.algo.ts:76
    // closeRemainderTo: pay.closeRemainderTo.bytes,
    frame_dig -1
    gtxns CloseRemainderTo
    cover 13
    // tests/approvals/gtxns.algo.ts:62-77
    // return {
    //   sender: pay.sender.bytes,
    //   fee: pay.fee,
    //   firstValid: pay.firstValid,
    //   firstValidTime: pay.firstValidTime,
    //   lastValid: pay.lastValid,
    //   note: pay.note,
    //   lease: pay.lease,
    //   typeBytes: pay.typeBytes,
    //   groupIndex: pay.groupIndex,
    //   txnId: pay.txnId,
    //   rekeyTo: pay.rekeyTo.bytes,
    //   receiver: pay.receiver.bytes,
    //   amount: pay.amount,
    //   closeRemainderTo: pay.closeRemainderTo.bytes,
    // }
    dup
    len
    intc_2 // 32
    ==
    assert // invalid size
    bytec_0 // 0x
    uncover 1
    concat
    uncover 1
    itob
    concat
    uncover 1
    itob
    concat
    uncover 1
    itob
    concat
    uncover 1
    itob
    concat
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    pushint 244 // 244
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    cover 1
    dup
    len
    pushint 244 // 244
    +
    cover 1
    dig 3
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 3
    uncover 3
    uncover 1
    concat
    dig 3
    len
    itob
    extract 6 2
    uncover 4
    concat
    cover 2
    uncover 3
    itob
    extract 6 2
    concat
    uncover 3
    itob
    concat
    dig 3
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 3
    concat
    dig 3
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 3
    concat
    dig 3
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 3
    concat
    uncover 3
    itob
    concat
    dig 3
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 3
    concat
    uncover 1
    concat
    uncover 1
    concat
    retsub


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5(txn: uint64) -> uint64:
tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5:
    // tests/approvals/gtxns.algo.ts:80
    // test5(txn: gtxn.Transaction): uint64 {
    proto 1 1
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_block@0

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_block@0:
    // tests/approvals/gtxns.algo.ts:81
    // if (txn.type === TransactionType.Payment) {
    frame_dig -1
    gtxns TypeEnum
    intc_0 // 1
    ==
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_else_body@2
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_if_body@1

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_if_body@1:
    // tests/approvals/gtxns.algo.ts:82
    // return 1
    intc_0 // 1
    retsub

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_else_body@2:
    // tests/approvals/gtxns.algo.ts:83
    // } else if (txn.type === TransactionType.AssetTransfer) {
    frame_dig -1
    gtxns TypeEnum
    pushint 4 // 4
    ==
    bz tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_after_if_else@4
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_if_body@3

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_if_body@3:
    // tests/approvals/gtxns.algo.ts:85
    // return 0
    intc_1 // 0
    retsub

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_after_if_else@4:
    b tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_after_if_else@5

tests/approvals/gtxns.algo.ts::GtxnsAlgo.test5_after_if_else@5:
    // tests/approvals/gtxns.algo.ts:87
    // return 0
    intc_1 // 0
    retsub


// tests/approvals/gtxns.algo.ts::GtxnsAlgo.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    b __algots__.defaultCreate_block@0

__algots__.defaultCreate_block@0:
    retsub

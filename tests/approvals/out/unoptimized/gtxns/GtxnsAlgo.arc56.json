{
    "name": "GtxnsAlgo",
    "structs": {
        "Object3488A93F": [
            {
                "name": "sender",
                "type": "byte[32]"
            },
            {
                "name": "fee",
                "type": "uint64"
            },
            {
                "name": "firstValid",
                "type": "uint64"
            },
            {
                "name": "firstValidTime",
                "type": "uint64"
            },
            {
                "name": "lastValid",
                "type": "uint64"
            },
            {
                "name": "note",
                "type": "byte[]"
            },
            {
                "name": "lease",
                "type": "byte[32]"
            },
            {
                "name": "typeBytes",
                "type": "byte[]"
            },
            {
                "name": "groupIndex",
                "type": "uint64"
            },
            {
                "name": "txnId",
                "type": "byte[32]"
            },
            {
                "name": "rekeyTo",
                "type": "byte[32]"
            },
            {
                "name": "receiver",
                "type": "byte[32]"
            },
            {
                "name": "amount",
                "type": "uint64"
            },
            {
                "name": "closeRemainderTo",
                "type": "byte[32]"
            }
        ]
    },
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test4",
            "args": [
                {
                    "type": "appl",
                    "name": "other"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "reflectAllPay",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])",
                "struct": "Object3488A93F"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test5",
            "args": [
                {
                    "type": "txn",
                    "name": "txn"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        389
                    ],
                    "errorMessage": "OCA must be NoOp"
                },
                {
                    "pc": [
                        95,
                        121,
                        152,
                        179,
                        196,
                        213
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        407
                    ],
                    "errorMessage": "Other txn must be NoOp"
                },
                {
                    "pc": [
                        270
                    ],
                    "errorMessage": "Step cannot be zero"
                },
                {
                    "pc": [
                        241
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        100,
                        126,
                        157,
                        184,
                        201,
                        218
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        527,
                        577,
                        612,
                        621,
                        630,
                        643
                    ],
                    "errorMessage": "invalid size"
                },
                {
                    "pc": [
                        167
                    ],
                    "errorMessage": "transaction type is appl"
                },
                {
                    "pc": [
                        136,
                        254
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAAEgBiYEBN+SDzcEFR98dQALSGVsbG8gdGVzdDQxGyITQQC7NhoAgASngADegATxkIUkKIAE7bT5c4AEE95qVIAEdFn7H08GjgYAeABnAFYAOwAcAAIiQzEZIhJEMRgiE0QxFiMJiAIgFilMULAjQv/lMRkiEkQxGCITRDEWIwlJOBAjEkSIASspTFCwI0L/xjEZIhJEMRgiE0QxFiMJSTgQJRJEiADjI0L/qzEZIhJEMRgiE0SIAMUjQv+aMRkiEkQxGCITRIgAOSNC/4kxGSISRDEYIhNEiAAbI0L/eDEZIkyOAQADQv9sMRgiEkSIAbMjQv9hIjgQIxJEIjgIIg1EiYoAACpJMgQjRCKLA4sCDEEAaIsDSYwBOBBJjAAlEkEAD4sBOBgWsIsDIwiMA0L/2osAgQQSQQAJiwE4ERawQv/miwCBAxJBAAmLATghFrBC/9WLACMSQQAIiwE4B7BC/8aLAIECEkEACIsBOAqwQv+2iwE4LRawQv+tiTEZIhJEMRAlEkQrsImKAQCL/zgZIhJEi/84ECUSRIv/OD4rEkSL/yLCGigSRIv/OBgyCBJEiYoBAYv/OACL/zgBTIv/OAJOAov/OANOA4v/OAROBIv/OAVOBYv/OAZOBov/OA9OB4v/OBZOCIv/OBdOCYv/OCBOCov/OAdOC4v/OAhODIv/OAlODUkVJBJEKkxQTBZQTBZQTBZQTBZQSwEVFlcGAk8CUIH0ARZXBgJPAkxQTEkVgfQBCExLAxUkEkRPA08DTFBLAxUWVwYCTwRQTgJPAxZXBgJQTwMWUEsDFSQSRE8DUEsDFSQSRE8DUEsDFSQSRE8DUE8DFlBLAxUkEkRPA1BMUExQiYoBAYv/OBAjEkEAAiOJi/84EIEEEkEAAiKJIomJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
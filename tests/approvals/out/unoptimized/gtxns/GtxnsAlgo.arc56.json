{
    "name": "GtxnsAlgo",
    "structs": {
        "Object3488A93F": [
            {
                "name": "sender",
                "type": "byte[32]"
            },
            {
                "name": "fee",
                "type": "uint64"
            },
            {
                "name": "firstValid",
                "type": "uint64"
            },
            {
                "name": "firstValidTime",
                "type": "uint64"
            },
            {
                "name": "lastValid",
                "type": "uint64"
            },
            {
                "name": "note",
                "type": "byte[]"
            },
            {
                "name": "lease",
                "type": "byte[32]"
            },
            {
                "name": "typeBytes",
                "type": "byte[]"
            },
            {
                "name": "groupIndex",
                "type": "uint64"
            },
            {
                "name": "txnId",
                "type": "byte[32]"
            },
            {
                "name": "rekeyTo",
                "type": "byte[32]"
            },
            {
                "name": "receiver",
                "type": "byte[32]"
            },
            {
                "name": "amount",
                "type": "uint64"
            },
            {
                "name": "closeRemainderTo",
                "type": "byte[32]"
            }
        ]
    },
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test4",
            "args": [
                {
                    "type": "appl",
                    "name": "other"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "reflectAllPay",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])",
                "struct": "Object3488A93F"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test5",
            "args": [
                {
                    "type": "txn",
                    "name": "txn"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        454
                    ],
                    "errorMessage": "OCA must be NoOp"
                },
                {
                    "pc": [
                        52
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        171
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        475
                    ],
                    "errorMessage": "Other txn must be NoOp"
                },
                {
                    "pc": [
                        287
                    ],
                    "errorMessage": "Step cannot be zero"
                },
                {
                    "pc": [
                        599,
                        657,
                        693,
                        702,
                        711,
                        724
                    ],
                    "errorMessage": "invalid size"
                },
                {
                    "pc": [
                        213
                    ],
                    "errorMessage": "transaction type is appl"
                },
                {
                    "pc": [
                        231,
                        268
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiAEAQAgBiYEAATfkg83BBUffHULSGVsbG8gdGVzdDRCAABCAAAxGyMTQQB1QgAAMRkjEkQxGCMTQQBjQgAANhoAgASngADegATxkIUkKYAE7bT5c4AEE95qVIAEdFn7H08GjgYAKAAiABwAFgAQAApCAABCAABCAAAAiAB0Qv/ziABXQv/tiAA/Qv/niAAxQv/hiAAjQv/biAAVQv/VQv/VMRkjEjEYIxIQRIgCWCJDQgAAiABNIkNCAACIAFUiQ0IAAIgA+CJDQgAAMRYiCUk4ECUSRIgA9iJDQgAAMRYiCUk4ECISRIgBECpPAVCwIkNCAAAxFiIJiAHjFipPAVCwIkNCAAAjOBAiEkQjOAgjDUSJigAAKChCAAAyBCJEI0IAAIsDiwIMQQCSQgAAiwNJjAE4EEmMACUSQQAbQgAAQgAAiwE4GBawQgAAQgAAiwMiCIwDQv/LiwCBBBJBAA9CAABCAACLATgRFrBC/92LAIEDEkEAD0IAAEIAAIsBOCEWsEL/xosAIhJBAA5CAABCAACLATgHsEL/sYsAgQISQQAOQgAAQgAAiwE4CrBC/5tCAACLATgtFrBC/4+JQgAAMRkjEkQxECUSRCuwiYoBAEIAAIv/OBkjEkSL/zgQJRJEi/84PisSRIv/I8IaKRJEi/84GDIIEkSJigEBQgAAi/84AIv/OAFOAYv/OAJOAov/OANOA4v/OAROBIv/OAVOBYv/OAZOBov/OA9OB4v/OBZOCIv/OBdOCYv/OCBOCov/OAdOC4v/OAhODIv/OAlODUkVJBJEKE8BUE8BFlBPARZQTwEWUE8BFlBLARUWVwYCTwJQgfQBFlcGAk8CTwFQTgFJFYH0AQhOAUsDFSQSRE8DTwNPAVBLAxUWVwYCTwRQTgJPAxZXBgJQTwMWUEsDFSQSRE8DUEsDFSQSRE8DUEsDFSQSRE8DUE8DFlBLAxUkEkRPA1BPAVBPAVCJigEBQgAAi/84ECISQQAFQgAAIomL/zgQgQQSQQAFQgAAI4lCAAAjiUIAAIk=",
        "clear": "CkIAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
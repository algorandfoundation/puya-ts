{
    "name": "GtxnsAlgo",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test4",
            "args": [
                {
                    "type": "appl",
                    "name": "other"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        296
                    ],
                    "errorMessage": "OCA must be NoOp"
                },
                {
                    "pc": [
                        58,
                        85,
                        102,
                        119
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        312
                    ],
                    "errorMessage": "Other txn must be NoOp"
                },
                {
                    "pc": [
                        177
                    ],
                    "errorMessage": "Step cannot be zero"
                },
                {
                    "pc": [
                        147
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        63,
                        90,
                        107,
                        124
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        73
                    ],
                    "errorMessage": "transaction type is appl"
                },
                {
                    "pc": [
                        160
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CgptYWluX2Jsb2NrQDA6CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAAEGMRsiE0EAdzYaAIAEp4AA3oAE8ZCFJIAE35IPN4AE7bT5c08EjgQAPwAuAB0AAiJDMRkiEkQxGCITRDEWIwlJOBAkEkSIAOIjQv/kMRkiEkQxGCITRIgAxiNC/9MxGSISRDEYIhNEiAA5I0L/wjEZIhJEMRgiE0SIABsjQv+xMRkiTI4BAANC/6UxGCISRIgAqiNC/5oiOBAjEkQiOAgiDUSJigAAgABJMgQjRCKLA4sCDEEAaIsDSYwBOBBJjAAkEkEAD4sBOBgWsIsDIwiMA0L/2osAgQQSQQAJiwE4ERawQv/miwCBAxJBAAmLATghFrBC/9WLACMSQQAIiwE4B7BC/8aLAIECEkEACIsBOAqwQv+2iwE4LRawQv+tiTEZIhJEMRAkEkSJigEAi/84GSISRIv/OBAkEkSJiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}
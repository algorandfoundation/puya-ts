{
    "name": "StoreBoth",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [
                {
                    "type": "string",
                    "name": "theString"
                },
                {
                    "type": "uint64",
                    "name": "theUint"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setStore",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "stringStore": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RyaW5nU3RvcmU="
                },
                "uint64Store": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dWludDY0U3RvcmU="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        40
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        108
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        122,
                        158
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        131,
                        167
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        143
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBiIG1haW5fYmxvY2tAMAoKbWFpbl9ibG9ja0AwOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyADAAECQgAAMRhAAAlCAACIAN9CAABCAAAxGyITQQBCQgAAMRkiEkQxGCITQQAwQgAANhoAgATPNi1pgARI8m6FTwKOAgAQAApCAABCAABCAAAAiAA/Qv/ziAAVQv/tQv/tMRkiEjEYIhIQRIgAfyNDQgAANhoBSSJZIwskCEsBFRJEVwIANhoCSRWBCBJEF4gAHCNDQgAANhoBSSJZIwskCEsBFRJEVwIAiAATI0OKAgBCAACL/ogABov/iAAYiYoBAEIAAIALc3RyaW5nU3RvcmWL/2eJigEAQgAAgAt1aW50NjRTdG9yZYv/Z4lCAACJQgAAQgAAQgAAQgAAQgAAiQ==",
        "clear": "C0IAAIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}
#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 2

main_block@0:
    txn ApplicationID
    bnz main_after_if_else@2

main_if_body@1:
    callsub constructor

main_after_if_else@2:

main_block@3:
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@9

main_abi_routing@4:
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txna ApplicationArgs 0
    pushbytes 0xcf362d69 // method "test(string,uint64)void"
    pushbytes 0x48f26e85 // method "setStore(string)void"
    uncover 2
    match main_test_route@5 main_setStore_route@6

main_switch_case_default@7:

main_switch_case_next@8:

main_after_if_else@13:
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    intc_0 // 0

main_after_inlined_tests/approvals/multi-inheritance-2.algo.ts::StoreBoth.__puya_arc4_router__@14:
    return

main_setStore_route@6:
    // tests/approvals/multi-inheritance-2.algo.ts:8
    // setStore(value: string) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    intc_1 // 1
    *
    intc_2 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    // tests/approvals/multi-inheritance-2.algo.ts:8
    // setStore(value: string) {
    callsub setStore
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance-2.algo.ts::StoreBoth.__puya_arc4_router__@14

main_test_route@5:
    // tests/approvals/multi-inheritance-2.algo.ts:22
    // test(theString: string, theUint: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    intc_1 // 1
    *
    intc_2 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    txna ApplicationArgs 2
    dup
    len
    pushint 8 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    // tests/approvals/multi-inheritance-2.algo.ts:22
    // test(theString: string, theUint: uint64) {
    callsub test
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance-2.algo.ts::StoreBoth.__puya_arc4_router__@14

main_bare_routing@9:
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@10

main_switch_case_default@11:

main_switch_case_next@12:
    b main_after_if_else@13

main___algots__.defaultCreate@10:
    // tests/approvals/multi-inheritance-2.algo.ts:21
    // class StoreBoth extends classes(StoreString, StoreUint64) {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/multi-inheritance-2.algo.ts::StoreBoth.__puya_arc4_router__@14


// tests/approvals/multi-inheritance-2.algo.ts::StoreBoth.test(theString: bytes, theUint: uint64) -> void:
test:
    // tests/approvals/multi-inheritance-2.algo.ts:22
    // test(theString: string, theUint: uint64) {
    proto 2 0

test_block@0:
    // tests/approvals/multi-inheritance-2.algo.ts:24
    // this.setStore(theString)
    frame_dig -2
    callsub setStore
    // tests/approvals/multi-inheritance-2.algo.ts:27
    // super.class(StoreUint64).setStore(theUint)
    frame_dig -1
    callsub tests/approvals/multi-inheritance-2.algo.ts::StoreUint64.setStore
    retsub


// tests/approvals/multi-inheritance-2.algo.ts::StoreString.setStore(value: bytes) -> void:
setStore:
    // tests/approvals/multi-inheritance-2.algo.ts:8
    // setStore(value: string) {
    proto 1 0

setStore_block@0:
    // tests/approvals/multi-inheritance-2.algo.ts:6
    // stringStore = GlobalState<string>()
    pushbytes "stringStore"
    // tests/approvals/multi-inheritance-2.algo.ts:9
    // this.stringStore.value = value
    frame_dig -1
    app_global_put
    retsub


// tests/approvals/multi-inheritance-2.algo.ts::StoreUint64.setStore(value: uint64) -> void:
tests/approvals/multi-inheritance-2.algo.ts::StoreUint64.setStore:
    // tests/approvals/multi-inheritance-2.algo.ts:16
    // setStore(value: uint64) {
    proto 1 0

tests/approvals/multi-inheritance-2.algo.ts::StoreUint64.setStore_block@0:
    // tests/approvals/multi-inheritance-2.algo.ts:14
    // uint64Store = GlobalState<uint64>()
    pushbytes "uint64Store"
    // tests/approvals/multi-inheritance-2.algo.ts:17
    // this.uint64Store.value = value
    frame_dig -1
    app_global_put
    retsub


// tests/approvals/multi-inheritance-2.algo.ts::StoreBoth.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:

__algots__.defaultCreate_block@0:
    retsub


// polytype/lib/polytype-module.d.ts::ClusteredContract<tests/approvals/multi-inheritance-2.algo.ts::StoreString,tests/approvals/multi-inheritance-2.algo.ts::StoreUint64>.constructor() -> void:
constructor:

constructor_block@0:

constructor_block@1:

constructor_after_inlined_@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor@2:

constructor_block@3:

constructor_after_inlined_@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor@4:
    retsub

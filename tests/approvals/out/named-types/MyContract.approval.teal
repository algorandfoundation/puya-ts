#pragma version 10

tests/approvals/named-types.algo.ts::MyContract.approvalProgram:
    intcblock 1 0
    bytecblock 0x151f7c75
    callsub __puya_arc4_router__
    return


// tests/approvals/named-types.algo.ts::MyContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // tests/approvals/named-types.algo.ts:21
    // export class MyContract extends Contract {
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@9
    pushbytess 0xf02228b0 0xd908575b 0x577b1ffc 0xdc75f81d 0x040e2e4e // method "getXY()(uint64,uint64)", method "getYX()(uint64,uint64)", method "getAnon()(uint64,uint64)", method "test((uint64,uint64),(uint64,uint64))void", method "testing()((uint64,uint64),(uint64,uint64),(uint64,uint64))"
    txna ApplicationArgs 0
    match __puya_arc4_router___getXY_route@2 __puya_arc4_router___getYX_route@3 __puya_arc4_router___getAnon_route@4 __puya_arc4_router___test_route@5 __puya_arc4_router___testing_route@6
    intc_1 // 0
    retsub

__puya_arc4_router___getXY_route@2:
    // tests/approvals/named-types.algo.ts:22
    // public getXY(): XY {
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub getXY
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___getYX_route@3:
    // tests/approvals/named-types.algo.ts:29
    // public getYX(): YX {
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub getYX
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___getAnon_route@4:
    // tests/approvals/named-types.algo.ts:36
    // public getAnon() {
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub getAnon
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___test_route@5:
    // tests/approvals/named-types.algo.ts:43
    // public test(x: XY, y: YX) {}
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    intc_0 // 1
    retsub

__puya_arc4_router___testing_route@6:
    // tests/approvals/named-types.algo.ts:45
    // public testing() {
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub testing
    uncover 5
    itob
    uncover 5
    itob
    concat
    uncover 4
    itob
    uncover 4
    itob
    concat
    uncover 3
    itob
    uncover 3
    itob
    concat
    cover 2
    concat
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___bare_routing@9:
    // tests/approvals/named-types.algo.ts:21
    // export class MyContract extends Contract {
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@13
    txn ApplicationID
    !
    assert // is creating
    intc_0 // 1
    retsub

__puya_arc4_router___after_if_else@13:
    // tests/approvals/named-types.algo.ts:21
    // export class MyContract extends Contract {
    intc_1 // 0
    retsub


// tests/approvals/named-types.algo.ts::MyContract.getXY() -> uint64, uint64:
getXY:
    // tests/approvals/named-types.algo.ts:22
    // public getXY(): XY {
    proto 0 2
    // tests/approvals/named-types.algo.ts:24
    // x: 1,
    intc_0 // 1
    // tests/approvals/named-types.algo.ts:25
    // y: 2,
    pushint 2 // 2
    // tests/approvals/named-types.algo.ts:23-26
    // return {
    //   x: 1,
    //   y: 2,
    // }
    retsub


// tests/approvals/named-types.algo.ts::MyContract.getYX() -> uint64, uint64:
getYX:
    // tests/approvals/named-types.algo.ts:29
    // public getYX(): YX {
    proto 0 2
    // tests/approvals/named-types.algo.ts:31-32
    // x: 222,
    // y: 111,
    pushints 111 222 // 111, 222
    // tests/approvals/named-types.algo.ts:30-33
    // return {
    //   x: 222,
    //   y: 111,
    // }
    retsub


// tests/approvals/named-types.algo.ts::MyContract.getAnon() -> uint64, uint64:
getAnon:
    // tests/approvals/named-types.algo.ts:36
    // public getAnon() {
    proto 0 2
    // tests/approvals/named-types.algo.ts:38-39
    // x: Uint64(3),
    // y: Uint64(4),
    pushints 3 4 // 3, 4
    // tests/approvals/named-types.algo.ts:37-40
    // return {
    //   x: Uint64(3),
    //   y: Uint64(4),
    // }
    retsub


// tests/approvals/named-types.algo.ts::MyContract.testing() -> uint64, uint64, uint64, uint64, uint64, uint64:
testing:
    // tests/approvals/named-types.algo.ts:45
    // public testing() {
    proto 0 6
    // tests/approvals/named-types.algo.ts:46
    // const a = this.getXY()
    callsub getXY
    // tests/approvals/named-types.algo.ts:47
    // const b = this.getYX()
    callsub getYX
    // tests/approvals/named-types.algo.ts:48
    // const c = this.getAnon()
    callsub getAnon
    // tests/approvals/named-types.algo.ts:49
    // return [a, b, c] as const
    retsub

{
    "hints": {
        "setState((uint64,byte[]),uint64[10])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getState()(uint64,uint64,byte[],byte[],uint64[10])": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "clearState()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcHByb3ZhbHMvbG9jYWwtc3RhdGUuYWxnby50czo6TG9jYWxTdGF0ZURlbW8uY2xlYXJTdGF0ZVByb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 3,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "localBytes": {
                    "type": "bytes",
                    "key": "b1"
                },
                "localBytes2": {
                    "type": "bytes",
                    "key": "localBytes2"
                },
                "localEncoded": {
                    "type": "bytes",
                    "key": "localEncoded"
                },
                "localUint": {
                    "type": "uint64",
                    "key": "l1"
                },
                "localUint2": {
                    "type": "uint64",
                    "key": "localUint2"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "LocalStateDemo",
        "methods": [
            {
                "name": "setState",
                "args": [
                    {
                        "type": "(uint64,byte[])",
                        "name": "p"
                    },
                    {
                        "type": "uint64[10]",
                        "name": "c"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "getState",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint64,uint64,byte[],byte[],uint64[10])"
                }
            },
            {
                "name": "clearState",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
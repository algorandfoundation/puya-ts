{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/multi-inheritance.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKE;AAAkD;AAAlD;AAYA;;;;;;;;;;AAA8C;;AAA9C;AAZA;AAAkD;AAAlD;AAmBA;;;;;;;;;;;;;;;;;AAAA;AAgBA;;;;;;;;;;;;;;;;;;AAAA;AADF;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;;;AAdE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAWA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;AAAA;AAAA;;AAoCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAHF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 123"
    },
    "5": {
      "op": "bytecblock 0x151f7c750008626173652d74776f 0x151f7c750006636f6d6d6f6e \"stateCommon\""
    },
    "47": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "49": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "52": {
      "op": "bytec_2 // \"stateCommon\""
    },
    "53": {
      "op": "intc_1 // 123"
    },
    "54": {
      "op": "app_global_put"
    },
    "55": {
      "op": "pushbytes \"stateOne\""
    },
    "65": {
      "op": "pushint 45 // 45"
    },
    "67": {
      "op": "app_global_put"
    },
    "68": {
      "op": "bytec_2 // \"stateCommon\""
    },
    "69": {
      "op": "intc_1 // 123"
    },
    "70": {
      "op": "app_global_put"
    },
    "71": {
      "op": "pushbytess \"stateTwo\" \"Hello\" // \"stateTwo\", \"Hello\""
    },
    "88": {
      "op": "app_global_put"
    },
    "89": {
      "op": "pushbytess \"stateMulti\" \"Hmmm\" // \"stateMulti\", \"Hmmm\""
    },
    "107": {
      "op": "app_global_put"
    },
    "108": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "110": {
      "op": "bz main_bare_routing@15",
      "stack_out": []
    },
    "113": {
      "op": "pushbytess 0x290eba9f 0x839d96ff 0xa978ca56 0x88547eb8 0xc32533e3 0x455c8d09 0xf9f5142c 0x363b329e // method \"methodMulti()string\", method \"methodCallsSuper()string\", method \"callB2CantOverride()string\", method \"callB2Common()string\", method \"methodOne()string\", method \"methodCommon()string\", method \"b2CantOverride()string\", method \"methodTwo()string\""
    },
    "155": {
      "op": "txna ApplicationArgs 0"
    },
    "158": {
      "op": "match main_methodMulti_route@5 main_methodCallsSuper_route@6 main_callB2CantOverride_route@7 main_callB2Common_route@8 main_methodOne_route@9 main_methodCommon_route@10 main_b2CantOverride_route@11 main_methodTwo_route@12"
    },
    "176": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "178": {
      "op": "return"
    },
    "179": {
      "block": "main_methodTwo_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "181": {
      "op": "!",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "182": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "183": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "185": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "186": {
      "op": "bytec_0 // 0x151f7c750008626173652d74776f",
      "defined_out": [
        "0x151f7c750008626173652d74776f"
      ],
      "stack_out": [
        "0x151f7c750008626173652d74776f"
      ]
    },
    "187": {
      "op": "log",
      "stack_out": []
    },
    "188": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "189": {
      "op": "return"
    },
    "190": {
      "block": "main_b2CantOverride_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "192": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "193": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "194": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "196": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "197": {
      "op": "bytec_1 // 0x151f7c750006636f6d6d6f6e",
      "defined_out": [
        "0x151f7c750006636f6d6d6f6e"
      ],
      "stack_out": [
        "0x151f7c750006636f6d6d6f6e"
      ]
    },
    "198": {
      "op": "log",
      "stack_out": []
    },
    "199": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "200": {
      "op": "return"
    },
    "201": {
      "block": "main_methodCommon_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "203": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "204": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "205": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "207": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "208": {
      "op": "bytec_1 // 0x151f7c750006636f6d6d6f6e",
      "defined_out": [
        "0x151f7c750006636f6d6d6f6e"
      ],
      "stack_out": [
        "0x151f7c750006636f6d6d6f6e"
      ]
    },
    "209": {
      "op": "log",
      "stack_out": []
    },
    "210": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "211": {
      "op": "return"
    },
    "212": {
      "block": "main_methodOne_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "214": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "215": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "216": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "218": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "219": {
      "op": "pushbytes 0x151f7c750008626173652d6f6e65",
      "defined_out": [
        "0x151f7c750008626173652d6f6e65"
      ],
      "stack_out": [
        "0x151f7c750008626173652d6f6e65"
      ]
    },
    "235": {
      "op": "log",
      "stack_out": []
    },
    "236": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "237": {
      "op": "return"
    },
    "238": {
      "block": "main_callB2Common_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "240": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "241": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "242": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "244": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "245": {
      "op": "bytec_1 // 0x151f7c750006636f6d6d6f6e",
      "defined_out": [
        "0x151f7c750006636f6d6d6f6e"
      ],
      "stack_out": [
        "0x151f7c750006636f6d6d6f6e"
      ]
    },
    "246": {
      "op": "log",
      "stack_out": []
    },
    "247": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "248": {
      "op": "return"
    },
    "249": {
      "block": "main_callB2CantOverride_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "251": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "252": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "253": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "255": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "256": {
      "op": "bytec_0 // 0x151f7c750008626173652d74776f",
      "defined_out": [
        "0x151f7c750008626173652d74776f"
      ],
      "stack_out": [
        "0x151f7c750008626173652d74776f"
      ]
    },
    "257": {
      "op": "log",
      "stack_out": []
    },
    "258": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "259": {
      "op": "return"
    },
    "260": {
      "block": "main_methodCallsSuper_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "262": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "263": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "264": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "266": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "267": {
      "op": "bytec_0 // 0x151f7c750008626173652d74776f",
      "defined_out": [
        "0x151f7c750008626173652d74776f"
      ],
      "stack_out": [
        "0x151f7c750008626173652d74776f"
      ]
    },
    "268": {
      "op": "log",
      "stack_out": []
    },
    "269": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "270": {
      "op": "return"
    },
    "271": {
      "block": "main_methodMulti_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "273": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "274": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "275": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "277": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "278": {
      "op": "pushbytes 0x151f7c75000b6d756c74692d6261736573",
      "defined_out": [
        "0x151f7c75000b6d756c74692d6261736573"
      ],
      "stack_out": [
        "0x151f7c75000b6d756c74692d6261736573"
      ]
    },
    "297": {
      "op": "log",
      "stack_out": []
    },
    "298": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "299": {
      "op": "return"
    },
    "300": {
      "block": "main_bare_routing@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "302": {
      "op": "bnz main_after_if_else@19",
      "stack_out": []
    },
    "305": {
      "op": "txn ApplicationID"
    },
    "307": {
      "op": "!"
    },
    "308": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "309": {
      "op": "intc_0 // 1"
    },
    "310": {
      "op": "return"
    }
  }
}
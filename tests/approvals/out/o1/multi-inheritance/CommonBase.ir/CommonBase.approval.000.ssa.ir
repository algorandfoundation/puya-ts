main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let reinterpret_bool%0#0: bool = (txn ApplicationID)
        goto reinterpret_bool%0#0 ? block@2 : block@1
    block@1: // if_body_L1
        tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor()
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#0: bool = tests/approvals/multi-inheritance.algo.ts::CommonBase.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.__puya_arc4_router__() -> bool:
    block@0: // L10
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@8
    block@1: // abi_routing_L10
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (== tmp%2#0 NoOp)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        let tmp%5#0: bool = (!= tmp%4#0 0u)
        goto tmp%5#0 ? block@2 : block@6
    block@2: // call_NoOp_L10
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "methodCommon()string" => block@3, method "b2CantOverride()string" => block@4, * => block@5}
    block@3: // methodCommon_route_L13
        tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon[routing]()
        goto block@5
    block@4: // b2CantOverride_route_L17
        tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride[routing]()
        goto block@5
    block@5: // switch_case_next_L10
        goto block@7
    block@6: // create_NoOp_L10
        goto block@7
    block@7: // after_if_else_L10
        goto block@9
    block@8: // __algots__.defaultCreate_L10
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (== tmp%7#0 NoOp)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (== tmp%9#0 0u)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        tests/approvals/multi-inheritance.algo.ts::CommonBase.__algots__.defaultCreate()
        exit 1u
    block@9: // after_if_else_L10
        exit 0u

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon[routing]() -> void:
    block@0: // L13
        let tmp%0#0: string = tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon()
        let tmp%1#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>(tmp%0#0)
        let tmp%2#0: bytes = (concat 0x151f7c75 tmp%1#0)
        (log tmp%2#0)
        exit 1u

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride[routing]() -> void:
    block@0: // L17
        let tmp%0#0: string = tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride()
        let tmp%1#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>(tmp%0#0)
        let tmp%2#0: bytes = (concat 0x151f7c75 tmp%1#0)
        (log tmp%2#0)
        exit 1u

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.methodCommon() -> string:
    block@0: // L13
        return "common"

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.b2CantOverride() -> string:
    block@0: // L17
        return "common"

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.__algots__.defaultCreate() -> void:
    block@0: // L10
        return 

subroutine tests/approvals/multi-inheritance.algo.ts::CommonBase.constructor() -> void:
    block@0: // L10
        @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor()
        (app_global_put "stateCommon" 123u)
        return 

subroutine @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.constructor() -> void:
    block@0: // L1
        return 
{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/multi-inheritance.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAKE;;;;;;;;;;;;;AAAkD;;AAAlD;AAmBA;;;;;;;;;;;;;;;;;AAAA;AADF;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;;;AAhBE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AA2BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAFF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1"
    },
    "4": {
      "op": "bytecblock 0x151f7c750008626173652d74776f"
    },
    "21": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "23": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "26": {
      "op": "pushbytes \"stateCommon\""
    },
    "39": {
      "op": "pushint 123 // 123"
    },
    "41": {
      "op": "app_global_put"
    },
    "42": {
      "op": "pushbytess \"stateTwo\" \"Hello\" // \"stateTwo\", \"Hello\""
    },
    "59": {
      "op": "app_global_put"
    },
    "60": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "62": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "65": {
      "op": "pushbytess 0x363b329e 0xf9f5142c 0x455c8d09 // method \"methodTwo()string\", method \"b2CantOverride()string\", method \"methodCommon()string\""
    },
    "82": {
      "op": "txna ApplicationArgs 0"
    },
    "85": {
      "op": "match main_methodTwo_route@5 main_b2CantOverride_route@6 main_methodCommon_route@7"
    },
    "93": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "return"
    },
    "96": {
      "block": "main_methodCommon_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "98": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "99": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "102": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "103": {
      "op": "pushbytes 0x151f7c750006636f6d6d6f6e",
      "defined_out": [
        "0x151f7c750006636f6d6d6f6e"
      ],
      "stack_out": [
        "0x151f7c750006636f6d6d6f6e"
      ]
    },
    "117": {
      "op": "log",
      "stack_out": []
    },
    "118": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "119": {
      "op": "return"
    },
    "120": {
      "block": "main_b2CantOverride_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "122": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "123": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "126": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "127": {
      "op": "bytec_0 // 0x151f7c750008626173652d74776f",
      "defined_out": [
        "0x151f7c750008626173652d74776f"
      ],
      "stack_out": [
        "0x151f7c750008626173652d74776f"
      ]
    },
    "128": {
      "op": "log",
      "stack_out": []
    },
    "129": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "op": "return"
    },
    "131": {
      "block": "main_methodTwo_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "133": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "134": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "135": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "137": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "138": {
      "op": "bytec_0 // 0x151f7c750008626173652d74776f",
      "defined_out": [
        "0x151f7c750008626173652d74776f"
      ],
      "stack_out": [
        "0x151f7c750008626173652d74776f"
      ]
    },
    "139": {
      "op": "log",
      "stack_out": []
    },
    "140": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "return"
    },
    "142": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "144": {
      "op": "bnz main_after_if_else@14",
      "stack_out": []
    },
    "147": {
      "op": "txn ApplicationID"
    },
    "149": {
      "op": "!"
    },
    "150": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "151": {
      "op": "intc_0 // 1"
    },
    "152": {
      "op": "return"
    }
  }
}
{
    "name": "MultiBases",
    "structs": {},
    "methods": [
        {
            "name": "methodMulti",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodCallsSuper",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "callB2CantOverride",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "callB2Common",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodOne",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodCommon",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "b2CantOverride",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "methodTwo",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "stateMulti": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RhdGVNdWx0aQ=="
                },
                "stateOne": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "c3RhdGVPbmU="
                },
                "stateCommon": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "c3RhdGVDb21tb24="
                },
                "stateTwo": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RhdGVUd28="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        182,
                        193,
                        204,
                        215,
                        241,
                        252,
                        263,
                        274
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        308
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        185,
                        196,
                        207,
                        218,
                        244,
                        255,
                        266,
                        277
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAxMjMKICAgIGJ5dGVjYmxvY2sgMHgxNTFmN2M3NTAwMDg2MjYxNzM2NTJkNzQ3NzZmIDB4MTUxZjdjNzUwMDA2NjM2ZjZkNmQ2ZjZlICJzdGF0ZUNvbW1vbiIKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjYKICAgIC8vIHN0YXRlQ29tbW9uID0gR2xvYmFsU3RhdGU8dWludDY0Pih7IGluaXRpYWxWYWx1ZTogMTIzIH0pCiAgICBieXRlY18yIC8vICJzdGF0ZUNvbW1vbiIKICAgIGludGNfMSAvLyAxMjMKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czoxOAogICAgLy8gc3RhdGVPbmUgPSBHbG9iYWxTdGF0ZSh7IGluaXRpYWxWYWx1ZTogVWludDY0KDQ1KSB9KQogICAgcHVzaGJ5dGVzICJzdGF0ZU9uZSIKICAgIHB1c2hpbnQgNDUgLy8gNDUKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czo2CiAgICAvLyBzdGF0ZUNvbW1vbiA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oeyBpbml0aWFsVmFsdWU6IDEyMyB9KQogICAgYnl0ZWNfMiAvLyAic3RhdGVDb21tb24iCiAgICBpbnRjXzEgLy8gMTIzCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6MjUKICAgIC8vIHN0YXRlVHdvID0gR2xvYmFsU3RhdGUoeyBpbml0aWFsVmFsdWU6ICdIZWxsbycgfSkKICAgIHB1c2hieXRlc3MgInN0YXRlVHdvIiAiSGVsbG8iIC8vICJzdGF0ZVR3byIsICJIZWxsbyIKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czo0MQogICAgLy8gc3RhdGVNdWx0aSA9IEdsb2JhbFN0YXRlKHsgaW5pdGlhbFZhbHVlOiAnSG1tbScgfSkKICAgIHB1c2hieXRlc3MgInN0YXRlTXVsdGkiICJIbW1tIiAvLyAic3RhdGVNdWx0aSIsICJIbW1tIgogICAgYXBwX2dsb2JhbF9wdXQKCm1haW5fYWZ0ZXJfaWZfZWxzZUAyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NDAKICAgIC8vIGV4cG9ydCBjbGFzcyBNdWx0aUJhc2VzIGV4dGVuZHMgY2xhc3NlcyhCYXNlT25lLCBCYXNlVHdvKSB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdAMTUKICAgIHB1c2hieXRlc3MgMHgyOTBlYmE5ZiAweDgzOWQ5NmZmIDB4YTk3OGNhNTYgMHg4ODU0N2ViOCAweGMzMjUzM2UzIDB4NDU1YzhkMDkgMHhmOWY1MTQyYyAweDM2M2IzMjllIC8vIG1ldGhvZCAibWV0aG9kTXVsdGkoKXN0cmluZyIsIG1ldGhvZCAibWV0aG9kQ2FsbHNTdXBlcigpc3RyaW5nIiwgbWV0aG9kICJjYWxsQjJDYW50T3ZlcnJpZGUoKXN0cmluZyIsIG1ldGhvZCAiY2FsbEIyQ29tbW9uKClzdHJpbmciLCBtZXRob2QgIm1ldGhvZE9uZSgpc3RyaW5nIiwgbWV0aG9kICJtZXRob2RDb21tb24oKXN0cmluZyIsIG1ldGhvZCAiYjJDYW50T3ZlcnJpZGUoKXN0cmluZyIsIG1ldGhvZCAibWV0aG9kVHdvKClzdHJpbmciCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX21ldGhvZE11bHRpX3JvdXRlQDUgbWFpbl9tZXRob2RDYWxsc1N1cGVyX3JvdXRlQDYgbWFpbl9jYWxsQjJDYW50T3ZlcnJpZGVfcm91dGVANyBtYWluX2NhbGxCMkNvbW1vbl9yb3V0ZUA4IG1haW5fbWV0aG9kT25lX3JvdXRlQDkgbWFpbl9tZXRob2RDb21tb25fcm91dGVAMTAgbWFpbl9iMkNhbnRPdmVycmlkZV9yb3V0ZUAxMSBtYWluX21ldGhvZFR3b19yb3V0ZUAxMgoKbWFpbl9hZnRlcl9pZl9lbHNlQDE5OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NDAKICAgIC8vIGV4cG9ydCBjbGFzcyBNdWx0aUJhc2VzIGV4dGVuZHMgY2xhc3NlcyhCYXNlT25lLCBCYXNlVHdvKSB7CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX21ldGhvZFR3b19yb3V0ZUAxMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjI2CiAgICAvLyBtZXRob2RUd28oKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NTAwMDg2MjYxNzM2NTJkNzQ3NzZmCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYjJDYW50T3ZlcnJpZGVfcm91dGVAMTE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czoxMgogICAgLy8gYjJDYW50T3ZlcnJpZGUoKTogc3RyaW5nIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1MDAwNjYzNmY2ZDZkNmY2ZQogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX21ldGhvZENvbW1vbl9yb3V0ZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tdWx0aS1pbmhlcml0YW5jZS5hbGdvLnRzOjgKICAgIC8vIG1ldGhvZENvbW1vbigpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1MDAwNjYzNmY2ZDZkNmY2ZQogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX21ldGhvZE9uZV9yb3V0ZUA5OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6MTkKICAgIC8vIG1ldGhvZE9uZSgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUwMDA4NjI2MTczNjUyZDZmNmU2NQogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2NhbGxCMkNvbW1vbl9yb3V0ZUA4OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NTUKICAgIC8vIGNhbGxCMkNvbW1vbigpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1MDAwNjYzNmY2ZDZkNmY2ZQogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2NhbGxCMkNhbnRPdmVycmlkZV9yb3V0ZUA3OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NTEKICAgIC8vIGNhbGxCMkNhbnRPdmVycmlkZSgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1MDAwODYyNjE3MzY1MmQ3NDc3NmYKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9tZXRob2RDYWxsc1N1cGVyX3JvdXRlQDY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbXVsdGktaW5oZXJpdGFuY2UuYWxnby50czo0NwogICAgLy8gbWV0aG9kQ2FsbHNTdXBlcigpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1MDAwODYyNjE3MzY1MmQ3NDc3NmYKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9tZXRob2RNdWx0aV9yb3V0ZUA1OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NDMKICAgIC8vIG1ldGhvZE11bHRpKCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NTAwMGI2ZDc1NmM3NDY5MmQ2MjYxNzM2NTczCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDE1OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL211bHRpLWluaGVyaXRhbmNlLmFsZ28udHM6NDAKICAgIC8vIGV4cG9ydCBjbGFzcyBNdWx0aUJhc2VzIGV4dGVuZHMgY2xhc3NlcyhCYXNlT25lLCBCYXNlVHdvKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDE5CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAXsmAw4VH3x1AAhiYXNlLXR3bwwVH3x1AAZjb21tb24Lc3RhdGVDb21tb24xGEAAOCojZ4AIc3RhdGVPbmWBLWcqI2eCAghzdGF0ZVR3bwVIZWxsb2eCAgpzdGF0ZU11bHRpBEhtbW1nMRtBALuCCAQpDrqfBIOdlv8EqXjKVgSIVH64BMMlM+MERVyNCQT59RQsBDY7Mp42GgCOCABfAFQASQA+ACQAGQAOAAOBAEMxGRREMRhEKLAiQzEZFEQxGEQpsCJDMRkURDEYRCmwIkMxGRREMRhEgA4VH3x1AAhiYXNlLW9uZbAiQzEZFEQxGEQpsCJDMRkURDEYRCiwIkMxGRREMRhEKLAiQzEZFEQxGESAERUffHUAC211bHRpLWJhc2VzsCJDMRlA/38xGBREIkM=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 11,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
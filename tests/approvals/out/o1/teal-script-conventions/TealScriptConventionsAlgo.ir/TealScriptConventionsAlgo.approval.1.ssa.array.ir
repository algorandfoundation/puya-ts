main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@10
    block@2: // abi_routing_L5
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "noMoreThanks(uint64)uint64" => block@3, method "createApplication(byte[])void" => block@4, method "setLocal(string)void" => block@5, method "optInToApplication()void" => block@6, method "updateApplication()void" => block@7, * => block@14}
    block@3: // noMoreThanks_route_L8
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 CloseOut)
        (assert tmp%4#0) // OnCompletion is not CloseOut
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let arg#0: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        let array%val_as_bytes%0#1: bytes[8] = (itob arg#0)
        let array%as_Encoded(uint64)%0#1: Encoded(uint64) = array%val_as_bytes%0#1
        let tmp%9#0: Encoded(uint64) = array%as_Encoded(uint64)%0#1
        let tmp%10#0: bytes = (concat 0x151f7c75 tmp%9#0)
        (log tmp%10#0)
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#0: bool = 1u
        goto block@15
    block@4: // createApplication_route_L12
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: uint64 = (shl 1u tmp%11#0)
        let tmp%13#0: uint64 = (& tmp%12#0 33u)
        (assert tmp%13#0) // OnCompletion is not one of NoOp, DeleteApplication
        let tmp%14#0: uint64 = (txn ApplicationID)
        let tmp%15#0: bool = (! tmp%14#0)
        (assert tmp%15#0) // can only call when creating
        let reinterpret_Encoded(len+uint8[])%0#0: Encoded(len+uint8[]) = (txna ApplicationArgs 1)
        let tmp%16#0: bytes = ((extract 2 0) reinterpret_Encoded(len+uint8[])%0#0)
        tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.createApplication(tmp%16#0)
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#1: bool = 1u
        goto block@15
    block@5: // setLocal_route_L17
        let tmp%17#0: uint64 = (txn OnCompletion)
        let tmp%18#0: bool = (! tmp%17#0)
        (assert tmp%18#0) // OnCompletion is not NoOp
        let tmp%19#0: uint64 = (txn ApplicationID)
        (assert tmp%19#0) // can only call when not creating
        let reinterpret_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let tmp%21#0: string = ((extract 2 0) reinterpret_Encoded(len+utf8[])%0#0)
        tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.setLocal(tmp%21#0)
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#2: bool = 1u
        goto block@15
    block@6: // optInToApplication_route_L23
        let tmp%22#0: uint64 = (txn OnCompletion)
        let tmp%23#0: bool = (== tmp%22#0 OptIn)
        (assert tmp%23#0) // OnCompletion is not OptIn
        let tmp%24#0: uint64 = (txn ApplicationID)
        (assert tmp%24#0) // can only call when not creating
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#3: bool = 1u
        goto block@15
    block@7: // updateApplication_route_L25
        let tmp%26#0: uint64 = (txn OnCompletion)
        let tmp%27#0: bool = (== tmp%26#0 UpdateApplication)
        (assert tmp%27#0) // OnCompletion is not UpdateApplication
        let tmp%28#0: uint64 = (txn ApplicationID)
        (assert tmp%28#0) // can only call when not creating
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#4: bool = 1u
        goto block@15
    block@10: // bare_routing_L5
        let tmp%30#0: uint64 = (txn OnCompletion)
        switch tmp%30#0 {5u => block@11, * => block@14}
    block@11: // deleteApplication_L20
        let tmp%31#0: uint64 = (txn ApplicationID)
        (assert tmp%31#0) // can only call when not creating
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#5: bool = 1u
        goto block@15
    block@14: // after_if_else_L5
        let tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#6: bool = 0u
        goto block@15
    block@15: // after_inlined_tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#0 <- block@3, tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#1 <- block@4, tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#2 <- block@5, tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#3 <- block@6, tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#4 <- block@7, tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#5 <- block@11, tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.__puya_arc4_router__%0#6 <- block@14)
        return tmp%0#0

subroutine tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.createApplication(value: bytes) -> void:
    block@0: // L12
        (app_global_put "global" value#0)
        return 

subroutine tests/approvals/teal-script-conventions.algo.ts::TealScriptConventionsAlgo.setLocal(value: string) -> void:
    block@0: // L17
        let tmp%0#0: account = (txn Sender)
        (app_local_put tmp%0#0 "local" value#0)
        return 
#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 0 32
    bytecblock 0x068101
    // tests/approvals/accounts.algo.ts:8
    // export class AccountsContract extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@9
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x0adee59f 0xf62943d1 // method "getAccountInfo(address,uint64)(byte[32],uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,bool,bool)", method "otherAccount()void"
    txna ApplicationArgs 0
    match getAccountInfo main_otherAccount_route@5
    err

main_otherAccount_route@5:
    // tests/approvals/accounts.algo.ts:30
    // public otherAccount() {
    intc_0 // 1
    return

main___algots__.defaultCreate@9:
    // tests/approvals/accounts.algo.ts:8
    // export class AccountsContract extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// tests/approvals/accounts.algo.ts::AccountsContract.getAccountInfo[routing]() -> void:
getAccountInfo:
    // tests/approvals/accounts.algo.ts:9
    // public getAccountInfo(account: Account, asset: Asset) {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi

getAccountInfo_while_top@2:
    pushint 1410 // 1410
    global OpcodeBudget
    >
    bz getAccountInfo_after_while@7
    itxn_begin
    pushint 6 // appl
    itxn_field TypeEnum
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x068101
    itxn_field ApprovalProgram
    bytec_0 // 0x068101
    itxn_field ClearStateProgram
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    b getAccountInfo_while_top@2

getAccountInfo_after_while@7:
    // tests/approvals/accounts.algo.ts:13
    // balance: account.balance,
    dig 1
    dup
    acct_params_get AcctBalance
    assert // account funded
    // tests/approvals/accounts.algo.ts:14
    // minBalance: account.minBalance,
    dig 1
    acct_params_get AcctMinBalance
    assert // account funded
    // tests/approvals/accounts.algo.ts:15
    // authAddress: account.authAddress.bytes,
    dig 2
    acct_params_get AcctAuthAddr
    assert // account funded
    // tests/approvals/accounts.algo.ts:16
    // totalNumUint: account.totalNumUint,
    dig 3
    acct_params_get AcctTotalNumUint
    assert // account funded
    // tests/approvals/accounts.algo.ts:17
    // totalNumByteSlice: account.totalNumByteSlice,
    dig 4
    acct_params_get AcctTotalNumByteSlice
    assert // account funded
    // tests/approvals/accounts.algo.ts:18
    // totalExtraAppPages: account.totalExtraAppPages,
    dig 5
    acct_params_get AcctTotalExtraAppPages
    assert // account funded
    // tests/approvals/accounts.algo.ts:19
    // totalAppsCreated: account.totalAppsCreated,
    dig 6
    acct_params_get AcctTotalAppsCreated
    assert // account funded
    // tests/approvals/accounts.algo.ts:20
    // totalAppsOptedIn: account.totalAppsOptedIn,
    dig 7
    acct_params_get AcctTotalAppsOptedIn
    assert // account funded
    // tests/approvals/accounts.algo.ts:21
    // totalAssetsCreated: account.totalAssetsCreated,
    dig 8
    acct_params_get AcctTotalAssetsCreated
    assert // account funded
    // tests/approvals/accounts.algo.ts:22
    // totalAssets: account.totalAssets,
    dig 9
    acct_params_get AcctTotalAssets
    assert // account funded
    // tests/approvals/accounts.algo.ts:23
    // totalBoxes: account.totalBoxes,
    dig 10
    acct_params_get AcctTotalBoxes
    assert // account funded
    // tests/approvals/accounts.algo.ts:24
    // totalBoxBytes: account.totalBoxBytes,
    dig 11
    acct_params_get AcctTotalBoxBytes
    assert // account funded
    // tests/approvals/accounts.algo.ts:25
    // isOptInApp: account.isOptedIn(Global.currentApplicationId),
    dig 12
    global CurrentApplicationID
    app_opted_in
    // tests/approvals/accounts.algo.ts:26
    // isOptInAsset: account.isOptedIn(asset),
    dig 13
    dig 15
    asset_holding_get AssetBalance
    cover 15
    pop
    // tests/approvals/accounts.algo.ts:11-27
    // return {
    //   bytes: account.bytes,
    //   balance: account.balance,
    //   minBalance: account.minBalance,
    //   authAddress: account.authAddress.bytes,
    //   totalNumUint: account.totalNumUint,
    //   totalNumByteSlice: account.totalNumByteSlice,
    //   totalExtraAppPages: account.totalExtraAppPages,
    //   totalAppsCreated: account.totalAppsCreated,
    //   totalAppsOptedIn: account.totalAppsOptedIn,
    //   totalAssetsCreated: account.totalAssetsCreated,
    //   totalAssets: account.totalAssets,
    //   totalBoxes: account.totalBoxes,
    //   totalBoxBytes: account.totalBoxBytes,
    //   isOptInApp: account.isOptedIn(Global.currentApplicationId),
    //   isOptInAsset: account.isOptedIn(asset),
    // }
    dig 13
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 12
    itob
    uncover 13
    swap
    concat
    uncover 12
    itob
    concat
    dig 11
    len
    intc_2 // 32
    ==
    assert // invalid size
    uncover 11
    concat
    uncover 10
    itob
    concat
    uncover 9
    itob
    concat
    uncover 8
    itob
    concat
    uncover 7
    itob
    concat
    uncover 6
    itob
    concat
    uncover 5
    itob
    concat
    uncover 4
    itob
    concat
    uncover 3
    itob
    concat
    uncover 2
    itob
    concat
    pushbytes 0x00
    intc_1 // 0
    uncover 3
    setbit
    intc_0 // 1
    uncover 3
    setbit
    concat
    // tests/approvals/accounts.algo.ts:9
    // public getAccountInfo(account: Account, asset: Asset) {
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

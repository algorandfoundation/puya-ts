main tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.approvalProgram:
    block@0: // L4
        (log "before")
        let tmp%0#0: bool = @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram()
        let result#0: bool = tmp%0#0
        (log "after")
        return result#0

subroutine tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__puya_arc4_router__() -> bool:
    block@0: // L3
        let %did_match_routing#0: bool = 0u
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@4
    block@1: // abi_routing_L3
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "someMethod()void" => block@2, * => block@3}
    block@2: // someMethod_route_L16
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        let tmp%7#0: bool = (&& tmp%4#0 tmp%6#0)
        (assert tmp%7#0) // OnCompletion must be NoOp && can only call when not creating
        tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.someMethod[routing]()
        let %did_match_routing#1: bool = 1u
        goto block@3
    block@3: // switch_case_next_L3
        let %did_match_routing#4: bool = φ(%did_match_routing#0 <- block@1, %did_match_routing#1 <- block@2)
        goto block@5
    block@4: // __algots__.defaultCreate_L3
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 NoOp)
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (== tmp%10#0 0u)
        let tmp%12#0: bool = (&& tmp%9#0 tmp%11#0)
        (assert tmp%12#0) // OnCompletion must be NoOp && can only call when creating
        tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__algots__.defaultCreate()
        let %did_match_routing#2: bool = 1u
        goto block@5
    block@5: // after_if_else_L3
        let %did_match_routing#3: bool = φ(%did_match_routing#4 <- block@3, %did_match_routing#2 <- block@4)
        return %did_match_routing#3

subroutine tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.someMethod[routing]() -> void:
    block@0: // L16
        tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.someMethod()
        return 

subroutine tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.someMethod() -> void:
    block@0: // L16
        (log "some method")
        return 

subroutine @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> bool:
    block@0: // L1
        let tmp%0#0: bool = tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__puya_arc4_router__()
        return tmp%0#0

subroutine tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__algots__.defaultCreate() -> void:
    block@0: // L3
        return 
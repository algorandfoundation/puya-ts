#pragma version 10
#pragma typetrack false

// tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.approvalProgram() -> uint64:
main:
    // tests/approvals/arc4-hybrid.algo.ts:5
    // log('before')
    pushbytes "before"
    log
    // tests/approvals/arc4-hybrid.algo.ts:3
    // class Arc4HybridAlgo extends Contract {
    txn NumAppArgs
    bz main_bare_routing@4
    pushbytes 0xc258469e // method "someMethod()void"
    txna ApplicationArgs 0
    match main_someMethod_route@3

main_after_if_else@6:
    // tests/approvals/arc4-hybrid.algo.ts:3
    // class Arc4HybridAlgo extends Contract {
    pushint 0 // 0

main_after_inlined_tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__puya_arc4_router__@7:
    // tests/approvals/arc4-hybrid.algo.ts:7
    // log('after')
    pushbytes "after"
    log
    // tests/approvals/arc4-hybrid.algo.ts:8
    // return result
    return

main_someMethod_route@3:
    // tests/approvals/arc4-hybrid.algo.ts:11
    // someMethod() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub someMethod
    pushint 1 // 1
    b main_after_inlined_tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__puya_arc4_router__@7

main_bare_routing@4:
    // tests/approvals/arc4-hybrid.algo.ts:3
    // class Arc4HybridAlgo extends Contract {
    txn OnCompletion
    bnz main_after_if_else@6
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    b main_after_inlined_tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.__puya_arc4_router__@7


// tests/approvals/arc4-hybrid.algo.ts::Arc4HybridAlgo.someMethod() -> void:
someMethod:
    // tests/approvals/arc4-hybrid.algo.ts:12
    // log('some method')
    pushbytes "some method"
    log
    retsub

#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 0 8 42
    bytecblock 0x151f7c75
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txn NumAppArgs
    bz main_bare_routing@13
    pushbytess 0xcf1f20b8 0xc2a2bd6b 0xf3b4fec8 0x8c16ee87 0xb2c753bf 0xd1b5beee 0xa1cc0d94 0x961846c6 // method "test_for_of_loop_tuple((uint64,uint64,uint64))uint64", method "test_for_of_loop_destructured_tuple(uint64[])uint64", method "test_for_of_loop_destructured_object((uint64,uint64)[])uint64", method "test_for_of_loop_arc4_dynamic_array(uint64[])uint64", method "test_for_of_loop_arc4_static_array(uint64[5])uint64", method "test_for_of_loop_native_immutable_array(uint64[])uint64", method "test_for_of_loop_native_mutable_array((uint64,uint64,uint64))uint64", method "test_iterable_props(uint64[3],uint64[3],uint64[])uint64"
    txna ApplicationArgs 0
    match main_test_for_of_loop_tuple_route@3 main_test_for_of_loop_destructured_tuple_route@4 main_test_for_of_loop_destructured_object_route@5 main_test_for_of_loop_arc4_dynamic_array_route@6 main_test_for_of_loop_arc4_static_array_route@7 main_test_for_of_loop_native_immutable_array_route@8 main_test_for_of_loop_native_mutable_array_route@9 main_test_iterable_props_route@10

main_after_if_else@17:
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    intc_1 // 0
    return

main_test_iterable_props_route@10:
    // tests/approvals/for-of-loops.algo.ts:73
    // test_iterable_props(static_array: StaticArray<Uint64, 3>, fixed_array: FixedArray<uint64, 3>, dyn_array: DynamicArray<Uint64>) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    // tests/approvals/for-of-loops.algo.ts:73
    // test_iterable_props(static_array: StaticArray<Uint64, 3>, fixed_array: FixedArray<uint64, 3>, dyn_array: DynamicArray<Uint64>) {
    callsub test_iterable_props
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_native_mutable_array_route@9:
    // tests/approvals/for-of-loops.algo.ts:63
    // test_for_of_loop_native_mutable_array(items: [uint64, uint64, uint64]) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/for-of-loops.algo.ts:63
    // test_for_of_loop_native_mutable_array(items: [uint64, uint64, uint64]) {
    callsub test_for_of_loop_native_mutable_array
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_native_immutable_array_route@8:
    // tests/approvals/for-of-loops.algo.ts:54
    // test_for_of_loop_native_immutable_array(items: Array<uint64>) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/for-of-loops.algo.ts:54
    // test_for_of_loop_native_immutable_array(items: Array<uint64>) {
    callsub test_for_of_loop_native_immutable_array
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_arc4_static_array_route@7:
    // tests/approvals/for-of-loops.algo.ts:45
    // test_for_of_loop_arc4_static_array(items: StaticArray<Uint64, 5>) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/for-of-loops.algo.ts:45
    // test_for_of_loop_arc4_static_array(items: StaticArray<Uint64, 5>) {
    callsub test_for_of_loop_arc4_static_array
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_arc4_dynamic_array_route@6:
    // tests/approvals/for-of-loops.algo.ts:36
    // test_for_of_loop_arc4_dynamic_array(items: DynamicArray<Uint64>) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/for-of-loops.algo.ts:36
    // test_for_of_loop_arc4_dynamic_array(items: DynamicArray<Uint64>) {
    callsub test_for_of_loop_arc4_dynamic_array
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_destructured_object_route@5:
    // tests/approvals/for-of-loops.algo.ts:27
    // test_for_of_loop_destructured_object(items: Point[]) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/for-of-loops.algo.ts:27
    // test_for_of_loop_destructured_object(items: Point[]) {
    callsub test_for_of_loop_destructured_object
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_destructured_tuple_route@4:
    // tests/approvals/for-of-loops.algo.ts:18
    // test_for_of_loop_destructured_tuple(items: DynamicArray<Uint64>) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/for-of-loops.algo.ts:18
    // test_for_of_loop_destructured_tuple(items: DynamicArray<Uint64>) {
    callsub test_for_of_loop_destructured_tuple
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_test_for_of_loop_tuple_route@3:
    // tests/approvals/for-of-loops.algo.ts:9
    // test_for_of_loop_tuple(items: readonly [uint64, uint64, uint64]) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txna ApplicationArgs 1
    dup
    intc_1 // 0
    extract_uint64
    dig 1
    intc_2 // 8
    extract_uint64
    uncover 2
    pushint 16 // 16
    extract_uint64
    // tests/approvals/for-of-loops.algo.ts:9
    // test_for_of_loop_tuple(items: readonly [uint64, uint64, uint64]) {
    callsub test_for_of_loop_tuple
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_bare_routing@13:
    // tests/approvals/for-of-loops.algo.ts:8
    // export class ForOfLoopsAlgo extends Contract {
    txn OnCompletion
    bnz main_after_if_else@17
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_tuple(items.0: uint64, items.1: uint64, items.2: uint64) -> uint64:
test_for_of_loop_tuple:
    // tests/approvals/for-of-loops.algo.ts:9
    // test_for_of_loop_tuple(items: readonly [uint64, uint64, uint64]) {
    proto 3 1
    // tests/approvals/for-of-loops.algo.ts:10
    // let total: uint64 = 0
    intc_1 // 0
    dup
    frame_dig -3

test_for_of_loop_tuple_for_body@1:
    // tests/approvals/for-of-loops.algo.ts:12
    // total += item
    frame_dig 0
    dig 1
    +
    frame_bury 0
    // tests/approvals/for-of-loops.algo.ts:13
    // if (item === stopNumber) break
    intc_3 // 42
    ==
    bnz test_for_of_loop_tuple_block@8
    // tests/approvals/for-of-loops.algo.ts:11
    // for (const item of items) {
    frame_dig 1
    switch test_for_of_loop_tuple_for_header_1@5 test_for_of_loop_tuple_for_header_2@6

test_for_of_loop_tuple_block@8:
    // tests/approvals/for-of-loops.algo.ts:15
    // return total
    retsub

test_for_of_loop_tuple_for_header_2@6:
    pushint 2 // 2
    frame_bury 1
    frame_dig -1
    b test_for_of_loop_tuple_for_body@1

test_for_of_loop_tuple_for_header_1@5:
    intc_0 // 1
    frame_bury 1
    frame_dig -2
    b test_for_of_loop_tuple_for_body@1


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_destructured_tuple(items: bytes) -> uint64:
test_for_of_loop_destructured_tuple:
    // tests/approvals/for-of-loops.algo.ts:18
    // test_for_of_loop_destructured_tuple(items: DynamicArray<Uint64>) {
    proto 1 1
    // tests/approvals/for-of-loops.algo.ts:19
    // let total: uint64 = 0
    intc_1 // 0
    // tests/approvals/for-of-loops.algo.ts:20
    // for (const [index, v] of items.entries()) {
    frame_dig -1
    intc_1 // 0
    extract_uint16
    intc_1 // 0

test_for_of_loop_destructured_tuple_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:20
    // for (const [index, v] of items.entries()) {
    frame_dig 2
    frame_dig 1
    <
    bz test_for_of_loop_destructured_tuple_block@7
    frame_dig -1
    extract 2 0
    frame_dig 2
    intc_2 // 8
    *
    // tests/approvals/for-of-loops.algo.ts:21
    // total += v.native
    extract_uint64
    frame_dig 0
    +
    dup
    frame_bury 0
    // tests/approvals/for-of-loops.algo.ts:22
    // if (total >= stopNumber) break
    intc_3 // 42
    >=
    bnz test_for_of_loop_destructured_tuple_block@7
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    b test_for_of_loop_destructured_tuple_for_header@1

test_for_of_loop_destructured_tuple_block@7:
    // tests/approvals/for-of-loops.algo.ts:24
    // return total
    retsub


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_destructured_object(items: bytes) -> uint64:
test_for_of_loop_destructured_object:
    // tests/approvals/for-of-loops.algo.ts:27
    // test_for_of_loop_destructured_object(items: Point[]) {
    proto 1 1
    // tests/approvals/for-of-loops.algo.ts:28
    // let total: uint64 = 0
    intc_1 // 0
    // tests/approvals/for-of-loops.algo.ts:29
    // for (const { x, y } of clone(items)) {
    frame_dig -1
    intc_1 // 0
    extract_uint16
    intc_1 // 0

test_for_of_loop_destructured_object_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:29
    // for (const { x, y } of clone(items)) {
    frame_dig 2
    frame_dig 1
    <
    bz test_for_of_loop_destructured_object_block@7
    frame_dig -1
    extract 2 0
    frame_dig 2
    pushint 16 // 16
    *
    pushint 16 // 16
    extract3 // on error: index access is out of bounds
    dup
    intc_1 // 0
    extract_uint64
    swap
    intc_2 // 8
    extract_uint64
    // tests/approvals/for-of-loops.algo.ts:30
    // total += x + y
    +
    frame_dig 0
    +
    dup
    frame_bury 0
    // tests/approvals/for-of-loops.algo.ts:31
    // if (total >= stopNumber) break
    intc_3 // 42
    >=
    bnz test_for_of_loop_destructured_object_block@7
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    b test_for_of_loop_destructured_object_for_header@1

test_for_of_loop_destructured_object_block@7:
    // tests/approvals/for-of-loops.algo.ts:33
    // return total
    retsub


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_arc4_dynamic_array(items: bytes) -> uint64:
test_for_of_loop_arc4_dynamic_array:
    // tests/approvals/for-of-loops.algo.ts:36
    // test_for_of_loop_arc4_dynamic_array(items: DynamicArray<Uint64>) {
    proto 1 1
    // tests/approvals/for-of-loops.algo.ts:37
    // let total: uint64 = 0
    intc_1 // 0
    // tests/approvals/for-of-loops.algo.ts:38
    // for (const item of items) {
    frame_dig -1
    intc_1 // 0
    extract_uint16
    intc_1 // 0

test_for_of_loop_arc4_dynamic_array_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:38
    // for (const item of items) {
    frame_dig 2
    frame_dig 1
    <
    bz test_for_of_loop_arc4_dynamic_array_block@7
    frame_dig -1
    extract 2 0
    frame_dig 2
    intc_2 // 8
    *
    // tests/approvals/for-of-loops.algo.ts:39
    // total += item.native
    extract_uint64
    frame_dig 0
    dig 1
    +
    frame_bury 0
    // tests/approvals/for-of-loops.algo.ts:40
    // if (item.native === stopNumber) break
    intc_3 // 42
    ==
    bnz test_for_of_loop_arc4_dynamic_array_block@7
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    b test_for_of_loop_arc4_dynamic_array_for_header@1

test_for_of_loop_arc4_dynamic_array_block@7:
    // tests/approvals/for-of-loops.algo.ts:42
    // return total
    retsub


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_arc4_static_array(items: bytes) -> uint64:
test_for_of_loop_arc4_static_array:
    // tests/approvals/for-of-loops.algo.ts:45
    // test_for_of_loop_arc4_static_array(items: StaticArray<Uint64, 5>) {
    proto 1 1
    // tests/approvals/for-of-loops.algo.ts:46
    // let total: uint64 = 0
    intc_1 // 0
    dup

test_for_of_loop_arc4_static_array_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:47
    // for (const item of items) {
    frame_dig 1
    pushint 5 // 5
    <
    bz test_for_of_loop_arc4_static_array_block@7
    frame_dig 1
    intc_2 // 8
    *
    // tests/approvals/for-of-loops.algo.ts:48
    // total += item.native
    frame_dig -1
    swap
    extract_uint64
    frame_dig 0
    dig 1
    +
    frame_bury 0
    // tests/approvals/for-of-loops.algo.ts:49
    // if (item.native === stopNumber) break
    intc_3 // 42
    ==
    bnz test_for_of_loop_arc4_static_array_block@7
    frame_dig 1
    intc_0 // 1
    +
    frame_bury 1
    b test_for_of_loop_arc4_static_array_for_header@1

test_for_of_loop_arc4_static_array_block@7:
    // tests/approvals/for-of-loops.algo.ts:51
    // return total
    retsub


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_native_immutable_array(items: bytes) -> uint64:
test_for_of_loop_native_immutable_array:
    // tests/approvals/for-of-loops.algo.ts:54
    // test_for_of_loop_native_immutable_array(items: Array<uint64>) {
    proto 1 1
    // tests/approvals/for-of-loops.algo.ts:55
    // let total: uint64 = 0
    intc_1 // 0
    // tests/approvals/for-of-loops.algo.ts:56
    // for (const item of items) {
    frame_dig -1
    intc_1 // 0
    extract_uint16
    intc_1 // 0

test_for_of_loop_native_immutable_array_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:56
    // for (const item of items) {
    frame_dig 2
    frame_dig 1
    <
    bz test_for_of_loop_native_immutable_array_block@7
    frame_dig -1
    extract 2 0
    frame_dig 2
    intc_2 // 8
    *
    extract_uint64
    // tests/approvals/for-of-loops.algo.ts:57
    // total += item
    frame_dig 0
    dig 1
    +
    frame_bury 0
    // tests/approvals/for-of-loops.algo.ts:58
    // if (item === stopNumber) break
    intc_3 // 42
    ==
    bnz test_for_of_loop_native_immutable_array_block@7
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    b test_for_of_loop_native_immutable_array_for_header@1

test_for_of_loop_native_immutable_array_block@7:
    // tests/approvals/for-of-loops.algo.ts:60
    // return total
    retsub


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_for_of_loop_native_mutable_array(items: bytes) -> uint64:
test_for_of_loop_native_mutable_array:
    // tests/approvals/for-of-loops.algo.ts:63
    // test_for_of_loop_native_mutable_array(items: [uint64, uint64, uint64]) {
    proto 1 1
    // tests/approvals/for-of-loops.algo.ts:64
    // const mutable = new ReferenceArray(...items)
    frame_dig -1
    extract 0 8
    frame_dig -1
    extract 8 8
    frame_dig -1
    extract 16 8
    cover 2
    concat
    swap
    concat
    dup
    // tests/approvals/for-of-loops.algo.ts:65
    // let total: uint64 = 0
    intc_1 // 0
    swap
    // tests/approvals/for-of-loops.algo.ts:66
    // for (const item of mutable) {
    len
    intc_2 // 8
    /
    intc_1 // 0

test_for_of_loop_native_mutable_array_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:66
    // for (const item of mutable) {
    frame_dig 3
    frame_dig 2
    <
    bz test_for_of_loop_native_mutable_array_block@7
    frame_dig 0
    frame_dig 3
    intc_2 // 8
    *
    extract_uint64
    // tests/approvals/for-of-loops.algo.ts:67
    // total += item
    frame_dig 1
    dig 1
    +
    frame_bury 1
    // tests/approvals/for-of-loops.algo.ts:68
    // if (item === stopNumber) break
    intc_3 // 42
    ==
    bnz test_for_of_loop_native_mutable_array_block@7
    frame_dig 3
    intc_0 // 1
    +
    frame_bury 3
    b test_for_of_loop_native_mutable_array_for_header@1

test_for_of_loop_native_mutable_array_block@7:
    // tests/approvals/for-of-loops.algo.ts:70
    // return total
    frame_dig 1
    frame_bury 0
    retsub


// tests/approvals/for-of-loops.algo.ts::ForOfLoopsAlgo.test_iterable_props(static_array: bytes, fixed_array: bytes, dyn_array: bytes) -> uint64:
test_iterable_props:
    // tests/approvals/for-of-loops.algo.ts:73
    // test_iterable_props(static_array: StaticArray<Uint64, 3>, fixed_array: FixedArray<uint64, 3>, dyn_array: DynamicArray<Uint64>) {
    proto 3 1
    pushbytes ""
    dupn 5
    // tests/approvals/for-of-loops.algo.ts:74
    // let i: uint64 = 0
    intc_1 // 0
    // tests/approvals/for-of-loops.algo.ts:75
    // for (const a of static_array.keys()) {
    dup

test_iterable_props_for_header@1:
    // tests/approvals/for-of-loops.algo.ts:75
    // for (const a of static_array.keys()) {
    frame_dig 7
    pushint 3 // 3
    <
    bz test_iterable_props_after_for@4
    // tests/approvals/for-of-loops.algo.ts:76
    // i++
    frame_dig 6
    intc_0 // 1
    +
    frame_bury 6
    // tests/approvals/for-of-loops.algo.ts:75
    // for (const a of static_array.keys()) {
    frame_dig 7
    intc_0 // 1
    +
    frame_bury 7
    b test_iterable_props_for_header@1

test_iterable_props_after_for@4:
    intc_1 // 0
    frame_bury 1

test_iterable_props_for_header@5:
    // tests/approvals/for-of-loops.algo.ts:78
    // for (const a of static_array.entries()) {
    frame_dig 1
    pushint 3 // 3
    <
    bz test_iterable_props_after_for@8
    // tests/approvals/for-of-loops.algo.ts:79
    // i++
    frame_dig 6
    intc_0 // 1
    +
    frame_bury 6
    frame_dig 1
    intc_0 // 1
    +
    frame_bury 1
    b test_iterable_props_for_header@5

test_iterable_props_after_for@8:
    // tests/approvals/for-of-loops.algo.ts:81
    // for (const a of fixed_array.keys()) {
    intc_1 // 0
    frame_bury 2

test_iterable_props_for_header@9:
    // tests/approvals/for-of-loops.algo.ts:81
    // for (const a of fixed_array.keys()) {
    frame_dig 2
    pushint 3 // 3
    <
    bz test_iterable_props_after_for@12
    // tests/approvals/for-of-loops.algo.ts:82
    // i++
    frame_dig 6
    intc_0 // 1
    +
    frame_bury 6
    // tests/approvals/for-of-loops.algo.ts:81
    // for (const a of fixed_array.keys()) {
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    b test_iterable_props_for_header@9

test_iterable_props_after_for@12:
    intc_1 // 0
    frame_bury 3

test_iterable_props_for_header@13:
    // tests/approvals/for-of-loops.algo.ts:84
    // for (const a of fixed_array.entries()) {
    frame_dig 3
    pushint 3 // 3
    <
    bz test_iterable_props_after_for@16
    // tests/approvals/for-of-loops.algo.ts:85
    // i++
    frame_dig 6
    intc_0 // 1
    +
    frame_bury 6
    frame_dig 3
    intc_0 // 1
    +
    frame_bury 3
    b test_iterable_props_for_header@13

test_iterable_props_after_for@16:
    // tests/approvals/for-of-loops.algo.ts:87
    // for (const a of dyn_array.keys()) {
    frame_dig -1
    intc_1 // 0
    extract_uint16
    frame_bury 0
    intc_1 // 0
    frame_bury 4

test_iterable_props_for_header@17:
    // tests/approvals/for-of-loops.algo.ts:87
    // for (const a of dyn_array.keys()) {
    frame_dig 4
    frame_dig 0
    <
    bz test_iterable_props_after_for@20
    // tests/approvals/for-of-loops.algo.ts:88
    // i++
    frame_dig 6
    intc_0 // 1
    +
    frame_bury 6
    // tests/approvals/for-of-loops.algo.ts:87
    // for (const a of dyn_array.keys()) {
    frame_dig 4
    intc_0 // 1
    +
    frame_bury 4
    b test_iterable_props_for_header@17

test_iterable_props_after_for@20:
    intc_1 // 0
    frame_bury 5

test_iterable_props_for_header@21:
    // tests/approvals/for-of-loops.algo.ts:90
    // for (const a of dyn_array.entries()) {
    frame_dig 5
    frame_dig 0
    <
    bz test_iterable_props_after_for@24
    // tests/approvals/for-of-loops.algo.ts:91
    // i++
    frame_dig 6
    intc_0 // 1
    +
    frame_bury 6
    frame_dig 5
    intc_0 // 1
    +
    frame_bury 5
    b test_iterable_props_for_header@21

test_iterable_props_after_for@24:
    // tests/approvals/for-of-loops.algo.ts:93
    // return i
    frame_dig 6
    frame_bury 0
    retsub

{
    "name": "AbiValidationAlgo",
    "structs": {},
    "methods": [
        {
            "name": "withValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "withoutValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "defaultValidation",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "manualValidationAfterConvert",
            "args": [
                {
                    "type": "byte[]",
                    "name": "rawBytes"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        58,
                        92,
                        117,
                        137
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        167
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        61,
                        95,
                        120,
                        140
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        67
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        75
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        103,
                        148,
                        200
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAzMiAwCiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjYKICAgIC8vIGNsYXNzIEFiaVZhbGlkYXRpb25BbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDkKICAgIHB1c2hieXRlc3MgMHgyNjNlOWMzMyAweGUwZTA3MDc0IDB4NDZhMGQyNTEgMHhjMGYwNWQxMCAvLyBtZXRob2QgIndpdGhWYWxpZGF0aW9uKGJ5dGVbMzJdKXVpbnQ2NCIsIG1ldGhvZCAid2l0aG91dFZhbGlkYXRpb24oYnl0ZVszMl0pdWludDY0IiwgbWV0aG9kICJkZWZhdWx0VmFsaWRhdGlvbihieXRlWzMyXSl1aW50NjQiLCBtZXRob2QgIm1hbnVhbFZhbGlkYXRpb25BZnRlckNvbnZlcnQoYnl0ZVtdKXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fd2l0aFZhbGlkYXRpb25fcm91dGVAMyBtYWluX3dpdGhvdXRWYWxpZGF0aW9uX3JvdXRlQDQgbWFpbl9kZWZhdWx0VmFsaWRhdGlvbl9yb3V0ZUA1IG1haW5fbWFudWFsVmFsaWRhdGlvbkFmdGVyQ29udmVydF9yb3V0ZUA2CgptYWluX2FmdGVyX2lmX2Vsc2VAMTM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czo2CiAgICAvLyBjbGFzcyBBYmlWYWxpZGF0aW9uQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMiAvLyAwCiAgICByZXR1cm4KCm1haW5fbWFudWFsVmFsaWRhdGlvbkFmdGVyQ29udmVydF9yb3V0ZUA2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6MjEKICAgIC8vIG1hbnVhbFZhbGlkYXRpb25BZnRlckNvbnZlcnQocmF3Qnl0ZXM6IGJ5dGVzKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjYKICAgIC8vIGNsYXNzIEFiaVZhbGlkYXRpb25BbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBpbnRjXzIgLy8gMAogICAgZXh0cmFjdF91aW50MTYgLy8gb24gZXJyb3I6IGludmFsaWQgYXJyYXkgbGVuZ3RoIGhlYWRlcgogICAgcHVzaGludCAyIC8vIDIKICAgICsKICAgIGRpZyAxCiAgICBsZW4KICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIGFyYzQuZHluYW1pY19hcnJheTxhcmM0LnVpbnQ4PgogICAgZXh0cmFjdCAyIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjIxCiAgICAvLyBtYW51YWxWYWxpZGF0aW9uQWZ0ZXJDb252ZXJ0KHJhd0J5dGVzOiBieXRlcykgewogICAgY2FsbHN1YiBtYW51YWxWYWxpZGF0aW9uQWZ0ZXJDb252ZXJ0CiAgICBpdG9iCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2RlZmF1bHRWYWxpZGF0aW9uX3JvdXRlQDU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czoxNwogICAgLy8gZGVmYXVsdFZhbGlkYXRpb24odmFsdWU6IFN0YXRpY0J5dGVzPDMyPikgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czo2CiAgICAvLyBjbGFzcyBBYmlWYWxpZGF0aW9uQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gMzIKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIGFyYzQuc3RhdGljX2FycmF5PGFyYzQudWludDgsIDMyPgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6MTcKICAgIC8vIGRlZmF1bHRWYWxpZGF0aW9uKHZhbHVlOiBTdGF0aWNCeXRlczwzMj4pIHsKICAgIGNhbGxzdWIgZGVmYXVsdFZhbGlkYXRpb24KICAgIGl0b2IKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fd2l0aG91dFZhbGlkYXRpb25fcm91dGVANDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjEyCiAgICAvLyBAYWJpbWV0aG9kKHsgdmFsaWRhdGVFbmNvZGluZzogJ3Vuc2FmZS1kaXNhYmxlZCcgfSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6NgogICAgLy8gY2xhc3MgQWJpVmFsaWRhdGlvbkFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czoxMgogICAgLy8gQGFiaW1ldGhvZCh7IHZhbGlkYXRlRW5jb2Rpbmc6ICd1bnNhZmUtZGlzYWJsZWQnIH0pCiAgICBjYWxsc3ViIHdpdGhvdXRWYWxpZGF0aW9uCiAgICBpdG9iCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3dpdGhWYWxpZGF0aW9uX3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czo3CiAgICAvLyBAYWJpbWV0aG9kKHsgdmFsaWRhdGVFbmNvZGluZzogJ2FyZ3MnIH0pCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjYKICAgIC8vIGNsYXNzIEFiaVZhbGlkYXRpb25BbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBsZW4KICAgIGludGNfMSAvLyAzMgogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC5zdGF0aWNfYXJyYXk8YXJjNC51aW50OCwgMzI+CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czo3CiAgICAvLyBAYWJpbWV0aG9kKHsgdmFsaWRhdGVFbmNvZGluZzogJ2FyZ3MnIH0pCiAgICBjYWxsc3ViIHdpdGhWYWxpZGF0aW9uCiAgICBpdG9iCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A5OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6NgogICAgLy8gY2xhc3MgQWJpVmFsaWRhdGlvbkFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEzCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjpBYmlWYWxpZGF0aW9uQWxnby53aXRoVmFsaWRhdGlvbih2YWx1ZTogYnl0ZXMpIC0+IHVpbnQ2NDoKd2l0aFZhbGlkYXRpb246CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czo3LTgKICAgIC8vIEBhYmltZXRob2QoeyB2YWxpZGF0ZUVuY29kaW5nOiAnYXJncycgfSkKICAgIC8vIHdpdGhWYWxpZGF0aW9uKHZhbHVlOiBTdGF0aWNCeXRlczwzMj4pIHsKICAgIHByb3RvIDEgMQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6OQogICAgLy8gcmV0dXJuIHZhbHVlLmJ5dGVzLmxlbmd0aAogICAgZnJhbWVfZGlnIC0xCiAgICBsZW4KICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjpBYmlWYWxpZGF0aW9uQWxnby53aXRob3V0VmFsaWRhdGlvbih2YWx1ZTogYnl0ZXMpIC0+IHVpbnQ2NDoKd2l0aG91dFZhbGlkYXRpb246CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czoxMi0xMwogICAgLy8gQGFiaW1ldGhvZCh7IHZhbGlkYXRlRW5jb2Rpbmc6ICd1bnNhZmUtZGlzYWJsZWQnIH0pCiAgICAvLyB3aXRob3V0VmFsaWRhdGlvbih2YWx1ZTogU3RhdGljQnl0ZXM8MzI+KSB7CiAgICBwcm90byAxIDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjE0CiAgICAvLyByZXR1cm4gdmFsdWUuYnl0ZXMubGVuZ3RoCiAgICBmcmFtZV9kaWcgLTEKICAgIGxlbgogICAgcmV0c3ViCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6OkFiaVZhbGlkYXRpb25BbGdvLmRlZmF1bHRWYWxpZGF0aW9uKHZhbHVlOiBieXRlcykgLT4gdWludDY0OgpkZWZhdWx0VmFsaWRhdGlvbjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjE3CiAgICAvLyBkZWZhdWx0VmFsaWRhdGlvbih2YWx1ZTogU3RhdGljQnl0ZXM8MzI+KSB7CiAgICBwcm90byAxIDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hYmktdmFsaWRhdGlvbi5hbGdvLnRzOjE4CiAgICAvLyByZXR1cm4gdmFsdWUuYnl0ZXMubGVuZ3RoCiAgICBmcmFtZV9kaWcgLTEKICAgIGxlbgogICAgcmV0c3ViCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6OkFiaVZhbGlkYXRpb25BbGdvLm1hbnVhbFZhbGlkYXRpb25BZnRlckNvbnZlcnQocmF3Qnl0ZXM6IGJ5dGVzKSAtPiB1aW50NjQ6Cm1hbnVhbFZhbGlkYXRpb25BZnRlckNvbnZlcnQ6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czoyMQogICAgLy8gbWFudWFsVmFsaWRhdGlvbkFmdGVyQ29udmVydChyYXdCeXRlczogYnl0ZXMpIHsKICAgIHByb3RvIDEgMQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FiaS12YWxpZGF0aW9uLmFsZ28udHM6MjMKICAgIC8vIHZhbHVlLnZhbGlkYXRlKCkKICAgIGZyYW1lX2RpZyAtMQogICAgbGVuCiAgICBkdXAKICAgIGludGNfMSAvLyAzMgogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC5zdGF0aWNfYXJyYXk8YXJjNC51aW50OCwgMzI+CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYWJpLXZhbGlkYXRpb24uYWxnby50czoyNAogICAgLy8gcmV0dXJuIHZhbHVlLmJ5dGVzLmxlbmd0aAogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADASAAJgEEFR98dTEbQQCNggQEJj6cMwTg4HB0BEag0lEEwPBdEDYaAI4EAFEAPQAkAAIkQzEZFEQxGEQ2GgFJJFmBAghLARUSRFcCAIgAbRYoTFCwIkMxGRREMRhENhoBSRUjEkSIAE0WKExQsCJDMRkURDEYRDYaAYgAMhYoTFCwIkMxGRREMRhENhoBSRUjEkSIABIWKExQsCJDMRlA/5ExGBREIkOKAQGL/xWJigEBi/8ViYoBAYv/FYmKAQGL/xVJIxJEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 11,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
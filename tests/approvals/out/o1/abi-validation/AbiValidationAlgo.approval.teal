#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 32 0 2
    bytecblock 0x151f7c75 0x151f7c750000000000000020
    // tests/approvals/abi-validation.algo.ts:6
    // class AbiValidationAlgo extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@12
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x263e9c33 0xe0e07074 0x46a0d251 0xfb86bc00 0xc0f05d10 // method "withValidation(byte[32])uint64", method "withoutValidation(byte[32])uint64", method "defaultValidation(byte[32])uint64", method "manualValidationInConvert(byte[])uint64", method "manualValidationAfterConvert(byte[])uint64"
    txna ApplicationArgs 0
    match withValidation withoutValidation defaultValidation manualValidationInConvert manualValidationAfterConvert
    err

main___algots__.defaultCreate@12:
    // tests/approvals/abi-validation.algo.ts:6
    // class AbiValidationAlgo extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    intc_0 // 1
    return


// tests/approvals/abi-validation.algo.ts::AbiValidationAlgo.withValidation[routing]() -> void:
withValidation:
    // tests/approvals/abi-validation.algo.ts:7
    // @abimethod({ validateEncoding: 'args' })
    txna ApplicationArgs 1
    len
    dup
    intc_1 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests/approvals/abi-validation.algo.ts::AbiValidationAlgo.withoutValidation[routing]() -> void:
withoutValidation:
    // tests/approvals/abi-validation.algo.ts:11
    // @abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation.algo.ts:13
    // return value.length
    len
    // tests/approvals/abi-validation.algo.ts:11
    // @abimethod({ validateEncoding: 'unsafe-disabled' })
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests/approvals/abi-validation.algo.ts::AbiValidationAlgo.defaultValidation[routing]() -> void:
defaultValidation:
    // tests/approvals/abi-validation.algo.ts:16
    // defaultValidation(value: bytes<32>) {
    txna ApplicationArgs 1
    len
    dup
    intc_1 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests/approvals/abi-validation.algo.ts::AbiValidationAlgo.manualValidationInConvert[routing]() -> void:
manualValidationInConvert:
    // tests/approvals/abi-validation.algo.ts:20
    // manualValidationInConvert(rawBytes: bytes) {
    txna ApplicationArgs 1
    dup
    intc_2 // 0
    extract_uint16 // on error: invalid array length header
    intc_3 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    // tests/approvals/abi-validation.algo.ts:21
    // const value = convertBytes<StaticBytes<32>>(rawBytes, { strategy: 'validate' })
    len
    intc_1 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    // tests/approvals/abi-validation.algo.ts:20
    // manualValidationInConvert(rawBytes: bytes) {
    bytec_1 // 0x151f7c750000000000000020
    log
    intc_0 // 1
    return


// tests/approvals/abi-validation.algo.ts::AbiValidationAlgo.manualValidationAfterConvert[routing]() -> void:
manualValidationAfterConvert:
    // tests/approvals/abi-validation.algo.ts:25
    // manualValidationAfterConvert(rawBytes: bytes) {
    txna ApplicationArgs 1
    dup
    intc_2 // 0
    extract_uint16 // on error: invalid array length header
    intc_3 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    // tests/approvals/abi-validation.algo.ts:27
    // validateBytes<StaticBytes<32>>(rawBytes)
    len
    intc_1 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    // tests/approvals/abi-validation.algo.ts:25
    // manualValidationAfterConvert(rawBytes: bytes) {
    bytec_1 // 0x151f7c750000000000000020
    log
    intc_0 // 1
    return

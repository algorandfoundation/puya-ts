{
    "name": "ItxnComposeAlgo",
    "structs": {},
    "methods": [
        {
            "name": "distribute",
            "args": [
                {
                    "type": "address[]",
                    "name": "addresses"
                },
                {
                    "type": "pay",
                    "name": "funds"
                },
                {
                    "type": "uint64",
                    "name": "verifier"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "conditionalBegin",
            "args": [
                {
                    "type": "uint64",
                    "name": "count"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        27
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        60
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        111
                    ],
                    "errorMessage": "assert target is match for conditions"
                },
                {
                    "pc": [
                        206
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        68
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.static_array<arc4.uint8, 32>>"
                },
                {
                    "pc": [
                        101,
                        273
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        114
                    ],
                    "errorMessage": "must provide some accounts"
                },
                {
                    "pc": [
                        92
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAAEGICYCBNCiggAEAAJobzEbQQAdMRkURDEYRIICBB7K00wEkNKXYjYaAI4CAAsA1QAxGRQxGBQQRCNDNhoBSSJZSU4CSSULgQIISwIVEkQxFiMJSTgQIxJENhoCSRWBCBJEF04DSTgHMgoSREsBRDgITApLAVcCAE4CTFcCICMWTwIWUEsBFRZXBgJPAlBMgAIAElBMULFJIltJTwJJgQhbSU4CTgNJgRBZSwEVUlcCALIHsgiyECKyASNJSwYMQQAeRwIlC0sFTCVYtrIHSwKyCEsDshAisgEjCEUBQv/btoAEZamuzLIaSwSyGCSyECKyAbaAA2FiY7ImgQOyECKyAbMjQzYaAUkVgQgSRBexgAQAkiWushqABAACSGmyGiOyNYAEC4EBQ7JCgIsCCyAEAAECBCYDCGdyZWV0aW5nASAEFR98dTEYQAAEKIAAZ4ICBCQ3jTwEoOgYcjYaAI4CADcALTEZFEQxGEEAFoICBNCiggAEUYC6IDYaAI4CADkAXwCABACSJa42GgCOAQAWADEZJRIxGBBEI0MxGYEFEjEYEEQjQzYaAUkiWSQISwEVEkRXAgAoTGcjQzYaAUkiWSQISwEVEkRXAgAiKGVEKVBMUEkVFlcGAkxQKkxQsCNDNhoBSRVLASJZSSUSREsCSwFLA1IiWYEGCEsDJFlJSwISREsESwFLBVJJIlkkCE8DCE8EEkQiKGVEKVBOBE4EUlcCAFBMVwIAUEkVFlcGAkxQKkxQsCNDskAishkkshAisgGztwA9IklLAwxBADFJQAAZsSiyGimyGksBshgkshAisgFJIwhFAUL/3LYoshopshpLAbIYJLIQIrIBQv/ksyND",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}
{
    "name": "LargeBox",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "box": {
                    "keyType": "AVMString",
                    "valueType": "(address,uint64,uint64,uint64,uint64)[200]",
                    "key": "bGFyZ2U="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        101
                    ],
                    "errorMessage": "Box should be created with the correct size"
                },
                {
                    "pc": [
                        56
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        45
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSA2NCAwIDEyODAwCiAgICBieXRlY2Jsb2NrICJsYXJnZSIgMHgwNjgxMDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI2NwogICAgLy8gZXhwb3J0IGNsYXNzIExhcmdlQm94IGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDUKICAgIHB1c2hieXRlcyAweGE3ODAwMGRlIC8vIG1ldGhvZCAidGVzdCgpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdGVzdF9yb3V0ZUAzCiAgICBlcnIKCm1haW5fdGVzdF9yb3V0ZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjcwCiAgICAvLyB0ZXN0KCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBiIHRlc3QKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNjcKICAgIC8vIGV4cG9ydCBjbGFzcyBMYXJnZUJveCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6OkxhcmdlQm94LnRlc3Rbcm91dGluZ10oKSAtPiB2b2lkOgp0ZXN0OgogICAgcHVzaGJ5dGVzICIiCgp0ZXN0X3doaWxlX3RvcEA3OgogICAgcHVzaGludCA3MDEwIC8vIDcwMTAKICAgIGdsb2JhbCBPcGNvZGVCdWRnZXQKICAgID4KICAgIGJ6IHRlc3RfYWZ0ZXJfd2hpbGVAMTIKICAgIGl0eG5fYmVnaW4KICAgIHB1c2hpbnQgNiAvLyBhcHBsCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KICAgIGl0eG5fZmllbGQgT25Db21wbGV0aW9uCiAgICBieXRlY18xIC8vIDB4MDY4MTAxCiAgICBpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQogICAgYnl0ZWNfMSAvLyAweDA2ODEwMQogICAgaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQogICAgaW50Y18yIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICBpdHhuX3N1Ym1pdAogICAgYiB0ZXN0X3doaWxlX3RvcEA3Cgp0ZXN0X2FmdGVyX3doaWxlQDEyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjY4CiAgICAvLyBib3ggPSBCb3g8Rml4ZWRBcnJheTxJbmZvLCAyMDA+Pih7IGtleTogJ2xhcmdlJyB9KQogICAgYnl0ZWNfMCAvLyAibGFyZ2UiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNzIKICAgIC8vIHRoaXMuYm94LmNyZWF0ZSgpCiAgICBpbnRjXzMgLy8gMTI4MDAKICAgIGJveF9jcmVhdGUKICAgIHBvcAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjY4CiAgICAvLyBib3ggPSBCb3g8Rml4ZWRBcnJheTxJbmZvLCAyMDA+Pih7IGtleTogJ2xhcmdlJyB9KQogICAgYnl0ZWNfMCAvLyAibGFyZ2UiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNzMKICAgIC8vIGFzc2VydCh0aGlzLmJveC5sZW5ndGggPT09IDIwMCAqIDY0LCAnQm94IHNob3VsZCBiZSBjcmVhdGVkIHdpdGggdGhlIGNvcnJlY3Qgc2l6ZScpCiAgICBib3hfbGVuCiAgICBwb3AKICAgIGludGNfMyAvLyAxMjgwMAogICAgPT0KICAgIGFzc2VydCAvLyBCb3ggc2hvdWxkIGJlIGNyZWF0ZWQgd2l0aCB0aGUgY29ycmVjdCBzaXplCiAgICBpbnRjXzIgLy8gMAogICAgYnVyeSAxCgp0ZXN0X2Zvcl9oZWFkZXJAMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI3NQogICAgLy8gZm9yIChjb25zdCBbaW5kZXgsIHZdIG9mIHRoaXMuYm94LnZhbHVlLmVudHJpZXMoKSkgewogICAgZHVwCiAgICBwdXNoaW50IDIwMCAvLyAyMDAKICAgIDwKICAgIGJ6IHRlc3RfYWZ0ZXJfZm9yQDUKICAgIGR1cG4gMgogICAgaW50Y18xIC8vIDY0CiAgICAqCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNjgKICAgIC8vIGJveCA9IEJveDxGaXhlZEFycmF5PEluZm8sIDIwMD4+KHsga2V5OiAnbGFyZ2UnIH0pCiAgICBieXRlY18wIC8vICJsYXJnZSIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI3NQogICAgLy8gZm9yIChjb25zdCBbaW5kZXgsIHZdIG9mIHRoaXMuYm94LnZhbHVlLmVudHJpZXMoKSkgewogICAgZGlnIDEKICAgIGludGNfMSAvLyA2NAogICAgYm94X2V4dHJhY3QKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI3OAogICAgLy8geC5iYWxhbmNlID0gaW5kZXggKyAxMAogICAgZGlnIDIKICAgIHB1c2hpbnQgMTAgLy8gMTAKICAgICsKICAgIGR1cAogICAgaXRvYgogICAgdW5jb3ZlciAyCiAgICBzd2FwCiAgICByZXBsYWNlMiAzMgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjY4CiAgICAvLyBib3ggPSBCb3g8Rml4ZWRBcnJheTxJbmZvLCAyMDA+Pih7IGtleTogJ2xhcmdlJyB9KQogICAgYnl0ZWNfMCAvLyAibGFyZ2UiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyODAKICAgIC8vIHRoaXMuYm94LnZhbHVlW2luZGV4XSA9IGNsb25lKHgpCiAgICBkaWcgMwogICAgdW5jb3ZlciAyCiAgICBib3hfcmVwbGFjZQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjY4CiAgICAvLyBib3ggPSBCb3g8Rml4ZWRBcnJheTxJbmZvLCAyMDA+Pih7IGtleTogJ2xhcmdlJyB9KQogICAgYnl0ZWNfMCAvLyAibGFyZ2UiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyODIKICAgIC8vIGFzc2VydCh0aGlzLmJveC52YWx1ZVtpbmRleF0uYmFsYW5jZSA9PT0gaW5kZXggKyAxMCkKICAgIHVuY292ZXIgMgogICAgaW50Y18xIC8vIDY0CiAgICBib3hfZXh0cmFjdAogICAgcHVzaGludCAzMiAvLyAzMgogICAgZXh0cmFjdF91aW50NjQKICAgID09CiAgICBhc3NlcnQKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBidXJ5IDEKICAgIGIgdGVzdF9mb3JfaGVhZGVyQDIKCnRlc3RfYWZ0ZXJfZm9yQDU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNzAKICAgIC8vIHRlc3QoKSB7CiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAUAAgGQmAgVsYXJnZQMGgQExG0EAGIAEp4AA3jYaAI4BAAEAMRkUMRgQREIACjEZFDEYFBBEIkOAAIHiNjIMDUEAFrGBBrIQgQWyGSmyHimyHySyAbNC/+EoJblIKL1IJRJEJEUBSYHIAQxBACxHAiMLKEsBI7pLAoEKCEkWTwJMXCAoSwNPArsoTwIjuoEgWxJEIghFAUL/zCJD",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}
{
    "name": "LargeBox",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "box": {
                    "keyType": "AVMString",
                    "valueType": "(address,uint64,uint64,uint64,uint64)[200]",
                    "key": "bGFyZ2U="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        99
                    ],
                    "errorMessage": "Box should be created with the correct size"
                },
                {
                    "pc": [
                        56
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        45
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgNjQgMCAxMjgwMCAxCiAgICBieXRlY2Jsb2NrICJsYXJnZSIgMHgwNjgxMDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI2NwogICAgLy8gZXhwb3J0IGNsYXNzIExhcmdlQm94IGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDUKICAgIHB1c2hieXRlcyAweGE3ODAwMGRlIC8vIG1ldGhvZCAidGVzdCgpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdGVzdF9yb3V0ZUAzCiAgICBlcnIKCm1haW5fdGVzdF9yb3V0ZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjcwCiAgICAvLyB0ZXN0KCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBiIHRlc3QKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNjcKICAgIC8vIGV4cG9ydCBjbGFzcyBMYXJnZUJveCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgcmV0dXJuIC8vIG9uIGVycm9yOiBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wICYmIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwoKCi8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjpMYXJnZUJveC50ZXN0W3JvdXRpbmddKCkgLT4gdm9pZDoKdGVzdDoKICAgIHB1c2hieXRlcyAiIgoKdGVzdF93aGlsZV90b3BANzoKICAgIHB1c2hpbnQgNzAxMCAvLyA3MDEwCiAgICBnbG9iYWwgT3Bjb2RlQnVkZ2V0CiAgICA+CiAgICBieiB0ZXN0X2FmdGVyX3doaWxlQDEyCiAgICBpdHhuX2JlZ2luCiAgICBwdXNoaW50IDYgLy8gYXBwbAogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgcHVzaGludCA1IC8vIERlbGV0ZUFwcGxpY2F0aW9uCiAgICBpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgogICAgYnl0ZWNfMSAvLyAweDA2ODEwMQogICAgaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KICAgIGJ5dGVjXzEgLy8gMHgwNjgxMDEKICAgIGl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KICAgIGludGNfMSAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgaXR4bl9zdWJtaXQKICAgIGIgdGVzdF93aGlsZV90b3BANwoKdGVzdF9hZnRlcl93aGlsZUAxMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI2OAogICAgLy8gYm94ID0gQm94PEZpeGVkQXJyYXk8SW5mbywgMjAwPj4oeyBrZXk6ICdsYXJnZScgfSkKICAgIGJ5dGVjXzAgLy8gImxhcmdlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjcyCiAgICAvLyB0aGlzLmJveC5jcmVhdGUoKQogICAgaW50Y18yIC8vIDEyODAwCiAgICBib3hfY3JlYXRlCiAgICBwb3AKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI2OAogICAgLy8gYm94ID0gQm94PEZpeGVkQXJyYXk8SW5mbywgMjAwPj4oeyBrZXk6ICdsYXJnZScgfSkKICAgIGJ5dGVjXzAgLy8gImxhcmdlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjczCiAgICAvLyBhc3NlcnQodGhpcy5ib3gubGVuZ3RoID09PSAyMDAgKiA2NCwgJ0JveCBzaG91bGQgYmUgY3JlYXRlZCB3aXRoIHRoZSBjb3JyZWN0IHNpemUnKQogICAgYm94X2xlbgogICAgcG9wCiAgICBpbnRjXzIgLy8gMTI4MDAKICAgID09CiAgICBhc3NlcnQgLy8gQm94IHNob3VsZCBiZSBjcmVhdGVkIHdpdGggdGhlIGNvcnJlY3Qgc2l6ZQogICAgaW50Y18xIC8vIDAKICAgIGJ1cnkgMQoKdGVzdF9mb3JfaGVhZGVyQDI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNzUKICAgIC8vIGZvciAoY29uc3QgW2luZGV4LCB2XSBvZiB0aGlzLmJveC52YWx1ZS5lbnRyaWVzKCkpIHsKICAgIGR1cAogICAgcHVzaGludCAyMDAgLy8gMjAwCiAgICA8CiAgICBieiB0ZXN0X2FmdGVyX2ZvckA1CiAgICBkdXBuIDIKICAgIGludGNfMCAvLyA2NAogICAgKgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjY4CiAgICAvLyBib3ggPSBCb3g8Rml4ZWRBcnJheTxJbmZvLCAyMDA+Pih7IGtleTogJ2xhcmdlJyB9KQogICAgYnl0ZWNfMCAvLyAibGFyZ2UiCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNzUKICAgIC8vIGZvciAoY29uc3QgW2luZGV4LCB2XSBvZiB0aGlzLmJveC52YWx1ZS5lbnRyaWVzKCkpIHsKICAgIGRpZyAxCiAgICBpbnRjXzAgLy8gNjQKICAgIGJveF9leHRyYWN0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYm94LXByb3hpZXMuYWxnby50czoyNzgKICAgIC8vIHguYmFsYW5jZSA9IGluZGV4ICsgMTAKICAgIGRpZyAyCiAgICBwdXNoaW50IDEwIC8vIDEwCiAgICArCiAgICBkdXAKICAgIGl0b2IKICAgIHVuY292ZXIgMgogICAgc3dhcAogICAgcmVwbGFjZTIgMzIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI2OAogICAgLy8gYm94ID0gQm94PEZpeGVkQXJyYXk8SW5mbywgMjAwPj4oeyBrZXk6ICdsYXJnZScgfSkKICAgIGJ5dGVjXzAgLy8gImxhcmdlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjgwCiAgICAvLyB0aGlzLmJveC52YWx1ZVtpbmRleF0gPSBjbG9uZSh4KQogICAgZGlnIDMKICAgIHVuY292ZXIgMgogICAgYm94X3JlcGxhY2UKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9ib3gtcHJveGllcy5hbGdvLnRzOjI2OAogICAgLy8gYm94ID0gQm94PEZpeGVkQXJyYXk8SW5mbywgMjAwPj4oeyBrZXk6ICdsYXJnZScgfSkKICAgIGJ5dGVjXzAgLy8gImxhcmdlIgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjgyCiAgICAvLyBhc3NlcnQodGhpcy5ib3gudmFsdWVbaW5kZXhdLmJhbGFuY2UgPT09IGluZGV4ICsgMTApCiAgICB1bmNvdmVyIDIKICAgIGludGNfMCAvLyA2NAogICAgYm94X2V4dHJhY3QKICAgIHB1c2hpbnQgMzIgLy8gMzIKICAgIGV4dHJhY3RfdWludDY0CiAgICA9PQogICAgYXNzZXJ0CiAgICBpbnRjXzMgLy8gMQogICAgKwogICAgYnVyeSAxCiAgICBiIHRlc3RfZm9yX2hlYWRlckAyCgp0ZXN0X2FmdGVyX2ZvckA1OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2JveC1wcm94aWVzLmFsZ28udHM6MjcwCiAgICAvLyB0ZXN0KCkgewogICAgaW50Y18zIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEQACAZAEmAgVsYXJnZQMGgQExG0EAGIAEp4AA3jYaAI4BAAEAMRkUMRgQREIACDEZFDEYFBBDgACB4jYyDA1BABaxgQayEIEFshkpsh4psh8jsgGzQv/hKCS5SCi9SCQSRCNFAUmByAEMQQAsRwIiCyhLASK6SwKBCghJFk8CTFwgKEsDTwK7KE8CIrqBIFsSRCUIRQFC/8wlQw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
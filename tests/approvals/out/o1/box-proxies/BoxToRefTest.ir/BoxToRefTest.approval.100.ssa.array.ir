main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@5
    block@2: // abi_routing_L235
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "test()void" => block@3, * => block@4}
    block@3: // test_route_L238
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%7#0: bool = (&& tmp%4#0 tmp%5#0)
        (assert tmp%7#0) // OnCompletion must be NoOp && can only call when not creating
        tests/approvals/box-proxies.algo.ts::BoxToRefTest.test[routing]()
        goto block@4
    block@4: // switch_case_next_L235
        fail
    block@5: // __algots__.defaultCreate_L235
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (! tmp%8#0)
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (! tmp%10#0)
        let tmp%12#0: bool = (&& tmp%9#0 tmp%11#0)
        (assert tmp%12#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u

subroutine tests/approvals/box-proxies.algo.ts::BoxToRefTest.test[routing]() -> void:
    block@0: // L238
        let boxForCaller#0: bytes = (txn Sender)
        (box_create boxForCaller#0 4u)
        (box_replace boxForCaller#0 0u 0x7b)
        let (aggregate%box_get%0#0: bytes, aggregate%box_get%1#0: bool) = (box_get boxForCaller#0)
        (assert aggregate%box_get%1#0) // Box must have value
        let storage_value%0#0: bytes = aggregate%box_get%0#0
        let aggregate%bytes_offset%0#0: uint64 = (* 0u 1u)
        let aggregate%encoded_element%0#0: bytes = (extract3 storage_value%0#0 aggregate%bytes_offset%0#0 1u) // on error: index access is out of bounds
        let array_item%0#0: Encoded(uint8) = aggregate%encoded_element%0#0
        let tmp%0#0: uint64 = (btoi array_item%0#0)
        let tmp%1#0: bool = (== tmp%0#0 123u)
        (assert tmp%1#0) // First array item in box should be 123
        exit 1u
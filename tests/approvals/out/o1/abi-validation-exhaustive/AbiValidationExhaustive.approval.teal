#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 0 2 9
    // tests/approvals/abi-validation-exhaustive.algo.ts:18
    // class AbiValidationExhaustive extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@37
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x4d758c59 0x6bb7b963 0x18852cd6 0x5b2efbe1 0xecca7a98 0x94da73c0 0x26230de1 0x3ec77fac 0xf111c07e 0x3f68b7d1 0x674c0e87 0x091ab848 0xf3289fb8 0x91acee51 0x4e641e99 0x6536e3c2 0x93522cb8 0xbf888825 0x22aa90d6 0x6eecb49d 0x28388829 0x7e804bbf 0xce26c72c 0xec56126f 0xc3674b56 0xfb7b0528 0xba5195fd 0xe36b3224 0x574e9479 0xd0b582f1 // method "validate_uint64(uint64)void", method "validate_uint8(uint8)void", method "validate_uint512(uint512)void", method "validate_ufixed64(ufixed64x2)void", method "validate_uint8_arr(uint8[])void", method "validate_uint8_arr3(uint8[3])void", method "validate_bool(bool)void", method "validate_byte(byte)void", method "validate_string(string)void", method "validate_bytes(byte[])void", method "validate_address(address)void", method "validate_account(address)void", method "validate_bool_arr(bool[])void", method "validate_bool_arr3(bool[3])void", method "validate_static_tuple((uint64,uint8))void", method "validate_dynamic_tuple((uint64,uint8,string))void", method "validate_static_struct((uint64,uint8))void", method "validate_dynamic_struct((uint64,uint8,string))void", method "validate_static_struct_arr((uint64,uint8)[])void", method "validate_static_struct_arr3((uint64,uint8)[3])void", method "validate_dynamic_struct_arr((uint64,uint8,string)[])void", method "validate_dynamic_struct_arr3((uint64,uint8,string)[3])void", method "validate_dynamic_struct_with_a_bool((uint8,byte[],bool))void", method "validate_native_static_struct((uint64,uint8))void", method "validate_native_dynamic_struct((uint64,uint8,string))void", method "validate_native_static_struct_arr((uint64,uint8)[])void", method "validate_native_static_struct_arr3((uint64,uint8)[3])void", method "validate_native_dynamic_struct_arr((uint64,uint8,string)[])void", method "validate_native_dynamic_struct_arr3((uint64,uint8,string)[3])void", method "validate_c2c()void"
    txna ApplicationArgs 0
    match validate_uint64 validate_uint8 validate_uint512 validate_ufixed64 validate_uint8_arr validate_uint8_arr3 validate_bool validate_byte validate_string validate_bytes validate_address validate_account validate_bool_arr validate_bool_arr3 validate_static_tuple validate_dynamic_tuple validate_static_struct validate_dynamic_struct validate_static_struct_arr validate_static_struct_arr3 validate_dynamic_struct_arr validate_dynamic_struct_arr3 validate_dynamic_struct_with_a_bool validate_native_static_struct validate_native_dynamic_struct validate_native_static_struct_arr validate_native_static_struct_arr3 validate_native_dynamic_struct_arr validate_native_dynamic_struct_arr3 validate_c2c
    err

main___algots__.defaultCreate@37:
    // tests/approvals/abi-validation-exhaustive.algo.ts:18
    // class AbiValidationExhaustive extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint64[routing]() -> void:
validate_uint64:
    // tests/approvals/abi-validation-exhaustive.algo.ts:19
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:21
    // validateEncoding(value)
    len
    pushint 8 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    // tests/approvals/abi-validation-exhaustive.algo.ts:19
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint8[routing]() -> void:
validate_uint8:
    // tests/approvals/abi-validation-exhaustive.algo.ts:23
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:25
    // validateEncoding(value)
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.uint8
    // tests/approvals/abi-validation-exhaustive.algo.ts:23
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint512[routing]() -> void:
validate_uint512:
    // tests/approvals/abi-validation-exhaustive.algo.ts:27
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:29
    // validateEncoding(value)
    len
    pushint 64 // 64
    ==
    assert // invalid number of bytes for arc4.uint512
    // tests/approvals/abi-validation-exhaustive.algo.ts:27
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_ufixed64[routing]() -> void:
validate_ufixed64:
    // tests/approvals/abi-validation-exhaustive.algo.ts:31
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:33
    // validateEncoding(value)
    len
    pushint 8 // 8
    ==
    assert // invalid number of bytes for arc4.ufixed64x2
    // tests/approvals/abi-validation-exhaustive.algo.ts:31
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint8_arr[routing]() -> void:
validate_uint8_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:35
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:37
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    swap
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    // tests/approvals/abi-validation-exhaustive.algo.ts:35
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint8_arr3[routing]() -> void:
validate_uint8_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:39
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:41
    // validateEncoding(value)
    len
    pushint 3 // 3
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:39
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bool[routing]() -> void:
validate_bool:
    // tests/approvals/abi-validation-exhaustive.algo.ts:43
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:45
    // validateEncoding(value)
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.bool
    // tests/approvals/abi-validation-exhaustive.algo.ts:43
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_byte[routing]() -> void:
validate_byte:
    // tests/approvals/abi-validation-exhaustive.algo.ts:47
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:49
    // validateEncoding(value)
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.uint8
    // tests/approvals/abi-validation-exhaustive.algo.ts:47
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_string[routing]() -> void:
validate_string:
    // tests/approvals/abi-validation-exhaustive.algo.ts:51
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:53
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    swap
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    // tests/approvals/abi-validation-exhaustive.algo.ts:51
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bytes[routing]() -> void:
validate_bytes:
    // tests/approvals/abi-validation-exhaustive.algo.ts:55
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:57
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    swap
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    // tests/approvals/abi-validation-exhaustive.algo.ts:55
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_address[routing]() -> void:
validate_address:
    // tests/approvals/abi-validation-exhaustive.algo.ts:59
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:61
    // validateEncoding(value)
    len
    pushint 32 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    // tests/approvals/abi-validation-exhaustive.algo.ts:59
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_account[routing]() -> void:
validate_account:
    // tests/approvals/abi-validation-exhaustive.algo.ts:63
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:65
    // validateEncoding(value)
    len
    pushint 32 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    // tests/approvals/abi-validation-exhaustive.algo.ts:63
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bool_arr[routing]() -> void:
validate_bool_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:67
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:69
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 7 // 7
    +
    pushint 8 // 8
    /
    intc_2 // 2
    +
    swap
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.bool>
    // tests/approvals/abi-validation-exhaustive.algo.ts:67
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bool_arr3[routing]() -> void:
validate_bool_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:71
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:73
    // validateEncoding(value)
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.bool, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:71
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_tuple[routing]() -> void:
validate_static_tuple:
    // tests/approvals/abi-validation-exhaustive.algo.ts:75
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:77
    // validateEncoding(value)
    len
    intc_3 // 9
    ==
    assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8>
    // tests/approvals/abi-validation-exhaustive.algo.ts:75
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_tuple[routing]() -> void:
validate_dynamic_tuple:
    // tests/approvals/abi-validation-exhaustive.algo.ts:79
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:81
    // validateEncoding(value)
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    uncover 2
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    ==
    assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>
    // tests/approvals/abi-validation-exhaustive.algo.ts:79
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_struct[routing]() -> void:
validate_static_struct:
    // tests/approvals/abi-validation-exhaustive.algo.ts:83
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:85
    // validateEncoding(value)
    len
    intc_3 // 9
    ==
    assert // invalid number of bytes for ARC4StaticStruct
    // tests/approvals/abi-validation-exhaustive.algo.ts:83
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct[routing]() -> void:
validate_dynamic_struct:
    // tests/approvals/abi-validation-exhaustive.algo.ts:87
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:89
    // validateEncoding(value)
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    uncover 2
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    ==
    assert // invalid number of bytes for ARC4DynamicStruct
    // tests/approvals/abi-validation-exhaustive.algo.ts:87
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_struct_arr[routing]() -> void:
validate_static_struct_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:91
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:93
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_3 // 9
    *
    intc_2 // 2
    +
    swap
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<ARC4StaticStruct>
    // tests/approvals/abi-validation-exhaustive.algo.ts:91
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_struct_arr3[routing]() -> void:
validate_static_struct_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:95
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:97
    // validateEncoding(value)
    len
    pushint 27 // 27
    ==
    assert // invalid number of bytes for arc4.static_array<ARC4StaticStruct, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:95
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct_arr[routing]() -> void:
validate_dynamic_struct_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:99
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:101
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    dup
    cover 2
    intc_2 // 2
    *
    swap
    dup
    len
    swap
    extract 2 0
    intc_1 // 0

validate_dynamic_struct_arr_for_header@2:
    // tests/approvals/abi-validation-exhaustive.algo.ts:101
    // validateEncoding(value)
    dup
    dig 5
    <
    bz validate_dynamic_struct_arr_after_for@5
    dupn 2
    intc_2 // 2
    *
    dig 3
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    dig 7
    dup
    cover 4
    ==
    assert // invalid tail pointer for (len+(uint64,uint8,(len+utf8[]))[])
    dig 1
    len
    substring3
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    swap
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    +
    bury 5
    intc_0 // 1
    +
    bury 1
    b validate_dynamic_struct_arr_for_header@2

validate_dynamic_struct_arr_after_for@5:
    // tests/approvals/abi-validation-exhaustive.algo.ts:101
    // validateEncoding(value)
    dig 3
    intc_2 // 2
    +
    dig 3
    ==
    assert // invalid number of bytes for arc4.dynamic_array<ARC4DynamicStruct>
    // tests/approvals/abi-validation-exhaustive.algo.ts:99
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct_arr3[routing]() -> void:
validate_dynamic_struct_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:103
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:105
    // validateEncoding(value)
    pushint 6 // 6
    intc_1 // 0

validate_dynamic_struct_arr3_for_header@2:
    // tests/approvals/abi-validation-exhaustive.algo.ts:105
    // validateEncoding(value)
    dup
    pushint 3 // 3
    <
    bz validate_dynamic_struct_arr3_after_for@5
    dupn 2
    intc_2 // 2
    *
    dig 4
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    dig 5
    dup
    cover 4
    ==
    assert // invalid tail pointer for (uint64,uint8,(len+utf8[]))[3]
    dig 1
    len
    substring3
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    swap
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    +
    bury 3
    intc_0 // 1
    +
    bury 1
    b validate_dynamic_struct_arr3_for_header@2

validate_dynamic_struct_arr3_after_for@5:
    // tests/approvals/abi-validation-exhaustive.algo.ts:105
    // validateEncoding(value)
    dig 2
    len
    dig 2
    ==
    assert // invalid number of bytes for arc4.static_array<ARC4DynamicStruct, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:103
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct_with_a_bool[routing]() -> void:
validate_dynamic_struct_with_a_bool:
    // tests/approvals/abi-validation-exhaustive.algo.ts:107
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:109
    // validateEncoding(value)
    dup
    len
    dig 1
    intc_0 // 1
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 4 // 4
    ==
    assert // invalid tail pointer at index 1 of (uint8,(len+uint8[]),bool1)
    uncover 2
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 6 // 6
    +
    ==
    assert // invalid number of bytes for WithABool
    // tests/approvals/abi-validation-exhaustive.algo.ts:107
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_native_static_struct[routing]() -> void:
validate_native_static_struct:
    // tests/approvals/abi-validation-exhaustive.algo.ts:111
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:113
    // validateEncoding(value)
    len
    intc_3 // 9
    ==
    assert // invalid number of bytes for tests/approvals/abi-validation-exhaustive.algo.ts::NativeStaticStruct
    // tests/approvals/abi-validation-exhaustive.algo.ts:111
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_native_dynamic_struct[routing]() -> void:
validate_native_dynamic_struct:
    // tests/approvals/abi-validation-exhaustive.algo.ts:115
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:117
    // validateEncoding(value)
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    uncover 2
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    ==
    assert // invalid number of bytes for tests/approvals/abi-validation-exhaustive.algo.ts::NativeDynamicStruct
    // tests/approvals/abi-validation-exhaustive.algo.ts:115
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_native_static_struct_arr[routing]() -> void:
validate_native_static_struct_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:119
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:121
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_3 // 9
    *
    intc_2 // 2
    +
    swap
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeStaticStruct>
    // tests/approvals/abi-validation-exhaustive.algo.ts:119
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_native_static_struct_arr3[routing]() -> void:
validate_native_static_struct_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:123
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:125
    // validateEncoding(value)
    len
    pushint 27 // 27
    ==
    assert // invalid number of bytes for arc4.static_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeStaticStruct, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:123
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_native_dynamic_struct_arr[routing]() -> void:
validate_native_dynamic_struct_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:127
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:129
    // validateEncoding(value)
    dup
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    dup
    cover 2
    intc_2 // 2
    *
    swap
    dup
    len
    swap
    extract 2 0
    intc_1 // 0

validate_native_dynamic_struct_arr_for_header@2:
    // tests/approvals/abi-validation-exhaustive.algo.ts:129
    // validateEncoding(value)
    dup
    dig 5
    <
    bz validate_native_dynamic_struct_arr_after_for@5
    dupn 2
    intc_2 // 2
    *
    dig 3
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    dig 7
    dup
    cover 4
    ==
    assert // invalid tail pointer for (len+(uint64,uint8,(len+utf8[]))[])
    dig 1
    len
    substring3
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    swap
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    +
    bury 5
    intc_0 // 1
    +
    bury 1
    b validate_native_dynamic_struct_arr_for_header@2

validate_native_dynamic_struct_arr_after_for@5:
    // tests/approvals/abi-validation-exhaustive.algo.ts:129
    // validateEncoding(value)
    dig 3
    intc_2 // 2
    +
    dig 3
    ==
    assert // invalid number of bytes for arc4.dynamic_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeDynamicStruct>
    // tests/approvals/abi-validation-exhaustive.algo.ts:127
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_native_dynamic_struct_arr3[routing]() -> void:
validate_native_dynamic_struct_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:131
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:133
    // validateEncoding(value)
    pushint 6 // 6
    intc_1 // 0

validate_native_dynamic_struct_arr3_for_header@2:
    // tests/approvals/abi-validation-exhaustive.algo.ts:133
    // validateEncoding(value)
    dup
    pushint 3 // 3
    <
    bz validate_native_dynamic_struct_arr3_after_for@5
    dupn 2
    intc_2 // 2
    *
    dig 4
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    dig 5
    dup
    cover 4
    ==
    assert // invalid tail pointer for (uint64,uint8,(len+utf8[]))[3]
    dig 1
    len
    substring3
    dup
    len
    dig 1
    intc_3 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 11 // 11
    ==
    assert // invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))
    swap
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    +
    bury 3
    intc_0 // 1
    +
    bury 1
    b validate_native_dynamic_struct_arr3_for_header@2

validate_native_dynamic_struct_arr3_after_for@5:
    // tests/approvals/abi-validation-exhaustive.algo.ts:133
    // validateEncoding(value)
    dig 2
    len
    dig 2
    ==
    assert // invalid number of bytes for arc4.static_array<tests/approvals/abi-validation-exhaustive.algo.ts::NativeDynamicStruct, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:131
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_c2c[routing]() -> void:
validate_c2c:
    // tests/approvals/abi-validation-exhaustive.algo.ts:139
    // const app = compiled.call.create({}).itxn.createdApp
    itxn_begin
    pushbytes 0x4c5c61ba // method "create()void"
    itxn_field ApplicationArgs
    // tests/approvals/abi-validation-exhaustive.algo.ts:137
    // const compiled = compileArc4(InvalidContract)
    pushbytes base64(C4EBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CzEZFEQxGEEAH4AERc8F7zYaAI4BAAEAgAsVH3x1aW52YWxpZLCBAUOABExcYbo2GgCOAQABAIEBQw==)
    itxn_field ApprovalProgramPages
    // tests/approvals/abi-validation-exhaustive.algo.ts:139
    // const app = compiled.call.create({}).itxn.createdApp
    intc_1 // 0
    itxn_field OnCompletion
    pushint 6 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    gitxn 0 CreatedApplicationID
    // tests/approvals/abi-validation-exhaustive.algo.ts:141-144
    // abiCall({
    //   method: InvalidContract.prototype.invalidValue,
    //   appId: app,
    // })
    itxn_begin
    pushbytes 0x45cf05ef // method "invalidValue()uint64[3]"
    itxn_field ApplicationArgs
    itxn_field ApplicationID
    pushint 6 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    pushbytes 0x151f7c75
    ==
    assert // Bytes has valid prefix
    len
    pushint 24 // 24
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint64, 3>
    // tests/approvals/abi-validation-exhaustive.algo.ts:136
    // validate_c2c() {
    intc_0 // 1
    return

#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 0 2 11
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txn NumAppArgs
    bz main_bare_routing@28
    pushbytess 0x4d758c59 0x6bb7b963 0x18852cd6 0x5b2efbe1 0xecca7a98 0x94da73c0 0x26230de1 0x3ec77fac 0xf111c07e 0x3f68b7d1 0x674c0e87 0x091ab848 0xf3289fb8 0x91acee51 0x4e641e99 0x6536e3c2 0x93522cb8 0xbf888825 0x22aa90d6 0x6eecb49d 0x28388829 0x7e804bbf 0xce26c72c // method "validate_uint64(uint64)void", method "validate_uint8(uint8)void", method "validate_uint512(uint512)void", method "validate_ufixed64(ufixed64x2)void", method "validate_uint8_arr(uint8[])void", method "validate_uint8_arr3(uint8[3])void", method "validate_bool(bool)void", method "validate_byte(byte)void", method "validate_string(string)void", method "validate_bytes(byte[])void", method "validate_address(address)void", method "validate_account(address)void", method "validate_bool_arr(bool[])void", method "validate_bool_arr3(bool[3])void", method "validate_static_tuple((uint64,uint8))void", method "validate_dynamic_tuple((uint64,uint8,string))void", method "validate_static_struct((uint64,uint8))void", method "validate_dynamic_struct((uint64,uint8,string))void", method "validate_static_struct_arr((uint64,uint8)[])void", method "validate_static_struct_arr3((uint64,uint8)[3])void", method "validate_dynamic_struct_arr((uint64,uint8,string)[])void", method "validate_dynamic_struct_arr3((uint64,uint8,string)[3])void", method "validate_dynamic_struct_with_a_bool((uint8,byte[],bool))void"
    txna ApplicationArgs 0
    match main_validate_uint64_route@3 main_validate_uint8_route@4 main_validate_uint512_route@5 main_validate_ufixed64_route@6 main_validate_uint8_arr_route@7 main_validate_uint8_arr3_route@8 main_validate_bool_route@9 main_validate_byte_route@10 main_validate_string_route@11 main_validate_bytes_route@12 main_validate_address_route@13 main_validate_account_route@14 main_validate_bool_arr_route@15 main_validate_bool_arr3_route@16 main_validate_static_tuple_route@17 main_validate_dynamic_tuple_route@18 main_validate_static_struct_route@19 main_validate_dynamic_struct_route@20 main_validate_static_struct_arr_route@21 main_validate_static_struct_arr3_route@22 main_validate_dynamic_struct_arr_route@23 main_validate_dynamic_struct_arr3_route@24 main_validate_dynamic_struct_with_a_bool_route@25

main_after_if_else@32:
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    intc_1 // 0
    return

main_validate_dynamic_struct_with_a_bool_route@25:
    // tests/approvals/abi-validation-exhaustive.algo.ts:99
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:99
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_dynamic_struct_with_a_bool
    intc_0 // 1
    return

main_validate_dynamic_struct_arr3_route@24:
    // tests/approvals/abi-validation-exhaustive.algo.ts:95
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:95
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_dynamic_struct_arr3
    intc_0 // 1
    return

main_validate_dynamic_struct_arr_route@23:
    // tests/approvals/abi-validation-exhaustive.algo.ts:91
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:91
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_dynamic_struct_arr
    intc_0 // 1
    return

main_validate_static_struct_arr3_route@22:
    // tests/approvals/abi-validation-exhaustive.algo.ts:87
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:87
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_static_struct_arr3
    intc_0 // 1
    return

main_validate_static_struct_arr_route@21:
    // tests/approvals/abi-validation-exhaustive.algo.ts:83
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:83
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_static_struct_arr
    intc_0 // 1
    return

main_validate_dynamic_struct_route@20:
    // tests/approvals/abi-validation-exhaustive.algo.ts:79
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:79
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_dynamic_struct
    intc_0 // 1
    return

main_validate_static_struct_route@19:
    // tests/approvals/abi-validation-exhaustive.algo.ts:75
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:75
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_static_struct
    intc_0 // 1
    return

main_validate_dynamic_tuple_route@18:
    // tests/approvals/abi-validation-exhaustive.algo.ts:71
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:71
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_dynamic_tuple
    intc_0 // 1
    return

main_validate_static_tuple_route@17:
    // tests/approvals/abi-validation-exhaustive.algo.ts:67
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:67
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_static_tuple
    intc_0 // 1
    return

main_validate_bool_arr3_route@16:
    // tests/approvals/abi-validation-exhaustive.algo.ts:63
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:63
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_bool_arr3
    intc_0 // 1
    return

main_validate_bool_arr_route@15:
    // tests/approvals/abi-validation-exhaustive.algo.ts:59
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:59
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_bool_arr
    intc_0 // 1
    return

main_validate_account_route@14:
    // tests/approvals/abi-validation-exhaustive.algo.ts:55
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:55
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_account
    intc_0 // 1
    return

main_validate_address_route@13:
    // tests/approvals/abi-validation-exhaustive.algo.ts:51
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:51
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_address
    intc_0 // 1
    return

main_validate_bytes_route@12:
    // tests/approvals/abi-validation-exhaustive.algo.ts:47
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:47
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_bytes
    intc_0 // 1
    return

main_validate_string_route@11:
    // tests/approvals/abi-validation-exhaustive.algo.ts:43
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:43
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_string
    intc_0 // 1
    return

main_validate_byte_route@10:
    // tests/approvals/abi-validation-exhaustive.algo.ts:39
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:39
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_byte
    intc_0 // 1
    return

main_validate_bool_route@9:
    // tests/approvals/abi-validation-exhaustive.algo.ts:35
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:35
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_bool
    intc_0 // 1
    return

main_validate_uint8_arr3_route@8:
    // tests/approvals/abi-validation-exhaustive.algo.ts:31
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:31
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_uint8_arr3
    intc_0 // 1
    return

main_validate_uint8_arr_route@7:
    // tests/approvals/abi-validation-exhaustive.algo.ts:27
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:27
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_uint8_arr
    intc_0 // 1
    return

main_validate_ufixed64_route@6:
    // tests/approvals/abi-validation-exhaustive.algo.ts:23
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:23
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_ufixed64
    intc_0 // 1
    return

main_validate_uint512_route@5:
    // tests/approvals/abi-validation-exhaustive.algo.ts:19
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:19
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_uint512
    intc_0 // 1
    return

main_validate_uint8_route@4:
    // tests/approvals/abi-validation-exhaustive.algo.ts:15
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:15
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_uint8
    intc_0 // 1
    return

main_validate_uint64_route@3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:11
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/abi-validation-exhaustive.algo.ts:11
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    callsub validate_uint64
    intc_0 // 1
    return

main_bare_routing@28:
    // tests/approvals/abi-validation-exhaustive.algo.ts:10
    // class AbiValidationExhaustive extends Contract {
    txn OnCompletion
    bnz main_after_if_else@32
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint64(value: bytes) -> void:
validate_uint64:
    // tests/approvals/abi-validation-exhaustive.algo.ts:11-12
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_uint64(value: arc4.UintN64) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:13
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 8 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint8(value: bytes) -> void:
validate_uint8:
    // tests/approvals/abi-validation-exhaustive.algo.ts:15-16
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_uint8(value: arc4.UintN8) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:17
    // validateEncoding(value)
    frame_dig -1
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.uint8
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint512(value: bytes) -> void:
validate_uint512:
    // tests/approvals/abi-validation-exhaustive.algo.ts:19-20
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_uint512(value: arc4.UintN<512>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:21
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 64 // 64
    ==
    assert // invalid number of bytes for arc4.uint512
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_ufixed64(value: bytes) -> void:
validate_ufixed64:
    // tests/approvals/abi-validation-exhaustive.algo.ts:23-24
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_ufixed64(value: arc4.UFixedNxM<64, 2>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:25
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 8 // 8
    ==
    assert // invalid number of bytes for arc4.ufixed64x2
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint8_arr(value: bytes) -> void:
validate_uint8_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:27-28
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_uint8_arr(value: arc4.DynamicArray<arc4.UintN8>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:29
    // validateEncoding(value)
    frame_dig -1
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    frame_dig -1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_uint8_arr3(value: bytes) -> void:
validate_uint8_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:31-32
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_uint8_arr3(value: arc4.StaticArray<arc4.UintN8, 3>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:33
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 3 // 3
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 3>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bool(value: bytes) -> void:
validate_bool:
    // tests/approvals/abi-validation-exhaustive.algo.ts:35-36
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_bool(value: arc4.Bool) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:37
    // validateEncoding(value)
    frame_dig -1
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.bool
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_byte(value: bytes) -> void:
validate_byte:
    // tests/approvals/abi-validation-exhaustive.algo.ts:39-40
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_byte(value: arc4.Byte) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:41
    // validateEncoding(value)
    frame_dig -1
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.uint8
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_string(value: bytes) -> void:
validate_string:
    // tests/approvals/abi-validation-exhaustive.algo.ts:43-44
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_string(value: arc4.Str) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:45
    // validateEncoding(value)
    frame_dig -1
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    frame_dig -1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bytes(value: bytes) -> void:
validate_bytes:
    // tests/approvals/abi-validation-exhaustive.algo.ts:47-48
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_bytes(value: arc4.DynamicBytes) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:49
    // validateEncoding(value)
    frame_dig -1
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    frame_dig -1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_address(value: bytes) -> void:
validate_address:
    // tests/approvals/abi-validation-exhaustive.algo.ts:51-52
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_address(value: arc4.Address) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:53
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 32 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_account(value: bytes) -> void:
validate_account:
    // tests/approvals/abi-validation-exhaustive.algo.ts:55-56
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_account(value: arc4.Address) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:57
    // validateEncoding(value.native)
    frame_dig -1
    len
    pushint 32 // 32
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bool_arr(value: bytes) -> void:
validate_bool_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:59-60
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_bool_arr(value: arc4.DynamicArray<arc4.Bool>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:61
    // validateEncoding(value)
    frame_dig -1
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 7 // 7
    +
    pushint 8 // 8
    /
    intc_2 // 2
    +
    frame_dig -1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.bool>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_bool_arr3(value: bytes) -> void:
validate_bool_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:63-64
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_bool_arr3(value: arc4.StaticArray<arc4.Bool, 3>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:65
    // validateEncoding(value)
    frame_dig -1
    len
    intc_0 // 1
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.bool, 3>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_tuple(value: bytes) -> void:
validate_static_tuple:
    // tests/approvals/abi-validation-exhaustive.algo.ts:67-68
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_static_tuple(value: ARC4StaticTuple) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:69
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 9 // 9
    ==
    assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_tuple(value: bytes) -> void:
validate_dynamic_tuple:
    // tests/approvals/abi-validation-exhaustive.algo.ts:71-72
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_dynamic_tuple(value: ARC4DynamicTuple) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:73
    // validateEncoding(value)
    frame_dig -1
    len
    frame_dig -1
    pushint 9 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    intc_3 // 11
    ==
    assert // invalid tail pointer at index 2 of arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>
    frame_dig -1
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    intc_3 // 11
    +
    ==
    assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_struct(value: bytes) -> void:
validate_static_struct:
    // tests/approvals/abi-validation-exhaustive.algo.ts:75-76
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_static_struct(value: ARC4StaticStruct) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:77
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 9 // 9
    ==
    assert // invalid number of bytes for ARC4StaticStruct
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct(value: bytes) -> void:
validate_dynamic_struct:
    // tests/approvals/abi-validation-exhaustive.algo.ts:79-80
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_dynamic_struct(value: ARC4DynamicStruct) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:81
    // validateEncoding(value)
    frame_dig -1
    len
    frame_dig -1
    pushint 9 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    intc_3 // 11
    ==
    assert // invalid tail pointer at index 2 of ARC4DynamicStruct
    frame_dig -1
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    intc_3 // 11
    +
    ==
    assert // invalid number of bytes for ARC4DynamicStruct
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_struct_arr(value: bytes) -> void:
validate_static_struct_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:83-84
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_static_struct_arr(value: arc4.DynamicArray<ARC4StaticStruct>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:85
    // validateEncoding(value)
    frame_dig -1
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    pushint 9 // 9
    *
    intc_2 // 2
    +
    frame_dig -1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<ARC4StaticStruct>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_static_struct_arr3(value: bytes) -> void:
validate_static_struct_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:87-88
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_static_struct_arr3(value: arc4.StaticArray<ARC4StaticStruct, 3>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:89
    // validateEncoding(value)
    frame_dig -1
    len
    pushint 27 // 27
    ==
    assert // invalid number of bytes for arc4.static_array<ARC4StaticStruct, 3>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct_arr(value: bytes) -> void:
validate_dynamic_struct_arr:
    // tests/approvals/abi-validation-exhaustive.algo.ts:91-92
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_dynamic_struct_arr(value: arc4.DynamicArray<ARC4DynamicStruct>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:93
    // validateEncoding(value)
    frame_dig -1
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    dup
    frame_dig -1
    extract 2 0
    swap
    intc_2 // 2
    *
    intc_1 // 0

validate_dynamic_struct_arr_for_header@1:
    // tests/approvals/abi-validation-exhaustive.algo.ts:93
    // validateEncoding(value)
    frame_dig 3
    frame_dig 0
    <
    bz validate_dynamic_struct_arr_after_for@4
    frame_dig 3
    dup
    intc_2 // 2
    *
    frame_dig 1
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    frame_dig 2
    dup
    cover 4
    ==
    assert // invalid tail pointer for arc4.dynamic_array<ARC4DynamicStruct>
    dig 1
    len
    substring3
    dup
    len
    dig 1
    pushint 9 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    intc_3 // 11
    ==
    assert // invalid tail pointer at index 2 of ARC4DynamicStruct
    swap
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    intc_3 // 11
    +
    +
    frame_bury 2
    intc_0 // 1
    +
    frame_bury 3
    b validate_dynamic_struct_arr_for_header@1

validate_dynamic_struct_arr_after_for@4:
    // tests/approvals/abi-validation-exhaustive.algo.ts:93
    // validateEncoding(value)
    frame_dig 2
    intc_2 // 2
    +
    frame_dig -1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<ARC4DynamicStruct>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct_arr3(value: bytes) -> void:
validate_dynamic_struct_arr3:
    // tests/approvals/abi-validation-exhaustive.algo.ts:95-96
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_dynamic_struct_arr3(value: arc4.StaticArray<ARC4DynamicStruct, 3>) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:97
    // validateEncoding(value)
    pushint 6 // 6
    intc_1 // 0

validate_dynamic_struct_arr3_for_header@1:
    // tests/approvals/abi-validation-exhaustive.algo.ts:97
    // validateEncoding(value)
    frame_dig 1
    pushint 3 // 3
    <
    bz validate_dynamic_struct_arr3_after_for@4
    frame_dig 1
    dup
    intc_2 // 2
    *
    frame_dig -1
    swap
    extract_uint16 // on error: invalid array encoding
    dup
    frame_dig 0
    dup
    cover 3
    ==
    assert // invalid tail pointer for arc4.static_array<ARC4DynamicStruct, 3>
    frame_dig -1
    len
    frame_dig -1
    cover 2
    substring3
    dup
    len
    dig 1
    pushint 9 // 9
    extract_uint16 // on error: invalid tuple encoding
    dup
    intc_3 // 11
    ==
    assert // invalid tail pointer at index 2 of ARC4DynamicStruct
    swap
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    intc_3 // 11
    +
    +
    frame_bury 0
    intc_0 // 1
    +
    frame_bury 1
    b validate_dynamic_struct_arr3_for_header@1

validate_dynamic_struct_arr3_after_for@4:
    // tests/approvals/abi-validation-exhaustive.algo.ts:97
    // validateEncoding(value)
    frame_dig -1
    len
    frame_dig 0
    ==
    assert // invalid number of bytes for arc4.static_array<ARC4DynamicStruct, 3>
    retsub


// tests/approvals/abi-validation-exhaustive.algo.ts::AbiValidationExhaustive.validate_dynamic_struct_with_a_bool(value: bytes) -> void:
validate_dynamic_struct_with_a_bool:
    // tests/approvals/abi-validation-exhaustive.algo.ts:99-100
    // @arc4.abimethod({ validateEncoding: 'unsafe-disabled' })
    // validate_dynamic_struct_with_a_bool(value: WithABool) {
    proto 1 0
    // tests/approvals/abi-validation-exhaustive.algo.ts:101
    // validateEncoding(value)
    frame_dig -1
    len
    frame_dig -1
    intc_0 // 1
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 4 // 4
    ==
    assert // invalid tail pointer at index 1 of WithABool
    frame_dig -1
    swap
    dig 2
    substring3
    intc_1 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    pushint 4 // 4
    +
    ==
    assert // invalid number of bytes for WithABool
    retsub

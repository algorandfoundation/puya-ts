{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/reserve-scratch.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;AAWqB;AAAjB;;AACuB;AAAvB;;AACkB;AAAlB;;AAMO;;AAA0B;AAA1B;AAAP;AACO;;AAA+B;AAA/B;AAAP;AACO;;AAA2B;AAA3B;AAAP;AACO;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "tests/approvals/reserve-scratch.algo.ts::ReserveScratchAlgo.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 45"
    },
    "5": {
      "op": "bytecblock \"hello\""
    },
    "13": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "14": {
      "op": "store 0",
      "stack_out": []
    },
    "16": {
      "op": "bytec_0 // \"hello\"",
      "defined_out": [
        "\"hello\""
      ],
      "stack_out": [
        "\"hello\""
      ]
    },
    "17": {
      "op": "store 1",
      "stack_out": []
    },
    "19": {
      "op": "intc_1 // 45",
      "defined_out": [
        "45"
      ],
      "stack_out": [
        "45"
      ]
    },
    "20": {
      "op": "store 15",
      "stack_out": []
    },
    "22": {
      "op": "load 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "25": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "26": {
      "op": "assert",
      "stack_out": []
    },
    "27": {
      "op": "load 1",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "29": {
      "op": "bytec_0 // \"hello\"",
      "stack_out": [
        "tmp%2#0",
        "\"hello\""
      ]
    },
    "30": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "31": {
      "op": "assert",
      "stack_out": []
    },
    "32": {
      "op": "load 15",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "34": {
      "op": "intc_1 // 45",
      "stack_out": [
        "tmp%4#0",
        "45"
      ]
    },
    "35": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "36": {
      "op": "assert",
      "stack_out": []
    },
    "37": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "38": {
      "op": "return",
      "stack_out": []
    }
  }
}
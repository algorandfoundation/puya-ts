#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 2 1 123
    bytecblock "" "t2" "t4" "t1" 0x00 "t3" 0x000b000000000000007b80000568656c6c6f "hello" 0x000400070001610043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c880000162 0x01c8
    // tests/approvals/global-state.algo.ts:46
    // export class TestTuple extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x125477f5 // method "testTuple()void"
    txna ApplicationArgs 0
    match main_testTuple_route@3

main_after_if_else@10:
    // tests/approvals/global-state.algo.ts:46
    // export class TestTuple extends Contract {
    intc_0 // 0
    return

main_testTuple_route@3:
    // tests/approvals/global-state.algo.ts:53
    // testTuple() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub testTuple
    intc_2 // 1
    return

main_bare_routing@6:
    // tests/approvals/global-state.algo.ts:46
    // export class TestTuple extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    intc_2 // 1
    return


// tests/approvals/global-state.algo.ts::TestTuple.testTuple() -> void:
testTuple:
    // tests/approvals/global-state.algo.ts:53
    // testTuple() {
    proto 0 0
    intc_0 // 0
    dupn 12
    bytec_0 // ""
    dupn 12
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    bytec_3 // "t1"
    bytec 6 // 0x000b000000000000007b80000568656c6c6f
    // tests/approvals/global-state.algo.ts:54
    // this.t1.value = ['hello', 123, true]
    app_global_put
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    intc_0 // 0
    bytec_3 // "t1"
    app_global_get_ex
    dup
    uncover 2
    swap
    bz testTuple_ternary_false@2
    frame_dig 27
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    substring3
    extract 2 0

testTuple_ternary_merge@3:
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    frame_dig 26
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:55
    // assert(this.t1.value[0] === 'hello', 'Tuple value should be set')
    bytec 7 // "hello"
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    intc_0 // 0
    bytec_3 // "t1"
    app_global_get_ex
    dup
    cover 2
    frame_bury 13
    frame_bury 0
    bz testTuple_ternary_false@5
    frame_dig 0
    intc_1 // 2
    extract_uint64

testTuple_ternary_merge@6:
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    frame_dig 13
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:56
    // assert(this.t1.value[1] === 123, 'Tuple value should be set')
    intc_3 // 123
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    intc_0 // 0
    bytec_3 // "t1"
    app_global_get_ex
    dup
    cover 2
    frame_bury 18
    frame_bury 5
    bz testTuple_ternary_false@8
    frame_dig 5
    pushint 80 // 80
    getbit
    bytec 4 // 0x00
    intc_0 // 0
    uncover 2
    setbit
    intc_0 // 0
    getbit

testTuple_ternary_merge@9:
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    frame_dig 18
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:57
    // assert(this.t1.value[2] === true, 'Tuple value should be set')
    intc_2 // 1
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    bytec_1 // "t2"
    bytec 8 // 0x000400070001610043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c880000162
    // tests/approvals/global-state.algo.ts:59
    // this.t2.value = ['a', ['b', 456n, true]]
    app_global_put
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    bytec_1 // "t2"
    app_global_get_ex
    dup
    cover 2
    frame_bury 19
    frame_bury 6
    bz testTuple_ternary_false@11
    frame_dig 6
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_1 // 2
    extract_uint16
    substring3
    extract 2 0

testTuple_ternary_merge@12:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    frame_dig 19
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:60
    // assert(this.t2.value[0] === 'a', 'Tuple value should be set')
    pushbytes "a"
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    bytec_1 // "t2"
    app_global_get_ex
    dup
    cover 2
    frame_bury 20
    frame_bury 7
    bz testTuple_ternary_false@14
    frame_dig 7
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    len
    substring3
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    substring3
    extract 2 0

testTuple_ternary_merge@15:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    frame_dig 20
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:61
    // assert(this.t2.value[1][0] === 'b', 'Tuple value should be set')
    pushbytes "b"
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    bytec_1 // "t2"
    app_global_get_ex
    dup
    cover 2
    frame_bury 21
    frame_bury 8
    bz testTuple_ternary_false@17
    frame_dig 8
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    len
    substring3
    extract 2 64 // on error: Index access is out of bounds

testTuple_ternary_merge@18:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    frame_dig 21
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:62
    // assert(this.t2.value[1][1] === 456n, 'Tuple value should be set')
    bytec 9 // 0x01c8
    b==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    bytec_1 // "t2"
    app_global_get_ex
    dup
    cover 2
    frame_bury 22
    frame_bury 9
    bz testTuple_ternary_false@20
    frame_dig 9
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    len
    substring3
    pushint 528 // 528
    getbit
    bytec 4 // 0x00
    intc_0 // 0
    uncover 2
    setbit
    intc_0 // 0
    getbit

testTuple_ternary_merge@21:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    frame_dig 22
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:63
    // assert(this.t2.value[1][2] === true, 'Tuple value should be set')
    intc_2 // 1
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    bytec 5 // "t3"
    bytec 6 // 0x000b000000000000007b80000568656c6c6f
    // tests/approvals/global-state.algo.ts:65
    // this.t3.value = { a: 'hello', b: 123, c: true }
    app_global_put
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    intc_0 // 0
    bytec 5 // "t3"
    app_global_get_ex
    dup
    cover 2
    frame_bury 23
    frame_bury 10
    bz testTuple_ternary_false@23
    frame_dig 10
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    substring3
    extract 2 0

testTuple_ternary_merge@24:
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    frame_dig 23
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:66
    // assert(this.t3.value.a === 'hello', 'Tuple value should be set')
    bytec 7 // "hello"
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    intc_0 // 0
    bytec 5 // "t3"
    app_global_get_ex
    dup
    cover 2
    frame_bury 24
    frame_bury 11
    bz testTuple_ternary_false@26
    frame_dig 11
    intc_1 // 2
    extract_uint64

testTuple_ternary_merge@27:
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    frame_dig 24
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:67
    // assert(this.t3.value.b === 123, 'Tuple value should be set')
    intc_3 // 123
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    intc_0 // 0
    bytec 5 // "t3"
    app_global_get_ex
    dup
    cover 2
    frame_bury 25
    frame_bury 12
    bz testTuple_ternary_false@29
    frame_dig 12
    pushint 80 // 80
    getbit
    bytec 4 // 0x00
    intc_0 // 0
    uncover 2
    setbit
    intc_0 // 0
    getbit

testTuple_ternary_merge@30:
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    frame_dig 25
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:68
    // assert(this.t3.value.c === true, 'Tuple value should be set')
    intc_2 // 1
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    bytec_2 // "t4"
    bytec 8 // 0x000400070001610043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c880000162
    // tests/approvals/global-state.algo.ts:70
    // this.t4.value = ['a', { a: 'b', b: 456n, c: true }]
    app_global_put
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    bytec_2 // "t4"
    app_global_get_ex
    dup
    cover 2
    frame_bury 14
    frame_bury 1
    bz testTuple_ternary_false@32
    frame_dig 1
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_1 // 2
    extract_uint16
    substring3
    extract 2 0

testTuple_ternary_merge@33:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    frame_dig 14
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:71
    // assert(this.t4.value[0] === 'a', 'Tuple value should be set')
    pushbytes "a"
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    bytec_2 // "t4"
    app_global_get_ex
    dup
    cover 2
    frame_bury 15
    frame_bury 2
    bz testTuple_ternary_false@35
    frame_dig 2
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    len
    substring3
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    len
    substring3
    extract 2 0

testTuple_ternary_merge@36:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    frame_dig 15
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:72
    // assert(this.t4.value[1].a === 'b', 'Tuple value should be set')
    pushbytes "b"
    ==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    bytec_2 // "t4"
    app_global_get_ex
    dup
    cover 2
    frame_bury 16
    frame_bury 3
    bz testTuple_ternary_false@38
    frame_dig 3
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    len
    substring3
    extract 2 64 // on error: Index access is out of bounds

testTuple_ternary_merge@39:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    frame_dig 16
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:73
    // assert(this.t4.value[1].b === 456n, 'Tuple value should be set')
    bytec 9 // 0x01c8
    b==
    assert // Tuple value should be set
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    bytec_2 // "t4"
    app_global_get_ex
    dup
    cover 2
    frame_bury 17
    frame_bury 4
    bz testTuple_ternary_false@41
    frame_dig 4
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    len
    substring3
    pushint 528 // 528
    getbit
    bytec 4 // 0x00
    intc_0 // 0
    uncover 2
    setbit
    intc_0 // 0
    getbit

testTuple_ternary_merge@42:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    frame_dig 17
    assert // check GlobalState exists
    // tests/approvals/global-state.algo.ts:74
    // assert(this.t4.value[1].c === true, 'Tuple value should be set')
    intc_2 // 1
    ==
    assert // Tuple value should be set
    retsub

testTuple_ternary_false@41:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    bytec_0 // ""
    b testTuple_ternary_merge@42

testTuple_ternary_false@38:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    b testTuple_ternary_merge@39

testTuple_ternary_false@35:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    b testTuple_ternary_merge@36

testTuple_ternary_false@32:
    // tests/approvals/global-state.algo.ts:51
    // t4 = GlobalState<[string, { a: string; b: biguint; c: boolean }]>()
    intc_0 // 0
    b testTuple_ternary_merge@33

testTuple_ternary_false@29:
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    bytec_0 // ""
    b testTuple_ternary_merge@30

testTuple_ternary_false@26:
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    bytec_0 // ""
    b testTuple_ternary_merge@27

testTuple_ternary_false@23:
    // tests/approvals/global-state.algo.ts:50
    // t3 = GlobalState<{ a: string; b: uint64; c: boolean }>()
    intc_0 // 0
    b testTuple_ternary_merge@24

testTuple_ternary_false@20:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    bytec_0 // ""
    b testTuple_ternary_merge@21

testTuple_ternary_false@17:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    b testTuple_ternary_merge@18

testTuple_ternary_false@14:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    b testTuple_ternary_merge@15

testTuple_ternary_false@11:
    // tests/approvals/global-state.algo.ts:48
    // t2 = GlobalState<[string, [string, biguint, boolean]]>()
    intc_0 // 0
    b testTuple_ternary_merge@12

testTuple_ternary_false@8:
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    bytec_0 // ""
    b testTuple_ternary_merge@9

testTuple_ternary_false@5:
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    bytec_0 // ""
    b testTuple_ternary_merge@6

testTuple_ternary_false@2:
    // tests/approvals/global-state.algo.ts:47
    // t1 = GlobalState<[string, uint64, boolean]>()
    intc_0 // 0
    b testTuple_ternary_merge@3

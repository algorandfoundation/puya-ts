main tests/approvals/arc4-types.algo.ts::Arc4TypesTestContract.approvalProgram:
    block@0: // L151
        let array%encoded%0#1: bytes[8][] = (concat 0x 0x0000000000000041)
        let array%data%0#1: bytes[8][] = (concat 0x array%encoded%0#1)
        let encoded%0#0: bytes[8][] = array%data%0#1
        let concatenated%0#0: bytes = (concat 0x000000000000004100000000000000410000000000000041 encoded%0#0)
        let byte_len%0#0: uint64 = (len concatenated%0#0)
        let len_%0#1: uint64 = (/ byte_len%0#0 8u)
        let as_bytes%0#0: bytes[8] = (itob len_%0#1)
        let len_16_bit%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let myArray#1: bytes = (concat len_16_bit%0#0 concatenated%0#0)
        let expr_value_trimmed%1#0: bytes = ((extract 2 0) myArray#1)
        let concatenated%1#0: bytes = (concat expr_value_trimmed%1#0 expr_value_trimmed%1#0)
        let byte_len%1#0: uint64 = (len concatenated%1#0)
        let len_%1#0: uint64 = (/ byte_len%1#0 8u)
        let as_bytes%1#0: bytes[8] = (itob len_%1#0)
        let len_16_bit%1#0: bytes = ((extract 6 2) as_bytes%1#0)
        let doubleArray#0: bytes = (concat len_16_bit%1#0 concatenated%1#0)
        let tmp%0#4: bool = (== doubleArray#0 0x000800000000000000410000000000000041000000000000004100000000000000410000000000000041000000000000004100000000000000410000000000000041)
        (assert tmp%0#4)
        let array_length#0: uint64 = (extract_uint16 myArray#1 0u)
        let length_minus_1#0: uint64 = (- array_length#0 1u)
        let tmp%0#9: bytes = (itob length_minus_1#0)
        let tmp%1#8: bytes = ((extract 6 0) tmp%0#9)
        let result#1: bytes = ((replace2 0) myArray#1 tmp%1#8)
        let tmp%2#6: uint64 = (len result#1)
        let item_location#0: uint64 = (- tmp%2#6 8u)
        let popped#0: bytes = (extract3 result#1 item_location#0 8u)
        let tmp%2#2: bool = (== 0x0000000000000041 popped#0)
        (assert tmp%2#2)
        let b#1: bytes[32] = (txn Sender)
        let tmp%0#5: bool = (!= addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ b#1)
        (assert tmp%0#5) // Zero address should not match sender
        return 1u
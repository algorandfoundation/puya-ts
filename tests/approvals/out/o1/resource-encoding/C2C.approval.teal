#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 6
    bytecblock 0x01 0x151f7c75
    // tests/approvals/resource-encoding.algo.ts:72
    // class C2C extends Contract {
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytess 0xfd89cbe5 0x0fefd6f7 0xe7bc0f52 // method "testCallToForeign(address,uint64)void", method "testCallToValue(address,uint64)void", method "testCallToEchoResource()void"
    txna ApplicationArgs 0
    match main_testCallToForeign_route@3 main_testCallToValue_route@4 main_testCallToEchoResource_route@5

main_after_if_else@12:
    // tests/approvals/resource-encoding.algo.ts:72
    // class C2C extends Contract {
    intc_0 // 0
    return

main_testCallToEchoResource_route@5:
    // tests/approvals/resource-encoding.algo.ts:90
    // testCallToEchoResource() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub testCallToEchoResource
    intc_1 // 1
    return

main_testCallToValue_route@4:
    // tests/approvals/resource-encoding.algo.ts:81
    // testCallToValue(account: Account, appId: Application) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:72
    // class C2C extends Contract {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    // tests/approvals/resource-encoding.algo.ts:81
    // testCallToValue(account: Account, appId: Application) {
    callsub testCallToValue
    intc_1 // 1
    return

main_testCallToForeign_route@3:
    // tests/approvals/resource-encoding.algo.ts:73
    // testCallToForeign(account: Account, appId: Application) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:72
    // class C2C extends Contract {
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    // tests/approvals/resource-encoding.algo.ts:73
    // testCallToForeign(account: Account, appId: Application) {
    callsub testCallToForeign
    intc_1 // 1
    return

main_bare_routing@8:
    // tests/approvals/resource-encoding.algo.ts:72
    // class C2C extends Contract {
    txn OnCompletion
    bnz main_after_if_else@12
    txn ApplicationID
    !
    assert // can only call when creating
    intc_1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::C2C.testCallToForeign(account: bytes, appId: uint64) -> void:
testCallToForeign:
    // tests/approvals/resource-encoding.algo.ts:73
    // testCallToForeign(account: Account, appId: Application) {
    proto 2 0
    // tests/approvals/resource-encoding.algo.ts:74-77
    // const { returnValue: res1 } = abiCall(Foreign.prototype.testExplicitForeign, {
    //   appId,
    //   args: [account],
    // })
    itxn_begin
    frame_dig -2
    itxn_field Accounts
    pushbytes 0x115ff342 // method "testExplicitForeign(account)uint64"
    itxn_field ApplicationArgs
    bytec_0 // 0x01
    itxn_field ApplicationArgs
    frame_dig -1
    itxn_field ApplicationID
    // tests/approvals/resource-encoding.algo.ts:74-77
    // const { returnValue: res1 } = abiCall(Foreign.prototype.testExplicitForeign, {
    //   appId,
    //   args: [account],
    // })
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    btoi
    // tests/approvals/resource-encoding.algo.ts:79
    // assert(res1 === account.balance)
    frame_dig -2
    acct_params_get AcctBalance
    assert // account funded
    ==
    assert
    retsub


// tests/approvals/resource-encoding.algo.ts::C2C.testCallToValue(account: bytes, appId: uint64) -> void:
testCallToValue:
    // tests/approvals/resource-encoding.algo.ts:81
    // testCallToValue(account: Account, appId: Application) {
    proto 2 0
    // tests/approvals/resource-encoding.algo.ts:82-85
    // const { returnValue: res1 } = abiCall(ByValue.prototype.testExplicitValue, {
    //   appId,
    //   args: [account],
    // })
    itxn_begin
    pushbytes 0xd7308a13 // method "testExplicitValue(address)uint64"
    itxn_field ApplicationArgs
    frame_dig -2
    itxn_field ApplicationArgs
    frame_dig -1
    itxn_field ApplicationID
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    btoi
    // tests/approvals/resource-encoding.algo.ts:87
    // assert(res1 === account.balance)
    frame_dig -2
    acct_params_get AcctBalance
    assert // account funded
    ==
    assert
    retsub


// tests/approvals/resource-encoding.algo.ts::C2C.testCallToEchoResource() -> void:
testCallToEchoResource:
    // tests/approvals/resource-encoding.algo.ts:93
    // const appId = compiled.bareCreate().createdApp
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:91
    // const compiled = compileArc4(EchoResource)
    pushbytes base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CiADAQIDMRtBAFeCAgSwnXfhBCp3rIE2GgCOAgAaAAOBAEMxGRREMRhENhoBFzYaAhc2GgOIAFkiQzEZFEQxGEQ2GgEXwDA2GgIXwDI2GgMXwByIABcWgAQVH3x1TFCwIkMxGUD/uTEYFEQiQ4oDASLAGhfAMIv9EkQjwBoXwDKL/hJEJMAaF8Aci/8SRIv9iYoDACLAGheL/RJEI8AaF4v+EkQkwBqL/xJEiQ==)
    itxn_field ApprovalProgramPages
    // tests/approvals/resource-encoding.algo.ts:93
    // const appId = compiled.bareCreate().createdApp
    intc_0 // 0
    itxn_field OnCompletion
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // tests/approvals/resource-encoding.algo.ts:94-100
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:98
    // assetName: 'TEST',
    pushbytes "TEST"
    itxn_field ConfigAssetName
    // tests/approvals/resource-encoding.algo.ts:97
    // unitName: 'T',
    pushbytes "T"
    itxn_field ConfigAssetUnitName
    // tests/approvals/resource-encoding.algo.ts:96
    // total: 1,
    intc_1 // 1
    itxn_field ConfigAssetTotal
    // tests/approvals/resource-encoding.algo.ts:94-99
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    pushint 3 // 3
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    // tests/approvals/resource-encoding.algo.ts:94-100
    // const asset = itxn
    //   .assetConfig({
    //     total: 1,
    //     unitName: 'T',
    //     assetName: 'TEST',
    //   })
    //   .submit().createdAsset
    itxn_submit
    // tests/approvals/resource-encoding.algo.ts:100
    // .submit().createdAsset
    itxn CreatedAssetID
    // tests/approvals/resource-encoding.algo.ts:102-105
    // compiled.call.echoResourceByForeignIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:103
    // args: [asset, Global.currentApplicationId, Txn.sender],
    global CurrentApplicationID
    txn Sender
    itxn_field Accounts
    dig 1
    itxn_field Assets
    itxn_field Applications
    // tests/approvals/resource-encoding.algo.ts:102-105
    // compiled.call.echoResourceByForeignIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    pushbytes 0xb09d77e1 // method "echoResourceByForeignIndex(asset,application,account)uint64"
    itxn_field ApplicationArgs
    pushbytes 0x00
    itxn_field ApplicationArgs
    bytec_0 // 0x01
    itxn_field ApplicationArgs
    bytec_0 // 0x01
    itxn_field ApplicationArgs
    // tests/approvals/resource-encoding.algo.ts:102-105
    // compiled.call.echoResourceByForeignIndex({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    intc_0 // 0
    itxn_field OnCompletion
    dig 1
    itxn_field ApplicationID
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    extract 0 4
    bytec_1 // 0x151f7c75
    ==
    assert // Bytes has valid prefix
    // tests/approvals/resource-encoding.algo.ts:107-110
    // compiled.call.echoResourceByValue({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    itxn_begin
    // tests/approvals/resource-encoding.algo.ts:108
    // args: [asset, Global.currentApplicationId, Txn.sender],
    itob
    global CurrentApplicationID
    itob
    txn Sender
    // tests/approvals/resource-encoding.algo.ts:107-110
    // compiled.call.echoResourceByValue({
    //   args: [asset, Global.currentApplicationId, Txn.sender],
    //   appId,
    // })
    pushbytes 0x2a77ac81 // method "echoResourceByValue(uint64,uint64,address)void"
    itxn_field ApplicationArgs
    uncover 2
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // 0
    itxn_field OnCompletion
    itxn_field ApplicationID
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    retsub

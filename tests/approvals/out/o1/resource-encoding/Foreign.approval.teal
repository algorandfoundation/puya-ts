#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock 0x151f7c75
    // tests/approvals/resource-encoding.algo.ts:5
    // class Foreign extends Contract {
    txn NumAppArgs
    bz main_bare_routing@7
    pushbytess 0x115ff342 0x129c3321 // method "testExplicitForeign(account)uint64", method "testImplicitValue(address)uint64"
    txna ApplicationArgs 0
    match main_testExplicitForeign_route@3 main_testImplicitValue_route@4

main_after_if_else@11:
    // tests/approvals/resource-encoding.algo.ts:5
    // class Foreign extends Contract {
    pushint 0 // 0
    return

main_testImplicitValue_route@4:
    // tests/approvals/resource-encoding.algo.ts:15
    // testImplicitValue(account: Account) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:5
    // class Foreign extends Contract {
    txna ApplicationArgs 1
    // tests/approvals/resource-encoding.algo.ts:15
    // testImplicitValue(account: Account) {
    callsub testImplicitValue
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_testExplicitForeign_route@3:
    // tests/approvals/resource-encoding.algo.ts:6
    // @abimethod({ resourceEncoding: 'foreign_index' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/resource-encoding.algo.ts:5
    // class Foreign extends Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/approvals/resource-encoding.algo.ts:6
    // @abimethod({ resourceEncoding: 'foreign_index' })
    callsub testExplicitForeign
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@7:
    // tests/approvals/resource-encoding.algo.ts:5
    // class Foreign extends Contract {
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// tests/approvals/resource-encoding.algo.ts::Foreign.testExplicitForeign(account: bytes) -> uint64:
testExplicitForeign:
    // tests/approvals/resource-encoding.algo.ts:6-7
    // @abimethod({ resourceEncoding: 'foreign_index' })
    // testExplicitForeign(account: Account) {
    proto 1 1
    // tests/approvals/resource-encoding.algo.ts:8
    // return account.balance
    frame_dig -1
    acct_params_get AcctBalance
    assert // account funded
    retsub


// tests/approvals/resource-encoding.algo.ts::Foreign.testImplicitValue(account: bytes) -> uint64:
testImplicitValue:
    // tests/approvals/resource-encoding.algo.ts:15
    // testImplicitValue(account: Account) {
    proto 1 1
    // tests/approvals/resource-encoding.algo.ts:16
    // return account.balance
    frame_dig -1
    acct_params_get AcctBalance
    assert // account funded
    retsub

{
    "name": "MatchExprAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testMatches",
            "args": [
                {
                    "type": "uint64",
                    "name": "x"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        30
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        77
                    ],
                    "errorMessage": "assert target is match for conditions"
                },
                {
                    "pc": [
                        51
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        33
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        66
                    ],
                    "errorMessage": "x should be 5"
                },
                {
                    "pc": [
                        71
                    ],
                    "errorMessage": "x should not be 3"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxIDUgMgogICAgLy8gdGVzdHMvYXBwcm92YWxzL21hdGNoLWV4cHIuYWxnby50czo0CiAgICAvLyBjbGFzcyBNYXRjaEV4cHJBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDYKICAgIHB1c2hieXRlcyAweDkzN2U3MjlhIC8vIG1ldGhvZCAidGVzdE1hdGNoZXModWludDY0KXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3Rlc3RNYXRjaGVzX3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6NAogICAgLy8gY2xhc3MgTWF0Y2hFeHByQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCiAgICByZXR1cm4KCm1haW5fdGVzdE1hdGNoZXNfcm91dGVAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6NQogICAgLy8gcHVibGljIHRlc3RNYXRjaGVzKHg6IHVpbnQ2NCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIE1hdGNoRXhwckFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjUKICAgIC8vIHB1YmxpYyB0ZXN0TWF0Y2hlcyh4OiB1aW50NjQpIHsKICAgIGNhbGxzdWIgdGVzdE1hdGNoZXMKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjQKICAgIC8vIGNsYXNzIE1hdGNoRXhwckFsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEwCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6Ok1hdGNoRXhwckFsZ28udGVzdE1hdGNoZXMoeDogdWludDY0KSAtPiB2b2lkOgp0ZXN0TWF0Y2hlczoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6NQogICAgLy8gcHVibGljIHRlc3RNYXRjaGVzKHg6IHVpbnQ2NCkgewogICAgcHJvdG8gMSAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjYKICAgIC8vIGNvbnN0IHhPYmogPSB7IHggfQogICAgZnJhbWVfZGlnIC0xCiAgICBpdG9iCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjcKICAgIC8vIGFzc2VydE1hdGNoKHhPYmosIHsgeDogNSB9LCAneCBzaG91bGQgYmUgNScpCiAgICBkdXAKICAgIGludGNfMCAvLyAwCiAgICBleHRyYWN0X3VpbnQ2NAogICAgZHVwCiAgICBpbnRjXzIgLy8gNQogICAgPT0KICAgIGFzc2VydCAvLyB4IHNob3VsZCBiZSA1CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjgKICAgIC8vIGFzc2VydE1hdGNoKHhPYmosIHsgeDogeyBub3Q6IDMgfSB9LCAneCBzaG91bGQgbm90IGJlIDMnKQogICAgZHVwCiAgICBwdXNoaW50IDMgLy8gMwogICAgIT0KICAgIGFzc2VydCAvLyB4IHNob3VsZCBub3QgYmUgMwogICAgLy8gdGVzdHMvYXBwcm92YWxzL21hdGNoLWV4cHIuYWxnby50czo5CiAgICAvLyBhc3NlcnRNYXRjaChUeG4sIHsgc2VuZGVyOiB7IG5vdDogR2xvYmFsLnplcm9BZGRyZXNzIH0gfSkKICAgIHR4biBTZW5kZXIKICAgIGdsb2JhbCBaZXJvQWRkcmVzcwogICAgIT0KICAgIGFzc2VydCAvLyBhc3NlcnQgdGFyZ2V0IGlzIG1hdGNoIGZvciBjb25kaXRpb25zCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjEwCiAgICAvLyBhc3NlcnQobWF0Y2goeE9iaiwgeyB4OiB7IGdyZWF0ZXJUaGFuOiA0IH0gfSkpCiAgICBkdXAKICAgIHB1c2hpbnQgNCAvLyA0CiAgICA+CiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6MTEKICAgIC8vIGFzc2VydChtYXRjaCh4T2JqLCB7IHg6IHsgbGVzc1RoYW46IDYgfSB9KSkKICAgIGR1cAogICAgcHVzaGludCA2IC8vIDYKICAgIDwKICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL21hdGNoLWV4cHIuYWxnby50czoxMgogICAgLy8gYXNzZXJ0KG1hdGNoKHhPYmosIHsgeDogeyBncmVhdGVyVGhhbkVxOiA1IH0gfSkpCiAgICBkdXAKICAgIGludGNfMiAvLyA1CiAgICA+PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjEzCiAgICAvLyBhc3NlcnQobWF0Y2goeE9iaiwgeyB4OiB7IGxlc3NUaGFuRXE6IDUgfSB9KSkKICAgIGludGNfMiAvLyA1CiAgICA8PQogICAgYXNzZXJ0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjE1CiAgICAvLyBjb25zdCB4QXJyYXkgPSBbeF0KICAgIHB1c2hieXRlcyAweDAwMDEKICAgIHN3YXAKICAgIGNvbmNhdAogICAgZHVwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjE3CiAgICAvLyBhc3NlcnQobWF0Y2goeEFycmF5LCBbNV0pKQogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBpbnRjXzEgLy8gMQogICAgPT0KICAgIGR1cAogICAgYnogdGVzdE1hdGNoZXNfYm9vbF9mYWxzZUAzCiAgICBmcmFtZV9kaWcgMAogICAgaW50Y18zIC8vIDIKICAgIGV4dHJhY3RfdWludDY0CiAgICBpbnRjXzIgLy8gNQogICAgPT0KICAgIGJ6IHRlc3RNYXRjaGVzX2Jvb2xfZmFsc2VAMwogICAgaW50Y18xIC8vIDEKCnRlc3RNYXRjaGVzX2Jvb2xfbWVyZ2VANDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6MTcKICAgIC8vIGFzc2VydChtYXRjaCh4QXJyYXksIFs1XSkpCiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6MTgKICAgIC8vIGFzc2VydChtYXRjaCh4QXJyYXksIFt7IGdyZWF0ZXJUaGFuOiA0IH1dKSkKICAgIGZyYW1lX2RpZyAxCiAgICBieiB0ZXN0TWF0Y2hlc19ib29sX2ZhbHNlQDcKICAgIGZyYW1lX2RpZyAwCiAgICBpbnRjXzMgLy8gMgogICAgZXh0cmFjdF91aW50NjQKICAgIHB1c2hpbnQgNCAvLyA0CiAgICA+CiAgICBieiB0ZXN0TWF0Y2hlc19ib29sX2ZhbHNlQDcKICAgIGludGNfMSAvLyAxCgp0ZXN0TWF0Y2hlc19ib29sX21lcmdlQDg6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjE4CiAgICAvLyBhc3NlcnQobWF0Y2goeEFycmF5LCBbeyBncmVhdGVyVGhhbjogNCB9XSkpCiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6MTkKICAgIC8vIGFzc2VydChtYXRjaCh4QXJyYXksIFt7IGxlc3NUaGFuOiA2IH1dKSkKICAgIGZyYW1lX2RpZyAxCiAgICBieiB0ZXN0TWF0Y2hlc19ib29sX2ZhbHNlQDExCiAgICBmcmFtZV9kaWcgMAogICAgaW50Y18zIC8vIDIKICAgIGV4dHJhY3RfdWludDY0CiAgICBwdXNoaW50IDYgLy8gNgogICAgPAogICAgYnogdGVzdE1hdGNoZXNfYm9vbF9mYWxzZUAxMQogICAgaW50Y18xIC8vIDEKCnRlc3RNYXRjaGVzX2Jvb2xfbWVyZ2VAMTI6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjE5CiAgICAvLyBhc3NlcnQobWF0Y2goeEFycmF5LCBbeyBsZXNzVGhhbjogNiB9XSkpCiAgICBhc3NlcnQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6MjAKICAgIC8vIGFzc2VydChtYXRjaCh4QXJyYXksIFt7IGdyZWF0ZXJUaGFuRXE6IDUgfV0pKQogICAgZnJhbWVfZGlnIDEKICAgIGJ6IHRlc3RNYXRjaGVzX2Jvb2xfZmFsc2VAMTUKICAgIGZyYW1lX2RpZyAwCiAgICBpbnRjXzMgLy8gMgogICAgZXh0cmFjdF91aW50NjQKICAgIGludGNfMiAvLyA1CiAgICA+PQogICAgYnogdGVzdE1hdGNoZXNfYm9vbF9mYWxzZUAxNQogICAgaW50Y18xIC8vIDEKCnRlc3RNYXRjaGVzX2Jvb2xfbWVyZ2VAMTY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvbWF0Y2gtZXhwci5hbGdvLnRzOjIwCiAgICAvLyBhc3NlcnQobWF0Y2goeEFycmF5LCBbeyBncmVhdGVyVGhhbkVxOiA1IH1dKSkKICAgIGFzc2VydAogICAgLy8gdGVzdHMvYXBwcm92YWxzL21hdGNoLWV4cHIuYWxnby50czoyMQogICAgLy8gYXNzZXJ0KG1hdGNoKHhBcnJheSwgW3sgbGVzc1RoYW5FcTogNSB9XSkpCiAgICBmcmFtZV9kaWcgMQogICAgYnogdGVzdE1hdGNoZXNfYm9vbF9mYWxzZUAxOQogICAgZnJhbWVfZGlnIDAKICAgIGludGNfMyAvLyAyCiAgICBleHRyYWN0X3VpbnQ2NAogICAgaW50Y18yIC8vIDUKICAgIDw9CiAgICBieiB0ZXN0TWF0Y2hlc19ib29sX2ZhbHNlQDE5CiAgICBpbnRjXzEgLy8gMQoKdGVzdE1hdGNoZXNfYm9vbF9tZXJnZUAyMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9tYXRjaC1leHByLmFsZ28udHM6MjEKICAgIC8vIGFzc2VydChtYXRjaCh4QXJyYXksIFt7IGxlc3NUaGFuRXE6IDUgfV0pKQogICAgYXNzZXJ0CiAgICByZXRzdWIKCnRlc3RNYXRjaGVzX2Jvb2xfZmFsc2VAMTk6CiAgICBpbnRjXzAgLy8gMAogICAgYiB0ZXN0TWF0Y2hlc19ib29sX21lcmdlQDIwCgp0ZXN0TWF0Y2hlc19ib29sX2ZhbHNlQDE1OgogICAgaW50Y18wIC8vIDAKICAgIGIgdGVzdE1hdGNoZXNfYm9vbF9tZXJnZUAxNgoKdGVzdE1hdGNoZXNfYm9vbF9mYWxzZUAxMToKICAgIGludGNfMCAvLyAwCiAgICBiIHRlc3RNYXRjaGVzX2Jvb2xfbWVyZ2VAMTIKCnRlc3RNYXRjaGVzX2Jvb2xfZmFsc2VANzoKICAgIGludGNfMCAvLyAwCiAgICBiIHRlc3RNYXRjaGVzX2Jvb2xfbWVyZ2VAOAoKdGVzdE1hdGNoZXNfYm9vbF9mYWxzZUAzOgogICAgaW50Y18wIC8vIDAKICAgIGIgdGVzdE1hdGNoZXNfYm9vbF9tZXJnZUA0Cg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAAEFAjEbQQAfgASTfnKaNhoAjgEAAiJDMRkURDEYRDYaAReIAA0jQzEZQP/pMRgURCNDigEAi/8WSSJbSSQSREmBAxNEMQAyAxNESYEEDURJgQYMREkkD0QkDkSAAgABTFBJIlkjEklBAF6LACVbJBJBAFUjRIsBQQBKiwAlW4EEDUEAQCNEiwFBADWLACVbgQYMQQArI0SLAUEAIIsAJVskD0EAFyNEiwFBAAyLACVbJA5BAAMjRIkiQv/6IkL/5iJC/9IiQv+9IkL/qA==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
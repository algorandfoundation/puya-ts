{
    "name": "DoLoopsAlgo",
    "structs": {},
    "methods": [
        {
            "name": "testDo",
            "args": [
                {
                    "type": "uint64",
                    "name": "stop"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testDoBreak",
            "args": [
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "breakMod"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "testDoContinue",
            "args": [
                {
                    "type": "uint64",
                    "name": "stop"
                },
                {
                    "type": "uint64",
                    "name": "mod"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        50,
                        75,
                        100
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        126
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        53,
                        78,
                        103
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAwCiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjQKICAgIC8vIGV4cG9ydCBjbGFzcyBEb0xvb3BzQWxnbyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A4CiAgICBwdXNoYnl0ZXNzIDB4MzkyMzk3OTIgMHhhY2UyZWIyMSAweDc4ZThkNTE2IC8vIG1ldGhvZCAidGVzdERvKHVpbnQ2NCl1aW50NjQiLCBtZXRob2QgInRlc3REb0JyZWFrKHVpbnQ2NCx1aW50NjQpdWludDY0IiwgbWV0aG9kICJ0ZXN0RG9Db250aW51ZSh1aW50NjQsdWludDY0KXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdGVzdERvX3JvdXRlQDMgbWFpbl90ZXN0RG9CcmVha19yb3V0ZUA0IG1haW5fdGVzdERvQ29udGludWVfcm91dGVANQoKbWFpbl9hZnRlcl9pZl9lbHNlQDEyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIERvTG9vcHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18xIC8vIDAKICAgIHJldHVybgoKbWFpbl90ZXN0RG9Db250aW51ZV9yb3V0ZUA1OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MjMKICAgIC8vIHRlc3REb0NvbnRpbnVlKHN0b3A6IHVpbnQ2NCwgbW9kOiB1aW50NjQpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIERvTG9vcHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MjMKICAgIC8vIHRlc3REb0NvbnRpbnVlKHN0b3A6IHVpbnQ2NCwgbW9kOiB1aW50NjQpIHsKICAgIGNhbGxzdWIgdGVzdERvQ29udGludWUKICAgIGl0b2IKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fdGVzdERvQnJlYWtfcm91dGVANDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjEyCiAgICAvLyB0ZXN0RG9CcmVhayhzdG9wOiB1aW50NjQsIGJyZWFrTW9kOiB1aW50NjQpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIERvTG9vcHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MTIKICAgIC8vIHRlc3REb0JyZWFrKHN0b3A6IHVpbnQ2NCwgYnJlYWtNb2Q6IHVpbnQ2NCkgewogICAgY2FsbHN1YiB0ZXN0RG9CcmVhawogICAgaXRvYgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl90ZXN0RG9fcm91dGVAMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjUKICAgIC8vIHRlc3REbyhzdG9wOiB1aW50NjQpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIERvTG9vcHNBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6NQogICAgLy8gdGVzdERvKHN0b3A6IHVpbnQ2NCkgewogICAgY2FsbHN1YiB0ZXN0RG8KICAgIGl0b2IKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDg6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czo0CiAgICAvLyBleHBvcnQgY2xhc3MgRG9Mb29wc0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEyCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjpEb0xvb3BzQWxnby50ZXN0RG8oc3RvcDogdWludDY0KSAtPiB1aW50NjQ6CnRlc3REbzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjUKICAgIC8vIHRlc3REbyhzdG9wOiB1aW50NjQpIHsKICAgIHByb3RvIDEgMQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6NgogICAgLy8gbGV0IGkgPSBVaW50NjQoMCkKICAgIGludGNfMSAvLyAwCgp0ZXN0RG9fd2hpbGVfdG9wQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czo4CiAgICAvLyBpICs9IDEKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBkdXAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjkKICAgIC8vIH0gd2hpbGUgKGkgPCBzdG9wKQogICAgZnJhbWVfZGlnIC0xCiAgICA8CiAgICBibnogdGVzdERvX3doaWxlX3RvcEAxCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoxMAogICAgLy8gcmV0dXJuIGkKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjpEb0xvb3BzQWxnby50ZXN0RG9CcmVhayhzdG9wOiB1aW50NjQsIGJyZWFrTW9kOiB1aW50NjQpIC0+IHVpbnQ2NDoKdGVzdERvQnJlYWs6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoxMgogICAgLy8gdGVzdERvQnJlYWsoc3RvcDogdWludDY0LCBicmVha01vZDogdWludDY0KSB7CiAgICBwcm90byAyIDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjEzCiAgICAvLyBsZXQgdG90YWwgPSBVaW50NjQoMCkKICAgIGludGNfMSAvLyAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoxNAogICAgLy8gbGV0IGkgPSBVaW50NjQoMCkKICAgIGR1cAoKdGVzdERvQnJlYWtfd2hpbGVfdG9wQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoxNgogICAgLy8gaWYgKGkgPiAwICYmIGkgJSBicmVha01vZCA9PT0gMCkgYnJlYWsKICAgIGZyYW1lX2RpZyAxCiAgICBieiB0ZXN0RG9CcmVha19hZnRlcl9pZl9lbHNlQDUKICAgIGZyYW1lX2RpZyAxCiAgICBmcmFtZV9kaWcgLTEKICAgICUKICAgIGJ6IHRlc3REb0JyZWFrX2Jsb2NrQDkKCnRlc3REb0JyZWFrX2FmdGVyX2lmX2Vsc2VANToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjE4CiAgICAvLyBpICs9IDEKICAgIGZyYW1lX2RpZyAxCiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgZHVwCiAgICBmcmFtZV9idXJ5IDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjE5CiAgICAvLyB0b3RhbCArPSBpCiAgICBmcmFtZV9kaWcgMAogICAgZGlnIDEKICAgICsKICAgIGZyYW1lX2J1cnkgMAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MjAKICAgIC8vIH0gd2hpbGUgKGkgPCBzdG9wKQogICAgZnJhbWVfZGlnIC0yCiAgICA8CiAgICBibnogdGVzdERvQnJlYWtfd2hpbGVfdG9wQDEKCnRlc3REb0JyZWFrX2Jsb2NrQDk6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoyMQogICAgLy8gcmV0dXJuIHRvdGFsCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czo6RG9Mb29wc0FsZ28udGVzdERvQ29udGludWUoc3RvcDogdWludDY0LCBtb2Q6IHVpbnQ2NCkgLT4gdWludDY0Ogp0ZXN0RG9Db250aW51ZToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjIzCiAgICAvLyB0ZXN0RG9Db250aW51ZShzdG9wOiB1aW50NjQsIG1vZDogdWludDY0KSB7CiAgICBwcm90byAyIDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjI0CiAgICAvLyBsZXQgaSA9IFVpbnQ2NCgwKQogICAgaW50Y18xIC8vIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjI1CiAgICAvLyBsZXQgdG90YWwgPSBVaW50NjQoMCkKICAgIGR1cAoKdGVzdERvQ29udGludWVfd2hpbGVfdG9wQDE6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czoyNwogICAgLy8gaWYgKGkgPiAwICYmIGkgJSBtb2QgPT09IDApIHsKICAgIGZyYW1lX2RpZyAwCiAgICBieiB0ZXN0RG9Db250aW51ZV9hZnRlcl9pZl9lbHNlQDUKICAgIGZyYW1lX2RpZyAwCiAgICBmcmFtZV9kaWcgLTEKICAgICUKICAgIGJueiB0ZXN0RG9Db250aW51ZV9hZnRlcl9pZl9lbHNlQDUKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjI4CiAgICAvLyB0b3RhbCArPSAyCiAgICBmcmFtZV9kaWcgMQogICAgcHVzaGludCAyIC8vIDIKICAgICsKICAgIGZyYW1lX2J1cnkgMQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MjkKICAgIC8vIGkgKz0gMQogICAgZnJhbWVfZGlnIDAKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBmcmFtZV9idXJ5IDAKCnRlc3REb0NvbnRpbnVlX2Jsb2NrQDY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czozNAogICAgLy8gfSB3aGlsZSAoaSA8IHN0b3ApCiAgICBmcmFtZV9kaWcgMAogICAgZnJhbWVfZGlnIC0yCiAgICA8CiAgICBibnogdGVzdERvQ29udGludWVfd2hpbGVfdG9wQDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9kby1sb29wcy5hbGdvLnRzOjM1CiAgICAvLyByZXR1cm4gdG90YWwKICAgIGZyYW1lX2RpZyAxCiAgICBmcmFtZV9idXJ5IDAKICAgIHJldHN1YgoKdGVzdERvQ29udGludWVfYWZ0ZXJfaWZfZWxzZUA1OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2RvLWxvb3BzLmFsZ28udHM6MzIKICAgIC8vIHRvdGFsICs9IDEKICAgIGZyYW1lX2RpZyAxCiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgZnJhbWVfYnVyeSAxCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvZG8tbG9vcHMuYWxnby50czozMwogICAgLy8gaSArPSAxCiAgICBmcmFtZV9kaWcgMAogICAgaW50Y18wIC8vIDEKICAgICsKICAgIGZyYW1lX2J1cnkgMAogICAgYiB0ZXN0RG9Db250aW51ZV9ibG9ja0A2Cg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmAQQVH3x1MRtBAGWCAwQ5I5eSBKzi6yEEeOjVFjYaAI4DADQAGwACI0MxGRREMRhENhoBFzYaAheIAHUWKExQsCJDMRkURDEYRDYaARc2GgIXiAA1FihMULAiQzEZFEQxGEQ2GgEXiAASFihMULAiQzEZQP+yMRgURCJDigEBIyIISYv/DED/94mKAgEjSYsBQQAIiwGL/xhBABSLASIISYwBiwBLAQiMAIv+DED/34mKAgEjSYsAQQAiiwCL/xhAABqLAYECCIwBiwAiCIwAiwCL/gxA/96LAYwAiYsBIgiMAYsAIgiMAEL/5A==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
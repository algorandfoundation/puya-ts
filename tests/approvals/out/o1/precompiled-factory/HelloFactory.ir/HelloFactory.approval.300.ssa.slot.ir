main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@11
    block@2: // abi_routing_L6
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "test_compile_contract()void" => block@4, method "test_compile_contract_with_template()void" => block@5, method "test_compile_contract_with_template_and_custom_prefix()void" => block@6, method "test_compile_contract_large()void" => block@7, * => block@10}
    block@4: // test_compile_contract_route_L7
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract[routing]()
        goto block@10
    block@5: // test_compile_contract_with_template_route_L38
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template[routing]()
        goto block@10
    block@6: // test_compile_contract_with_template_and_custom_prefix_route_L69
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix[routing]()
        goto block@10
    block@7: // test_compile_contract_large_route_L100
        tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large[routing]()
        goto block@10
    block@10: // after_if_else_L6
        fail
    block@11: // __algots__.defaultCreate_L6
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract[routing]() -> void:
    block@0: // L7
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAAIBJgMIZ3JlZXRpbmcBIAQVH3x1MRhAAAQogABnggIEJDeNPASg6BhyNhoAjgIANgAtMRkURDEYQQAWggIE0KKCAARRgLogNhoAjgIANgBcAIAEAJIlrjYaAI4BABMAMRmBBBIxGBBDMRmBBRIxGBBDNhoBSSJZIwhLARUSRFcCAChMZyRDNhoBSSJZIwhLARUSRFcCACIoZUQpUExQSRUWVwYCTFAqTFCwJEM2GgEiKGVEKVBLASJZSwIjWUsDTwJLAlJXAgBPAkxQSwIVTwNPA08CUlcCAFBJFRZXBgJMUCpMULAkQw==)
        ((itxn_field ApplicationArgs) method "helloCreate(string)void")
        ((itxn_field ApplicationArgs) 0x000568656c6c6f)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%4#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%5#0: bool = (== tmp%4#0 0x151f7c75)
        (assert tmp%5#0) // Bytes has valid prefix
        let result#0: string = ((extract 6 0) txn.LastLog#0)
        let tmp%7#0: bool = (== result#0 "hello world")
        (assert tmp%7#0)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template[routing]() -> void:
    block@0: // L38
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAAECJgQIZ3JlZXRpbmcBIAQVH3x1A2hleTEYQAADKCtnggIEJDeNPASg6BhyNhoAjgIAOAAvMRkURDEYQQAWggIE0KKCAARRgLogNhoAjgIAIwBJAIAETFxhujYaAI4BAAEAI0MxGYEEEjEYEEMxGYEFEjEYEEM2GgFJIlkkCEsBFRJEVwIAIihlRClQTFBJFRZXBgJMUCpMULAjQzYaASIoZUQpUEsBIllLAiRZSwNPAksCUlcCAE8CTFBLAhVPA08DTwJSVwIAUEkVFlcGAkxQKkxQsCND)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%3#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%4#0: bool = (== tmp%3#0 0x151f7c75)
        (assert tmp%4#0) // Bytes has valid prefix
        let result#0: string = ((extract 6 0) txn.LastLog#0)
        let tmp%6#0: bool = (== result#0 "hey world")
        (assert tmp%6#0)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix[routing]() -> void:
    block@0: // L69
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAAECJgQIZ3JlZXRpbmcBIAQVH3x1B2JvbmpvdXIxGEAAAygrZ4ICBCQ3jTwEoOgYcjYaAI4CADgALzEZFEQxGEEAFoICBNCiggAEUYC6IDYaAI4CACMASQCABExcYbo2GgCOAQABACNDMRmBBBIxGBBDMRmBBRIxGBBDNhoBSSJZJAhLARUSRFcCACIoZUQpUExQSRUWVwYCTFAqTFCwI0M2GgEiKGVEKVBLASJZSwIkWUsDTwJLAlJXAgBPAkxQSwIVTwNPA08CUlcCAFBJFRZXBgJMUCpMULAjQw==)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let helloApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%3#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%4#0: bool = (== tmp%3#0 0x151f7c75)
        (assert tmp%4#0) // Bytes has valid prefix
        let result#0: string = ((extract 6 0) txn.LastLog#0)
        let tmp%6#0: bool = (== result#0 "bonjour world")
        (assert tmp%6#0)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) helloApp#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u

subroutine tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large[routing]() -> void:
    block@0: // L100
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CzEbQQApggIEJDeNPAQCvzDPNhoAjgIACwABADEZFDEYEERCABExGYEFEjEYEEMxGRQxGBQQQ4GAIK8VFoAEFR98dUxQsIEBQw==)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let largeApp#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) largeApp#0)
        ((itxn_field ApplicationArgs) method "getBigBytesLength()uint64")
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let tmp%1#0: bytes = ((extract 4 0) txn.LastLog#0)
        let tmp%2#0: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%3#0: bool = (== tmp%2#0 0x151f7c75)
        (assert tmp%3#0) // Bytes has valid prefix
        let result#0: uint64 = (btoi tmp%1#0)
        let tmp%5#0: bool = (== result#0 4096u)
        (assert tmp%5#0)
        itxn_begin
        ((itxn_field OnCompletion) 5u)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) largeApp#0)
        ((itxn_field TypeEnum) 6u)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
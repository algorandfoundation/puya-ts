{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/precompiled-factory.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA8FE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AADF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAIqB;AAKG;;;AAPH;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIH;;;;;;;;AAAwC;;;;;;;;;;;AAFrC;;;AAAA;;;AAAA;AAOL;;AAEA;;;;AAEE;;;AAAuC;;;;AAFzC;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;;;AAEG;;;;;;;;;;;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;AAHd;;;AAAA;;;AAAA;;AAYiB;AAKG;;;AAPH;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIH;;;;AAFG;;;AAAA;;;AAAA;AAOL;;AAEA;;;;AAEE;;;AAAuC;;;;AAFzC;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;;;AAEG;;;;;;;;;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;AAHd;;;AAAA;;;AAAA;;AAYiB;AAKG;;;AAPH;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIH;;;;AAFG;;;AAAA;;;AAAA;AAOL;;AAEA;;;;AAEE;;;AAAuC;;;;AAFzC;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;;;AAEG;;;;;;;;;;;;;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;AAHd;;;AAAA;;;AAAA;;AAYiB;AAFA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;AAAA;;;AAAA;AAOL;;AAEA;;;;AAEE;;;;;;;;AAFF;;;AAAA;;;AAAA;;;AAMG;AAAA;;;AAAA;AAAA;;;AAAgC;AAAhC;AAAA;AAAA;AAEG;;;AAAX;AAAP;AAEA;AAImC;;;AADrB;;;;;AAHd;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 5"
    },
    "7": {
      "op": "bytecblock base64(CoEBQw==) 0x151f7c75 0x24378d3c 0xd0a28200 0x0005776f726c64 0x4c5c61ba"
    },
    "42": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "44": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "47": {
      "op": "pushbytess 0x2a17995c 0xe3254bc9 0xe2b7c692 0x02947ca2 // method \"test_compile_contract()void\", method \"test_compile_contract_with_template()void\", method \"test_compile_contract_with_template_and_custom_prefix()void\", method \"test_compile_contract_large()void\""
    },
    "69": {
      "op": "txna ApplicationArgs 0"
    },
    "72": {
      "op": "match main_test_compile_contract_route@3 main_test_compile_contract_with_template_route@4 main_test_compile_contract_with_template_and_custom_prefix_route@5 main_test_compile_contract_large_route@6"
    },
    "82": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "83": {
      "op": "return"
    },
    "84": {
      "block": "main_test_compile_contract_large_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "86": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "87": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "88": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "90": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "91": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large",
      "op": "callsub test_compile_contract_large"
    },
    "94": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "return"
    },
    "96": {
      "block": "main_test_compile_contract_with_template_and_custom_prefix_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "98": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "99": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "102": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "103": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix",
      "op": "callsub test_compile_contract_with_template_and_custom_prefix"
    },
    "106": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "107": {
      "op": "return"
    },
    "108": {
      "block": "main_test_compile_contract_with_template_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "110": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "111": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "112": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "114": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "115": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template",
      "op": "callsub test_compile_contract_with_template"
    },
    "118": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "119": {
      "op": "return"
    },
    "120": {
      "block": "main_test_compile_contract_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "122": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "123": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "126": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "127": {
      "callsub": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract",
      "op": "callsub test_compile_contract"
    },
    "130": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "131": {
      "op": "return"
    },
    "132": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "134": {
      "op": "bnz main_after_if_else@13",
      "stack_out": []
    },
    "137": {
      "op": "txn ApplicationID"
    },
    "139": {
      "op": "!"
    },
    "140": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "141": {
      "op": "intc_2 // 1"
    },
    "142": {
      "op": "return"
    },
    "143": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract",
      "params": {},
      "block": "test_compile_contract",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "144": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "145": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "147": {
      "op": "bytec_0 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "148": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "150": {
      "op": "pushbytes base64(CiACAQAmAQhncmVldGluZzEYQAAEKIAAZzEbQQAjggQEAJIlrgQkN408BKDoGHIE0KKCADYaAI4EADsAMAAlAAIjQzEZFEQxGEQ2GgFXAgCIAERJFRZXBgJMUIAEFR98dUxQsCJDMRmBBBJEMRhEIkMxGYEFEkQxGEQiQzEZFEQxGBRENhoBVwIAiAACIkOKAQAoi/9niYoBASMoZUSAASBQi/9QiQ==)",
      "defined_out": [
        "CiACAQAmAQhncmVldGluZzEYQAAEKIAAZzEbQQAjggQEAJIlrgQkN408BKDoGHIE0KKCADYaAI4EADsAMAAlAAIjQzEZFEQxGEQ2GgFXAgCIAERJFRZXBgJMUIAEFR98dUxQsCJDMRmBBBJEMRhEIkMxGYEFEkQxGEQiQzEZFEQxGBRENhoBVwIAiAACIkOKAQAoi/9niYoBASMoZUSAASBQi/9QiQ=="
      ],
      "stack_out": [
        "CiACAQAmAQhncmVldGluZzEYQAAEKIAAZzEbQQAjggQEAJIlrgQkN408BKDoGHIE0KKCADYaAI4EADsAMAAlAAIjQzEZFEQxGEQ2GgFXAgCIAERJFRZXBgJMUIAEFR98dUxQsCJDMRmBBBJEMRhEIkMxGYEFEkQxGEQiQzEZFEQxGBRENhoBVwIAiAACIkOKAQAoi/9niYoBASMoZUSAASBQi/9QiQ=="
      ]
    },
    "319": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "321": {
      "op": "pushbytes 0x009225ae // method \"helloCreate(string)void\"",
      "defined_out": [
        "Method(helloCreate(string)void)"
      ],
      "stack_out": [
        "Method(helloCreate(string)void)"
      ]
    },
    "327": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "329": {
      "op": "pushbytes 0x000568656c6c6f",
      "defined_out": [
        "0x000568656c6c6f"
      ],
      "stack_out": [
        "0x000568656c6c6f"
      ]
    },
    "338": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "340": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "341": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "343": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "344": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "346": {
      "op": "itxn_submit"
    },
    "347": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0"
      ]
    },
    "349": {
      "op": "itxn_begin"
    },
    "350": {
      "op": "dup",
      "defined_out": [
        "helloApp#0",
        "helloApp#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0 (copy)"
      ]
    },
    "351": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "353": {
      "op": "bytec_3 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(greet(string)string)"
      ]
    },
    "354": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "356": {
      "op": "bytec 4 // 0x0005776f726c64",
      "defined_out": [
        "0x0005776f726c64",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "0x0005776f726c64"
      ]
    },
    "358": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "360": {
      "op": "intc_1 // 6",
      "stack_out": [
        "helloApp#0",
        "6"
      ]
    },
    "361": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "363": {
      "op": "intc_0 // 0",
      "stack_out": [
        "helloApp#0",
        "0"
      ]
    },
    "364": {
      "op": "itxn_field Fee",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "366": {
      "op": "itxn_submit"
    },
    "367": {
      "op": "itxn LastLog"
    },
    "369": {
      "op": "dup",
      "defined_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "370": {
      "op": "extract 0 4",
      "defined_out": [
        "helloApp#0",
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%1#0"
      ]
    },
    "373": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "helloApp#0",
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "374": {
      "op": "==",
      "defined_out": [
        "helloApp#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "375": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0"
      ]
    },
    "376": {
      "op": "extract 6 0",
      "defined_out": [
        "helloApp#0",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0"
      ]
    },
    "379": {
      "op": "pushbytes \"hello world\"",
      "defined_out": [
        "\"hello world\"",
        "helloApp#0",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0",
        "\"hello world\""
      ]
    },
    "392": {
      "op": "==",
      "defined_out": [
        "helloApp#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%3#0"
      ]
    },
    "393": {
      "op": "assert",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "394": {
      "op": "itxn_begin"
    },
    "395": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "5"
      ]
    },
    "396": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "398": {
      "op": "bytec_2 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(delete()void)"
      ]
    },
    "399": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "401": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "403": {
      "op": "intc_1 // 6",
      "stack_out": [
        "6"
      ]
    },
    "404": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "406": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "407": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "409": {
      "op": "itxn_submit"
    },
    "410": {
      "retsub": true,
      "op": "retsub"
    },
    "411": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template",
      "params": {},
      "block": "test_compile_contract_with_template",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "412": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "413": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "415": {
      "op": "bytec_0 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "416": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "418": {
      "op": "pushbytes base64(CiACAQAmAghncmVldGluZwNoZXkxGEAAByiAAGcoKWcxG0EAI4IEBExcYboEJDeNPASg6BhyBNCiggA2GgCOBAA7ADAAJQACI0MxGRREMRhENhoBVwIAiAAzSRUWVwYCTFCABBUffHVMULAiQzEZgQQSRDEYRCJDMRmBBRJEMRhEIkMxGRREMRgURCJDigEBIyhlRIABIFCL/1CJ)",
      "defined_out": [
        "CiACAQAmAghncmVldGluZwNoZXkxGEAAByiAAGcoKWcxG0EAI4IEBExcYboEJDeNPASg6BhyBNCiggA2GgCOBAA7ADAAJQACI0MxGRREMRhENhoBVwIAiAAzSRUWVwYCTFCABBUffHVMULAiQzEZgQQSRDEYRCJDMRmBBRJEMRhEIkMxGRREMRgURCJDigEBIyhlRIABIFCL/1CJ"
      ],
      "stack_out": [
        "CiACAQAmAghncmVldGluZwNoZXkxGEAAByiAAGcoKWcxG0EAI4IEBExcYboEJDeNPASg6BhyBNCiggA2GgCOBAA7ADAAJQACI0MxGRREMRhENhoBVwIAiAAzSRUWVwYCTFCABBUffHVMULAiQzEZgQQSRDEYRCJDMRmBBRJEMRhEIkMxGRREMRgURCJDigEBIyhlRIABIFCL/1CJ"
      ]
    },
    "577": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "579": {
      "op": "bytec 5 // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "581": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "583": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "584": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "586": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "587": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "589": {
      "op": "itxn_submit"
    },
    "590": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0"
      ]
    },
    "592": {
      "op": "itxn_begin"
    },
    "593": {
      "op": "dup",
      "defined_out": [
        "helloApp#0",
        "helloApp#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0 (copy)"
      ]
    },
    "594": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "596": {
      "op": "bytec_3 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(greet(string)string)"
      ]
    },
    "597": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "599": {
      "op": "bytec 4 // 0x0005776f726c64",
      "defined_out": [
        "0x0005776f726c64",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "0x0005776f726c64"
      ]
    },
    "601": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "603": {
      "op": "intc_1 // 6",
      "stack_out": [
        "helloApp#0",
        "6"
      ]
    },
    "604": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "606": {
      "op": "intc_0 // 0",
      "stack_out": [
        "helloApp#0",
        "0"
      ]
    },
    "607": {
      "op": "itxn_field Fee",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "609": {
      "op": "itxn_submit"
    },
    "610": {
      "op": "itxn LastLog"
    },
    "612": {
      "op": "dup",
      "defined_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "613": {
      "op": "extract 0 4",
      "defined_out": [
        "helloApp#0",
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%1#0"
      ]
    },
    "616": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "helloApp#0",
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "617": {
      "op": "==",
      "defined_out": [
        "helloApp#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "618": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0"
      ]
    },
    "619": {
      "op": "extract 6 0",
      "defined_out": [
        "helloApp#0",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0"
      ]
    },
    "622": {
      "op": "pushbytes \"hey world\"",
      "defined_out": [
        "\"hey world\"",
        "helloApp#0",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0",
        "\"hey world\""
      ]
    },
    "633": {
      "op": "==",
      "defined_out": [
        "helloApp#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%3#0"
      ]
    },
    "634": {
      "op": "assert",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "635": {
      "op": "itxn_begin"
    },
    "636": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "5"
      ]
    },
    "637": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "639": {
      "op": "bytec_2 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(delete()void)"
      ]
    },
    "640": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "642": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "644": {
      "op": "intc_1 // 6",
      "stack_out": [
        "6"
      ]
    },
    "645": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "647": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "648": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "650": {
      "op": "itxn_submit"
    },
    "651": {
      "retsub": true,
      "op": "retsub"
    },
    "652": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_with_template_and_custom_prefix",
      "params": {},
      "block": "test_compile_contract_with_template_and_custom_prefix",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "653": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "654": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "656": {
      "op": "bytec_0 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "657": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "659": {
      "op": "pushbytes base64(CiACAQAmAghncmVldGluZwdib25qb3VyMRhAAAcogABnKClnMRtBACOCBARMXGG6BCQ3jTwEoOgYcgTQooIANhoAjgQAOwAwACUAAiNDMRkURDEYRDYaAVcCAIgAM0kVFlcGAkxQgAQVH3x1TFCwIkMxGYEEEkQxGEQiQzEZgQUSRDEYRCJDMRkURDEYFEQiQ4oBASMoZUSAASBQi/9QiQ==)",
      "defined_out": [
        "CiACAQAmAghncmVldGluZwdib25qb3VyMRhAAAcogABnKClnMRtBACOCBARMXGG6BCQ3jTwEoOgYcgTQooIANhoAjgQAOwAwACUAAiNDMRkURDEYRDYaAVcCAIgAM0kVFlcGAkxQgAQVH3x1TFCwIkMxGYEEEkQxGEQiQzEZgQUSRDEYRCJDMRkURDEYFEQiQ4oBASMoZUSAASBQi/9QiQ=="
      ],
      "stack_out": [
        "CiACAQAmAghncmVldGluZwdib25qb3VyMRhAAAcogABnKClnMRtBACOCBARMXGG6BCQ3jTwEoOgYcgTQooIANhoAjgQAOwAwACUAAiNDMRkURDEYRDYaAVcCAIgAM0kVFlcGAkxQgAQVH3x1TFCwIkMxGYEEEkQxGEQiQzEZgQUSRDEYRCJDMRkURDEYFEQiQ4oBASMoZUSAASBQi/9QiQ=="
      ]
    },
    "822": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "824": {
      "op": "bytec 5 // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "826": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "828": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "829": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "831": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "832": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "834": {
      "op": "itxn_submit"
    },
    "835": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0"
      ]
    },
    "837": {
      "op": "itxn_begin"
    },
    "838": {
      "op": "dup",
      "defined_out": [
        "helloApp#0",
        "helloApp#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "helloApp#0 (copy)"
      ]
    },
    "839": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "841": {
      "op": "bytec_3 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(greet(string)string)"
      ]
    },
    "842": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "844": {
      "op": "bytec 4 // 0x0005776f726c64",
      "defined_out": [
        "0x0005776f726c64",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "0x0005776f726c64"
      ]
    },
    "846": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "848": {
      "op": "intc_1 // 6",
      "stack_out": [
        "helloApp#0",
        "6"
      ]
    },
    "849": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "851": {
      "op": "intc_0 // 0",
      "stack_out": [
        "helloApp#0",
        "0"
      ]
    },
    "852": {
      "op": "itxn_field Fee",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "854": {
      "op": "itxn_submit"
    },
    "855": {
      "op": "itxn LastLog"
    },
    "857": {
      "op": "dup",
      "defined_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "858": {
      "op": "extract 0 4",
      "defined_out": [
        "helloApp#0",
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%1#0"
      ]
    },
    "861": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "helloApp#0",
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "862": {
      "op": "==",
      "defined_out": [
        "helloApp#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "863": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "helloApp#0",
        "txn.LastLog#0"
      ]
    },
    "864": {
      "op": "extract 6 0",
      "defined_out": [
        "helloApp#0",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0"
      ]
    },
    "867": {
      "op": "pushbytes \"bonjour world\"",
      "defined_out": [
        "\"bonjour world\"",
        "helloApp#0",
        "result#0"
      ],
      "stack_out": [
        "helloApp#0",
        "result#0",
        "\"bonjour world\""
      ]
    },
    "882": {
      "op": "==",
      "defined_out": [
        "helloApp#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "helloApp#0",
        "tmp%3#0"
      ]
    },
    "883": {
      "op": "assert",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "884": {
      "op": "itxn_begin"
    },
    "885": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "5"
      ]
    },
    "886": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "888": {
      "op": "bytec_2 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "helloApp#0"
      ],
      "stack_out": [
        "helloApp#0",
        "Method(delete()void)"
      ]
    },
    "889": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "helloApp#0"
      ]
    },
    "891": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "893": {
      "op": "intc_1 // 6",
      "stack_out": [
        "6"
      ]
    },
    "894": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "896": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "897": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "899": {
      "op": "itxn_submit"
    },
    "900": {
      "retsub": true,
      "op": "retsub"
    },
    "901": {
      "subroutine": "tests/approvals/precompiled-factory.algo.ts::HelloFactory.test_compile_contract_large",
      "params": {},
      "block": "test_compile_contract_large",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "902": {
      "op": "bytec_0 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "903": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "905": {
      "op": "pushbytes base64(CjEbQQA7ggIEAr8wzwQkN408NhoAjgIADwADgQBDMRmBBRJEMRhEgQFDMRkURDEYRIgAGRaABBUffHVMULCBAUMxGUD/1TEYFESBAUOBgCCvFYk=)",
      "defined_out": [
        "CjEbQQA7ggIEAr8wzwQkN408NhoAjgIADwADgQBDMRmBBRJEMRhEgQFDMRkURDEYRIgAGRaABBUffHVMULCBAUMxGUD/1TEYFESBAUOBgCCvFYk="
      ],
      "stack_out": [
        "CjEbQQA7ggIEAr8wzwQkN408NhoAjgIADwADgQBDMRmBBRJEMRhEgQFDMRkURDEYRIgAGRaABBUffHVMULCBAUMxGUD/1TEYFESBAUOBgCCvFYk="
      ]
    },
    "990": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "992": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "993": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "995": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "996": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "998": {
      "op": "itxn_submit"
    },
    "999": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1001": {
      "op": "itxn_begin"
    },
    "1002": {
      "op": "dup",
      "defined_out": [
        "largeApp#0",
        "largeApp#0 (copy)"
      ],
      "stack_out": [
        "largeApp#0",
        "largeApp#0 (copy)"
      ]
    },
    "1003": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1005": {
      "op": "pushbytes 0x02bf30cf // method \"getBigBytesLength()uint64\"",
      "defined_out": [
        "Method(getBigBytesLength()uint64)",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "Method(getBigBytesLength()uint64)"
      ]
    },
    "1011": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1013": {
      "op": "intc_1 // 6",
      "stack_out": [
        "largeApp#0",
        "6"
      ]
    },
    "1014": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1016": {
      "op": "intc_0 // 0",
      "stack_out": [
        "largeApp#0",
        "0"
      ]
    },
    "1017": {
      "op": "itxn_field Fee",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1019": {
      "op": "itxn_submit"
    },
    "1020": {
      "op": "itxn LastLog"
    },
    "1022": {
      "op": "dup",
      "defined_out": [
        "largeApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "largeApp#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "1023": {
      "op": "extract 4 0",
      "defined_out": [
        "largeApp#0",
        "tmp%0#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "largeApp#0",
        "txn.LastLog#0",
        "tmp%0#0"
      ]
    },
    "1026": {
      "op": "swap",
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "txn.LastLog#0"
      ]
    },
    "1027": {
      "op": "extract 0 4",
      "defined_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1030": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "largeApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1031": {
      "op": "==",
      "defined_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1032": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "largeApp#0",
        "tmp%0#0"
      ]
    },
    "1033": {
      "op": "btoi",
      "defined_out": [
        "largeApp#0",
        "result#0"
      ],
      "stack_out": [
        "largeApp#0",
        "result#0"
      ]
    },
    "1034": {
      "op": "pushint 4096 // 4096",
      "defined_out": [
        "4096",
        "largeApp#0",
        "result#0"
      ],
      "stack_out": [
        "largeApp#0",
        "result#0",
        "4096"
      ]
    },
    "1037": {
      "op": "==",
      "defined_out": [
        "largeApp#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "largeApp#0",
        "tmp%3#0"
      ]
    },
    "1038": {
      "op": "assert",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1039": {
      "op": "itxn_begin"
    },
    "1040": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "5"
      ]
    },
    "1041": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1043": {
      "op": "bytec_2 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "largeApp#0"
      ],
      "stack_out": [
        "largeApp#0",
        "Method(delete()void)"
      ]
    },
    "1044": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "largeApp#0"
      ]
    },
    "1046": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1048": {
      "op": "intc_1 // 6",
      "stack_out": [
        "6"
      ]
    },
    "1049": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1051": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1052": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1054": {
      "op": "itxn_submit"
    },
    "1055": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
{
    "hints": {
        "testNested((uint64,(uint512,uint512)))(uint64,(uint512,uint512),uint64,uint512)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "testLiteralDestructuring()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "produceFixed()uint64[3]": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSA2NCAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktZGVzdHJ1Y3R1cmluZy5hbGdvLnRzOjQKICAgIC8vIGV4cG9ydCBjbGFzcyBBcnJheURlc3RydWN0dXJpbmdBbGdvIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDkKICAgIHB1c2hieXRlc3MgMHg3NGI3ZThkZiAweGE3ODAwMGRlIDB4MmRhZmM2YzYgMHhkNDhiNjk4MyAvLyBtZXRob2QgInRlc3ROZXN0ZWQoKHVpbnQ2NCwodWludDUxMix1aW50NTEyKSkpKHVpbnQ2NCwodWludDUxMix1aW50NTEyKSx1aW50NjQsdWludDUxMikiLCBtZXRob2QgInRlc3QoKXZvaWQiLCBtZXRob2QgInRlc3RMaXRlcmFsRGVzdHJ1Y3R1cmluZygpdm9pZCIsIG1ldGhvZCAicHJvZHVjZUZpeGVkKCl1aW50NjRbM10iCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3Rlc3ROZXN0ZWRfcm91dGVAMyBtYWluX3Rlc3Rfcm91dGVANCBtYWluX3Rlc3RMaXRlcmFsRGVzdHJ1Y3R1cmluZ19yb3V0ZUA1IG1haW5fcHJvZHVjZUZpeGVkX3JvdXRlQDYKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1kZXN0cnVjdHVyaW5nLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIEFycmF5RGVzdHJ1Y3R1cmluZ0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICBpbnRjXzIgLy8gMAogICAgcmV0dXJuCgptYWluX3Byb2R1Y2VGaXhlZF9yb3V0ZUA2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWRlc3RydWN0dXJpbmcuYWxnby50czo0NAogICAgLy8gcHJvZHVjZUZpeGVkKCk6IEZpeGVkQXJyYXk8dWludDY0LCAzPiB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1MDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDIwMDAwMDAwMDAwMDAwMDAzCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fdGVzdExpdGVyYWxEZXN0cnVjdHVyaW5nX3JvdXRlQDU6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktZGVzdHJ1Y3R1cmluZy5hbGdvLnRzOjM0CiAgICAvLyB0ZXN0TGl0ZXJhbERlc3RydWN0dXJpbmcoKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fdGVzdF9yb3V0ZUA0OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FycmF5LWRlc3RydWN0dXJpbmcuYWxnby50czoxMQogICAgLy8gdGVzdCgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl90ZXN0TmVzdGVkX3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJyYXktZGVzdHJ1Y3R1cmluZy5hbGdvLnRzOjUKICAgIC8vIHRlc3ROZXN0ZWQoYXJnOiByZWFkb25seSBbdWludDY0LCByZWFkb25seSBbYmlndWludCwgYmlndWludF1dKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1kZXN0cnVjdHVyaW5nLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIEFycmF5RGVzdHJ1Y3R1cmluZ0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBkdXAKICAgIGludGNfMiAvLyAwCiAgICBleHRyYWN0X3VpbnQ2NAogICAgc3dhcAogICAgZXh0cmFjdCA4IDEyOAogICAgZHVwCiAgICBleHRyYWN0IDAgNjQKICAgIHN3YXAKICAgIGV4dHJhY3QgNjQgNjQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1kZXN0cnVjdHVyaW5nLmFsZ28udHM6NQogICAgLy8gdGVzdE5lc3RlZChhcmc6IHJlYWRvbmx5IFt1aW50NjQsIHJlYWRvbmx5IFtiaWd1aW50LCBiaWd1aW50XV0pIHsKICAgIHVuY292ZXIgMgogICAgaXRvYgogICAgZGlnIDIKICAgIGxlbgogICAgaW50Y18xIC8vIDY0CiAgICA8PQogICAgYXNzZXJ0IC8vIG92ZXJmbG93CiAgICBpbnRjXzEgLy8gNjQKICAgIGJ6ZXJvCiAgICB1bmNvdmVyIDMKICAgIGRpZyAxCiAgICBifAogICAgZGlnIDMKICAgIGxlbgogICAgaW50Y18xIC8vIDY0CiAgICA8PQogICAgYXNzZXJ0IC8vIG92ZXJmbG93CiAgICB1bmNvdmVyIDMKICAgIHVuY292ZXIgMgogICAgYnwKICAgIGRpZyAxCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGRpZyAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHVuY292ZXIgMgogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdAOToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcnJheS1kZXN0cnVjdHVyaW5nLmFsZ28udHM6NAogICAgLy8gZXhwb3J0IGNsYXNzIEFycmF5RGVzdHJ1Y3R1cmluZ0FsZ28gZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEzCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ArrayDestructuringAlgo",
        "methods": [
            {
                "name": "testNested",
                "args": [
                    {
                        "type": "(uint64,(uint512,uint512))",
                        "name": "arg"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,(uint512,uint512),uint64,uint512)"
                }
            },
            {
                "name": "test",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "testLiteralDestructuring",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "produceFixed",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64[3]"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
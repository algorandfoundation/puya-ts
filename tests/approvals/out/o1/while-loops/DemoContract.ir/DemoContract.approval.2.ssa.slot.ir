main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@6
    block@2: // abi_routing_L4
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "testWhile(uint64)uint64" => block@3, * => block@10}
    block@3: // testWhile_route_L5
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let tmp%7#0: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        let tmp%8#0: uint64 = tests/approvals/while-loops.algo.ts::DemoContract.testWhile(tmp%7#0)
        let array%val_as_bytes%0#1: bytes[8] = (itob tmp%8#0)
        let tmp%10#0: bytes = (concat 0x151f7c75 array%val_as_bytes%0#1)
        (log tmp%10#0)
        let tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router__%0#0: bool = 1u
        goto block@11
    block@6: // bare_routing_L4
        let tmp%11#0: uint64 = (txn OnCompletion)
        goto tmp%11#0 ? block@10 : block@7
    block@7: // __algots__.defaultCreate_L4
        let tmp%12#0: uint64 = (txn ApplicationID)
        let tmp%13#0: bool = (! tmp%12#0)
        (assert tmp%13#0) // can only call when creating
        let tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router__%0#1: bool = 1u
        goto block@11
    block@10: // after_if_else_L4
        let tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router__%0#2: bool = 0u
        goto block@11
    block@11: // after_inlined_tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router___L1
        let tmp%0#0: bool = φ(tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router__%0#0 <- block@3, tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router__%0#1 <- block@7, tests/approvals/while-loops.algo.ts::DemoContract.__puya_arc4_router__%0#2 <- block@10)
        return tmp%0#0

subroutine tests/approvals/while-loops.algo.ts::DemoContract.testWhile(stop: uint64) -> uint64:
    block@0: // L5
        let i#0: uint64 = 0u
        goto block@1
    block@1: // while_top_L7
        let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@2)
        let tmp%0#0: bool = (< i#1 stop#0)
        goto tmp%0#0 ? block@2 : block@3
    block@2: // while_body_L7
        let i#2: uint64 = (+ i#1 1u)
        goto block@1
    block@3: // after_while_L7
        return i#1
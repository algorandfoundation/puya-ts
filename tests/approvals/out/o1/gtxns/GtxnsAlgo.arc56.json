{
    "name": "GtxnsAlgo",
    "structs": {
        "Object3488A93F": [
            {
                "name": "sender",
                "type": "byte[32]"
            },
            {
                "name": "fee",
                "type": "uint64"
            },
            {
                "name": "firstValid",
                "type": "uint64"
            },
            {
                "name": "firstValidTime",
                "type": "uint64"
            },
            {
                "name": "lastValid",
                "type": "uint64"
            },
            {
                "name": "note",
                "type": "byte[]"
            },
            {
                "name": "lease",
                "type": "byte[32]"
            },
            {
                "name": "typeBytes",
                "type": "byte[]"
            },
            {
                "name": "groupIndex",
                "type": "uint64"
            },
            {
                "name": "txnId",
                "type": "byte[32]"
            },
            {
                "name": "rekeyTo",
                "type": "byte[32]"
            },
            {
                "name": "receiver",
                "type": "byte[32]"
            },
            {
                "name": "amount",
                "type": "uint64"
            },
            {
                "name": "closeRemainderTo",
                "type": "byte[32]"
            }
        ]
    },
    "methods": [
        {
            "name": "test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test2",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test3",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test4",
            "args": [
                {
                    "type": "appl",
                    "name": "other"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "reflectAllPay",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "(byte[32],uint64,uint64,uint64,uint64,byte[],byte[32],byte[],uint64,byte[32],byte[32],byte[32],uint64,byte[32])",
                "struct": "Object3488A93F"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test5",
            "args": [
                {
                    "type": "txn",
                    "name": "txn"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        218
                    ],
                    "errorMessage": "OCA must be NoOp"
                },
                {
                    "pc": [
                        39
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        98
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        244
                    ],
                    "errorMessage": "Other txn must be NoOp"
                },
                {
                    "pc": [
                        238
                    ],
                    "errorMessage": "transaction type is appl"
                },
                {
                    "pc": [
                        104,
                        276
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyAEAQAGBCYDBN+SDzcLSGVsbG8gdGVzdDQEFR98dTEbQQA3MRkURDEYRIICBKeAAN4E8ZCFJCiCAwTttPlzBBPealQEdFn7HzYaAI4GAAkAEwB9AIoAsQFTADEZFDEYFBBDIzgQIhJEIzgIQ4AAMgQjSUsCDEEAXEk4EElFBCQSQQANSTgYFrBJIghFAUL/4UsCJRJBAAhJOBEWsEL/6UsCgQMSQQAISTghFrBC/9lLAiISQQAHSTgHsEL/y0sCgQISQQAHSTgKsEL/vEk4LRawQv+0IkMxGRREMRAkEkQpsCJDMRYiCUk4EEkkEkRLATgZFEQkEkRJOD4pEkRJI8IaKBJEOBgyCBJDMRYiCUk4ECISREk4AEsBOAFLAjgCSwM4A0sEOARLBTgFSwY4BksHOA9LCDgWSwk4F0sKOCBLCzgHSww4CE8NOAlPDBZPDUxQTwwWUE8LFlBPChZQSwkVFlcGAk8KUEyAAgD0UEsBFYH0AQhMTwpQSwkVFlcGAk8KUE8CFlcGAk8CTFBPCBZQTwdQTwZQTwVQTwQWUE8DUE8CUExQKkxQsCJDMRYiCTgQSSISQQAIIhYqTFCwIkNJJRJBAAQjQv/vI0L/6w==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
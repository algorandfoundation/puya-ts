{
    "name": "ReceivesTxns",
    "structs": {},
    "methods": [
        {
            "name": "getOne",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receivesAnyTxn",
            "args": [
                {
                    "type": "txn",
                    "name": "txn"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receivesAssetConfig",
            "args": [
                {
                    "type": "acfg",
                    "name": "assetCfg"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receivesAssetConfigAndPay",
            "args": [
                {
                    "type": "acfg",
                    "name": "assetCfg"
                },
                {
                    "type": "pay",
                    "name": "payTxn"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        58,
                        91,
                        125,
                        146
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        175
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        61,
                        94,
                        128,
                        149
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        72,
                        104
                    ],
                    "errorMessage": "transaction type is acfg"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAQMAJgEEFR98dTEbQQCVggQEj2iS7wSc2H3jBNNmyGkEgbZzUjYaAI4EAFoARQAjAAIkQzEZFEQxGEQxFoECCUk4ECMSRDEWIglJOBAiEkSIAKwiQzEZFEQxGEQxFiIJSTgQIxJEiACOSRUWVwYCTFAoTFCwIkMxGRREMRhEMRYiCYgAKhYoTFCwIkMxGRREMRhEgAwVH3x1AAAAAAAAAAGwIkMxGUD/iTEYFEQiQ4oBAYAASYv/OBBJIxJBABaL/zg8SYwAQQAFiwCMAImL/zghQv/2iwKBBhJBABaL/zg9SYwBQQAFiwGMAImL/zgYQv/2JIwAiYoBAYv/OBeJigIAi/44ECMSRIv/OBAiEkSJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}
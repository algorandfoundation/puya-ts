#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // tests/approvals/precompiled-apps.algo.ts:67
    // export class LargeProgram extends Contract {
    txn NumAppArgs
    bz main_bare_routing@7
    pushbytess 0x02bf30cf 0x24378d3c // method "getBigBytesLength()uint64", method "delete()void"
    txna ApplicationArgs 0
    match main_getBigBytesLength_route@3 main_delete_route@4

main_after_if_else@11:
    // tests/approvals/precompiled-apps.algo.ts:67
    // export class LargeProgram extends Contract {
    pushint 0 // 0
    return

main_delete_route@4:
    // tests/approvals/precompiled-apps.algo.ts:72
    // @abimethod({ allowActions: 'DeleteApplication' })
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    assert // can only call when not creating
    pushint 1 // 1
    return

main_getBigBytesLength_route@3:
    // tests/approvals/precompiled-apps.algo.ts:68
    // getBigBytesLength() {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub getBigBytesLength
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@7:
    // tests/approvals/precompiled-apps.algo.ts:67
    // export class LargeProgram extends Contract {
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// tests/approvals/precompiled-apps.algo.ts::LargeProgram.getBigBytesLength() -> uint64:
getBigBytesLength:
    // tests/approvals/precompiled-apps.algo.ts:64
    // return op.bzero(4096)
    pushint 4096 // 4096
    bzero
    // tests/approvals/precompiled-apps.algo.ts:69
    // return getBigBytes().length
    len
    retsub

#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 2
    bytecblock "greeting" " " 0x151f7c75 TMPL_GREETING
    txn ApplicationID
    bnz main_after_if_else@2
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:45
    // this.greeting.value = TemplateVar<string>('GREETING')
    bytec_3 // TMPL_GREETING
    app_global_put

main_after_if_else@2:
    // tests/approvals/precompiled-apps.algo.ts:42
    // export class HelloTemplate extends HelloBase {
    pushbytess 0x24378d3c 0xa0e81872 // method "delete()void", method "update()void"
    txna ApplicationArgs 0
    match main_delete_route@4 main_update_route@5
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    bz main_create_NoOp@11
    pushbytess 0xd0a28200 0x5180ba20 // method "greet(string)string", method "sendGreetings((string,string))string"
    txna ApplicationArgs 0
    match greet sendGreetings
    err

main_create_NoOp@11:
    // tests/approvals/precompiled-apps.algo.ts:42
    // export class HelloTemplate extends HelloBase {
    pushbytes 0x4c5c61ba // method "create()void"
    txna ApplicationArgs 0
    match main_create_route@12
    err

main_create_route@12:
    // tests/approvals/precompiled-apps.algo.ts:48
    // @abimethod({ onCreate: 'require' })
    intc_1 // 1
    return

main_update_route@5:
    // tests/approvals/precompiled-apps.algo.ts:23
    // @abimethod({ allowActions: 'UpdateApplication' })
    txn OnCompletion
    pushint 4 // UpdateApplication
    ==
    txn ApplicationID
    &&
    return // on error: OnCompletion must be UpdateApplication && can only call when not creating

main_delete_route@4:
    // tests/approvals/precompiled-apps.algo.ts:20
    // @abimethod({ allowActions: 'DeleteApplication' })
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    txn ApplicationID
    &&
    return // on error: OnCompletion must be DeleteApplication && can only call when not creating


// tests/approvals/precompiled-apps.algo.ts::HelloBase.greet[routing]() -> void:
greet:
    // tests/approvals/precompiled-apps.algo.ts:26
    // greet(name: string): string {
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint16
    intc_2 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for (len+utf8[])
    extract 2 0
    // tests/approvals/precompiled-apps.algo.ts:27
    // return `${this.greeting.value} ${name}`
    intc_0 // 0
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:27
    // return `${this.greeting.value} ${name}`
    app_global_get_ex
    assert // check GlobalState exists
    bytec_1 // " "
    concat
    swap
    concat
    // tests/approvals/precompiled-apps.algo.ts:26
    // greet(name: string): string {
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_2 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return


// tests/approvals/precompiled-apps.algo.ts::HelloBase.sendGreetings[routing]() -> void:
sendGreetings:
    // tests/approvals/precompiled-apps.algo.ts:30
    // sendGreetings(a: Greeting): string {
    txna ApplicationArgs 1
    // tests/approvals/precompiled-apps.algo.ts:31
    // return `${this.greeting.value} ${a.name}${a.termination.native}`
    intc_0 // 0
    // tests/approvals/precompiled-apps.algo.ts:18
    // greeting = GlobalState({ initialValue: '' })
    bytec_0 // "greeting"
    // tests/approvals/precompiled-apps.algo.ts:31
    // return `${this.greeting.value} ${a.name}${a.termination.native}`
    app_global_get_ex
    assert // check GlobalState exists
    bytec_1 // " "
    concat
    dig 1
    intc_0 // 0
    extract_uint16
    dig 2
    intc_2 // 2
    extract_uint16
    dig 3
    uncover 2
    dig 2
    substring3
    extract 2 0
    uncover 2
    swap
    concat
    dig 2
    len
    uncover 3
    uncover 3
    uncover 2
    substring3
    extract 2 0
    concat
    // tests/approvals/precompiled-apps.algo.ts:30
    // sendGreetings(a: Greeting): string {
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_2 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

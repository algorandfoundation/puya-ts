{
    "hints": {
        "getOne()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "receivesAnyTxn(txn)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "receivesAssetConfig(acfg)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "receivesAssetConfigAndPay(acfg,pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ReceivesTxns",
        "methods": [
            {
                "name": "getOne",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "receivesAnyTxn",
                "args": [
                    {
                        "type": "txn",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "receivesAssetConfig",
                "args": [
                    {
                        "type": "acfg",
                        "name": "assetCfg"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "receivesAssetConfigAndPay",
                "args": [
                    {
                        "type": "acfg",
                        "name": "assetCfg"
                    },
                    {
                        "type": "pay",
                        "name": "payTxn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
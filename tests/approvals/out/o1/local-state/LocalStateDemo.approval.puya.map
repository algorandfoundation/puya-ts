{
  "version": 3,
  "sources": [
    "C:/Source/algorand/puya-ts/tests/approvals/local-state.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA4BE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAVF;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAUE;;;AAAA;;AAHC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAPH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAUE;;;AACqB;;AAViB;AAUpC;;AAAA;AACoB;;AAVtB;AAUE;;AAAA;AACoB;;AAVgB;AAUpC;;AAAA;AACqB;;AAVvB;AAUE;;AAAA;AACsB;;AAVxB;;AAUE;;AAAA;;AAKgC;;AAAQ;AAnBJ;AAmBI;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;;AAAA;AAJd;;AAAQ;AAnBJ;AAmBI;AAAA;;AAAA;AACN;;AAAQ;AAnB5C;AAmB4C;AAAA;;AAAA;AACR;;AAAQ;AAnBN;AAmBM;AAAA;;AAAA;AACN;;AAAQ;AAnB9C;AAmB8C;AAAA;;AAAA;AACN;;AAAQ;AAnBhD;;AAmBgD;AAAA;AAL9C;AAUmB;;AA5BiB;AA4BpC;AACoB;;AA5BtB;AA4BE;AACoB;;AA5BgB;AA4BpC;AACqB;;AA5BvB;AA4BE;AACsB;;AA5BxB;;AA4BE;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"l1\" \"localUint2\" \"b1\" \"localBytes2\" \"localEncoded\""
    },
    "49": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "51": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "54": {
      "op": "pushbytess 0x29314d95 0xaaefcb43 0x67816cc5 0x11170534 // method \"optIn()void\", method \"setState((uint64,byte[]),uint64[10])void\", method \"getState()(uint64,uint64,byte[],byte[],uint64[10])\", method \"clearState()void\""
    },
    "76": {
      "op": "txna ApplicationArgs 0"
    },
    "79": {
      "op": "match main_optIn_route@3 main_setState_route@4 main_getState_route@5 main_clearState_route@6"
    },
    "89": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "return"
    },
    "91": {
      "block": "main_clearState_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "93": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "94": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "95": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "97": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "98": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.clearState",
      "op": "callsub clearState"
    },
    "101": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "return"
    },
    "103": {
      "block": "main_getState_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "105": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "106": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "107": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "109": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "110": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.getState",
      "op": "callsub getState",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0"
      ]
    },
    "113": {
      "op": "uncover 4",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%0#0"
      ]
    },
    "115": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "116": {
      "op": "uncover 4",
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "118": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "119": {
      "op": "dig 4",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%2#0 (copy)",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "elements_to_encode%2#0 (copy)"
      ]
    },
    "121": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "length%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length%0#0"
      ]
    },
    "122": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "as_bytes%0#0"
      ]
    },
    "123": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "length_uint16%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0"
      ]
    },
    "126": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0",
        "elements_to_encode%2#0"
      ]
    },
    "128": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "129": {
      "op": "dig 4",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "elements_to_encode%3#0 (copy)"
      ]
    },
    "131": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "length%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "132": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "133": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "136": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "elements_to_encode%3#0"
      ]
    },
    "138": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "139": {
      "op": "uncover 3"
    },
    "141": {
      "op": "uncover 3",
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "143": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "144": {
      "op": "pushbytes 0x0064",
      "defined_out": [
        "0x0064",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "0x0064"
      ]
    },
    "148": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "149": {
      "op": "dig 2",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "151": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "data_length%0#0"
      ]
    },
    "152": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "data_length%0#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "data_length%0#0",
        "100"
      ]
    },
    "154": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%1#0"
      ]
    },
    "155": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "as_bytes%3#0"
      ]
    },
    "156": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%1#0"
      ]
    },
    "159": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "160": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0",
        "elements_to_encode%4#0"
      ]
    },
    "162": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "163": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0"
      ]
    },
    "165": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "166": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ]
    },
    "167": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "168": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "0x151f7c75"
      ]
    },
    "174": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "175": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "176": {
      "op": "log",
      "stack_out": []
    },
    "177": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "178": {
      "op": "return"
    },
    "179": {
      "block": "main_setState_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "181": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "182": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "183": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "185": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "186": {
      "op": "txna ApplicationArgs 1"
    },
    "189": {
      "op": "dup"
    },
    "190": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "0"
      ]
    },
    "191": {
      "op": "extract_uint64",
      "defined_out": [
        "item0%0%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0"
      ]
    },
    "192": {
      "op": "dig 1",
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0",
        "tmp%11#0 (copy)"
      ]
    },
    "194": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "item0%0%0#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0",
        "tmp%11#0 (copy)",
        "8"
      ]
    },
    "196": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0",
        "item_start_offset%0#0"
      ]
    },
    "197": {
      "op": "dig 2",
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0",
        "item_start_offset%0#0",
        "tmp%11#0 (copy)"
      ]
    },
    "199": {
      "op": "len",
      "defined_out": [
        "item0%0%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "item0%0%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "200": {
      "op": "uncover 3",
      "stack_out": [
        "item0%0%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%11#0"
      ]
    },
    "202": {
      "op": "cover 2",
      "stack_out": [
        "item0%0%0#0",
        "tmp%11#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "204": {
      "op": "substring3",
      "defined_out": [
        "item0%0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0#0"
      ]
    },
    "205": {
      "op": "extract 2 0",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0"
      ]
    },
    "208": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[80]%0#0"
      ],
      "stack_out": [
        "item0%0%0#0",
        "item1%0%0#0",
        "reinterpret_bytes[80]%0#0"
      ]
    },
    "211": {
      "callsub": "tests/approvals/local-state.algo.ts::LocalStateDemo.setState",
      "op": "callsub setState",
      "stack_out": []
    },
    "214": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "215": {
      "op": "return"
    },
    "216": {
      "block": "main_optIn_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "218": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "OptIn"
      ]
    },
    "219": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "220": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "221": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "223": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "224": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "225": {
      "op": "return"
    },
    "226": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "228": {
      "op": "bnz main_after_if_else@13",
      "stack_out": []
    },
    "231": {
      "op": "txn ApplicationID"
    },
    "233": {
      "op": "!"
    },
    "234": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "235": {
      "op": "intc_1 // 1"
    },
    "236": {
      "op": "return"
    },
    "237": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.setState",
      "params": {
        "p.a#0": "uint64",
        "p.b#0": "bytes",
        "c#0": "bytes"
      },
      "block": "setState",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "240": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "242": {
      "op": "bytec_0 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\""
      ]
    },
    "243": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"l1\"",
        "p.a#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\"",
        "p.a#0 (copy)"
      ]
    },
    "245": {
      "op": "app_local_put",
      "stack_out": []
    },
    "246": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "248": {
      "op": "bytec_1 // \"localUint2\"",
      "defined_out": [
        "\"localUint2\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"localUint2\""
      ]
    },
    "249": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%1#0",
        "\"localUint2\"",
        "p.a#0 (copy)"
      ]
    },
    "251": {
      "op": "app_local_put",
      "stack_out": []
    },
    "252": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "254": {
      "op": "bytec_2 // \"b1\"",
      "defined_out": [
        "\"b1\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"b1\""
      ]
    },
    "255": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"b1\"",
        "p.b#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"b1\"",
        "p.b#0 (copy)"
      ]
    },
    "257": {
      "op": "app_local_put",
      "stack_out": []
    },
    "258": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "260": {
      "op": "bytec_3 // \"localBytes2\"",
      "defined_out": [
        "\"localBytes2\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"localBytes2\""
      ]
    },
    "261": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "\"localBytes2\"",
        "p.b#0 (copy)"
      ]
    },
    "263": {
      "op": "app_local_put",
      "stack_out": []
    },
    "264": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "266": {
      "op": "bytec 4 // \"localEncoded\"",
      "defined_out": [
        "\"localEncoded\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"localEncoded\""
      ]
    },
    "268": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"localEncoded\"",
        "c#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"localEncoded\"",
        "c#0 (copy)"
      ]
    },
    "270": {
      "op": "app_local_put",
      "stack_out": []
    },
    "271": {
      "retsub": true,
      "op": "retsub"
    },
    "272": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.getState",
      "params": {},
      "block": "getState",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "274": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "275": {
      "op": "bytec_0 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"l1\""
      ]
    },
    "276": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "277": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "278": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "280": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "0"
      ]
    },
    "281": {
      "op": "bytec_1 // \"localUint2\"",
      "defined_out": [
        "\"localUint2\"",
        "0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "0",
        "\"localUint2\""
      ]
    },
    "282": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "283": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "285": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "286": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "289": {
      "op": "bytec_2 // \"b1\"",
      "defined_out": [
        "\"b1\"",
        "0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "0",
        "\"b1\""
      ]
    },
    "290": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "291": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "293": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "294": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "296": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0",
        "0"
      ]
    },
    "297": {
      "op": "bytec_3 // \"localBytes2\"",
      "defined_out": [
        "\"localBytes2\"",
        "0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "298": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "299": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%3#0"
      ]
    },
    "301": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "302": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0"
      ]
    },
    "304": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0",
        "0"
      ]
    },
    "305": {
      "op": "bytec 4 // \"localEncoded\"",
      "defined_out": [
        "\"localEncoded\"",
        "0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "307": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "308": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%4#0"
      ]
    },
    "310": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "311": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "313": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "314": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0",
        "0",
        "\"l1\""
      ]
    },
    "315": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "316": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%5#0"
      ]
    },
    "318": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "319": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "321": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0",
        "0"
      ]
    },
    "322": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0",
        "0",
        "\"localUint2\""
      ]
    },
    "323": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "324": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "325": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0"
      ]
    },
    "327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0",
        "0"
      ]
    },
    "328": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%7#0",
        "0",
        "\"b1\""
      ]
    },
    "329": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "330": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%7#0"
      ]
    },
    "332": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "333": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0"
      ]
    },
    "335": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0",
        "0"
      ]
    },
    "336": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%8#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "337": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "338": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%8#0"
      ]
    },
    "340": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "341": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0"
      ]
    },
    "343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0",
        "0"
      ]
    },
    "344": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%9#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "346": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "347": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%9#0"
      ]
    },
    "349": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "350": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0"
      ]
    },
    "352": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0",
        "0"
      ]
    },
    "353": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%10#0",
        "0",
        "\"l1\""
      ]
    },
    "354": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%10#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "355": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%10#0"
      ]
    },
    "357": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "358": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0"
      ]
    },
    "360": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0",
        "0"
      ]
    },
    "361": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%11#0",
        "0",
        "\"localUint2\""
      ]
    },
    "362": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%11#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "363": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_exists%11#0"
      ]
    },
    "365": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0"
      ]
    },
    "366": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0"
      ]
    },
    "368": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0",
        "0"
      ]
    },
    "369": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "tmp%12#0",
        "0",
        "\"b1\""
      ]
    },
    "370": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "371": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "372": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%13#0"
      ]
    },
    "374": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%13#0",
        "0"
      ]
    },
    "375": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%13#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "376": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%13#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "377": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%13#0"
      ]
    },
    "379": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "380": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%14#0"
      ]
    },
    "382": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%14#0",
        "0"
      ]
    },
    "383": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%14#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "385": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%14#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "386": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%14#0"
      ]
    },
    "388": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "389": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%15#0"
      ]
    },
    "391": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%15#0",
        "0"
      ]
    },
    "392": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%15#0",
        "0",
        "\"l1\""
      ]
    },
    "393": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%15#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "394": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%15#0"
      ]
    },
    "396": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "397": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%16#0"
      ]
    },
    "399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%16#0",
        "0"
      ]
    },
    "400": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%16#0",
        "0",
        "\"localUint2\""
      ]
    },
    "401": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%16#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "402": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%16#0"
      ]
    },
    "404": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "405": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%17#0"
      ]
    },
    "407": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%17#0",
        "0"
      ]
    },
    "408": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%17#0",
        "0",
        "\"b1\""
      ]
    },
    "409": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%17#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "410": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_exists%17#0"
      ]
    },
    "412": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0"
      ]
    },
    "413": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%6#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%18#0"
      ]
    },
    "415": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%18#0",
        "0"
      ]
    },
    "416": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "tmp%18#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "417": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "418": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "419": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%19#0"
      ]
    },
    "421": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%19#0",
        "0"
      ]
    },
    "422": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%19#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "424": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%19#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "425": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%19#0"
      ]
    },
    "427": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "428": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%20#0"
      ]
    },
    "430": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%20#0",
        "0"
      ]
    },
    "431": {
      "op": "bytec_0 // \"l1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%20#0",
        "0",
        "\"l1\""
      ]
    },
    "432": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%20#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%20#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "433": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%20#0"
      ]
    },
    "435": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "436": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%21#0"
      ]
    },
    "438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%21#0",
        "0"
      ]
    },
    "439": {
      "op": "bytec_1 // \"localUint2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%21#0",
        "0",
        "\"localUint2\""
      ]
    },
    "440": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%21#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%21#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "441": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%21#0"
      ]
    },
    "443": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "444": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%22#0"
      ]
    },
    "446": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%22#0",
        "0"
      ]
    },
    "447": {
      "op": "bytec_2 // \"b1\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%22#0",
        "0",
        "\"b1\""
      ]
    },
    "448": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%22#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%22#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "449": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%22#0"
      ]
    },
    "451": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "452": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%23#0"
      ]
    },
    "454": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%23#0",
        "0"
      ]
    },
    "455": {
      "op": "bytec_3 // \"localBytes2\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%23#0",
        "0",
        "\"localBytes2\""
      ]
    },
    "456": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%23#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%23#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "457": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_exists%23#0"
      ]
    },
    "459": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0"
      ]
    },
    "460": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%6#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%24#0"
      ]
    },
    "462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%24#0",
        "0"
      ]
    },
    "463": {
      "op": "bytec 4 // \"localEncoded\"",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "tmp%24#0",
        "0",
        "\"localEncoded\""
      ]
    },
    "465": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%24#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%24#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "466": {
      "error": "check LocalState exists",
      "op": "assert // check LocalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%6#0",
        "maybe_value%12#0",
        "maybe_value%18#0",
        "maybe_value%24#0"
      ]
    },
    "467": {
      "retsub": true,
      "op": "retsub"
    },
    "468": {
      "subroutine": "tests/approvals/local-state.algo.ts::LocalStateDemo.clearState",
      "params": {},
      "block": "clearState",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "470": {
      "op": "bytec_0 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\""
      ]
    },
    "471": {
      "op": "app_local_del",
      "stack_out": []
    },
    "472": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "474": {
      "op": "bytec_1 // \"localUint2\"",
      "defined_out": [
        "\"localUint2\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"localUint2\""
      ]
    },
    "475": {
      "op": "app_local_del",
      "stack_out": []
    },
    "476": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "478": {
      "op": "bytec_2 // \"b1\"",
      "defined_out": [
        "\"b1\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"b1\""
      ]
    },
    "479": {
      "op": "app_local_del",
      "stack_out": []
    },
    "480": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "482": {
      "op": "bytec_3 // \"localBytes2\"",
      "defined_out": [
        "\"localBytes2\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"localBytes2\""
      ]
    },
    "483": {
      "op": "app_local_del",
      "stack_out": []
    },
    "484": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "486": {
      "op": "bytec 4 // \"localEncoded\"",
      "defined_out": [
        "\"localEncoded\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"localEncoded\""
      ]
    },
    "488": {
      "op": "app_local_del",
      "stack_out": []
    },
    "489": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
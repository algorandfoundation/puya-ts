{
    "hints": {
        "emitSwapped(uint8,uint8)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "emitCustom(string,bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "emitDynamicBytes(byte[],byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjEzCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdAOAogICAgcHVzaGJ5dGVzcyAweDg3NjliNzlhIDB4ZjE0ODg5ZDcgMHhkNGM5N2M5YyAvLyBtZXRob2QgImVtaXRTd2FwcGVkKHVpbnQ4LHVpbnQ4KXZvaWQiLCBtZXRob2QgImVtaXRDdXN0b20oc3RyaW5nLGJvb2wpdm9pZCIsIG1ldGhvZCAiZW1pdER5bmFtaWNCeXRlcyhieXRlW10sYnl0ZVtdKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2VtaXRTd2FwcGVkX3JvdXRlQDMgbWFpbl9lbWl0Q3VzdG9tX3JvdXRlQDQgbWFpbl9lbWl0RHluYW1pY0J5dGVzX3JvdXRlQDUKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MTMKICAgIC8vIGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMSAvLyAwCiAgICByZXR1cm4KCm1haW5fZW1pdER5bmFtaWNCeXRlc19yb3V0ZUA1OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozNwogICAgLy8gZW1pdER5bmFtaWNCeXRlcyh4OiBieXRlcywgeTogRHluYW1pY0J5dGVzKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MTMKICAgIC8vIGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjM3CiAgICAvLyBlbWl0RHluYW1pY0J5dGVzKHg6IGJ5dGVzLCB5OiBEeW5hbWljQnl0ZXMpIHsKICAgIGNhbGxzdWIgZW1pdER5bmFtaWNCeXRlcwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9lbWl0Q3VzdG9tX3JvdXRlQDQ6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjMyCiAgICAvLyBlbWl0Q3VzdG9tKGFyZzA6IHN0cmluZywgYXJnMTogYm9vbGVhbikgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjEzCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBleHRyYWN0IDIgMAogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgaW50Y18xIC8vIDAKICAgIGdldGJpdAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozMgogICAgLy8gZW1pdEN1c3RvbShhcmcwOiBzdHJpbmcsIGFyZzE6IGJvb2xlYW4pIHsKICAgIGNhbGxzdWIgZW1pdEN1c3RvbQogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9lbWl0U3dhcHBlZF9yb3V0ZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxNAogICAgLy8gZW1pdFN3YXBwZWQoYTogVWludE44LCBiOiBVaW50TjgpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxMwogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxNAogICAgLy8gZW1pdFN3YXBwZWQoYTogVWludE44LCBiOiBVaW50TjgpIHsKICAgIGNhbGxzdWIgZW1pdFN3YXBwZWQKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDg6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjEzCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEyCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5lbWl0U3dhcHBlZChhOiBieXRlcywgYjogYnl0ZXMpIC0+IHZvaWQ6CmVtaXRTd2FwcGVkOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxNAogICAgLy8gZW1pdFN3YXBwZWQoYTogVWludE44LCBiOiBVaW50TjgpIHsKICAgIHByb3RvIDIgMAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxNQogICAgLy8gZW1pdDxTd2FwcGVkPih7IGE6IGIsIGI6IGEgfSkKICAgIGZyYW1lX2RpZyAtMQogICAgZnJhbWVfZGlnIC0yCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDBiNjMyNWVkIC8vIG1ldGhvZCAiU3dhcHBlZCh1aW50OCx1aW50OCkiCiAgICBkaWcgMQogICAgY29uY2F0CiAgICBkdXAKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxOAogICAgLy8gZW1pdCh4KQogICAgZHVwCiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MjQKICAgIC8vIGVtaXQoeSkKICAgIHB1c2hieXRlcyAweDQ0MWUyY2Q4IC8vIG1ldGhvZCAiU3dhcHBlZEFyYzQodWludDgsdWludDgpIgogICAgdW5jb3ZlciAyCiAgICBjb25jYXQKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoyNgogICAgLy8gZW1pdCgnU3dhcHBlZCcsIGIsIGEpCiAgICBkdXAKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoyOAogICAgLy8gZW1pdCgnU3dhcHBlZCh1aW50OCx1aW50OCknLCBiLCBhKQogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjI5CiAgICAvLyBlbWl0KCdTd2FwcGVkKCh1aW50OCx1aW50OCksdWludDgpJywgW2IsIGJdIGFzIGNvbnN0LCBhKQogICAgZnJhbWVfZGlnIC0xCiAgICBkdXAKICAgIGNvbmNhdAogICAgZnJhbWVfZGlnIC0yCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDM4OGNjMTJkIC8vIG1ldGhvZCAiU3dhcHBlZCgodWludDgsdWludDgpLHVpbnQ4KSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjpFdmVudEVtaXR0ZXIuZW1pdEN1c3RvbShhcmcwOiBieXRlcywgYXJnMTogdWludDY0KSAtPiB2b2lkOgplbWl0Q3VzdG9tOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozMgogICAgLy8gZW1pdEN1c3RvbShhcmcwOiBzdHJpbmcsIGFyZzE6IGJvb2xlYW4pIHsKICAgIHByb3RvIDIgMAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozMwogICAgLy8gZW1pdCgnQ3VzdG9tJywgYXJnMCwgYXJnMSkKICAgIGZyYW1lX2RpZyAtMgogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgZnJhbWVfZGlnIC0yCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDAwCiAgICBpbnRjXzEgLy8gMAogICAgZnJhbWVfZGlnIC0xCiAgICBzZXRiaXQKICAgIHB1c2hieXRlcyAweDAwMDMKICAgIHN3YXAKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHhhMzEzYzA2NiAvLyBtZXRob2QgIkN1c3RvbShzdHJpbmcsYm9vbCkiCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGR1cAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjM0CiAgICAvLyBlbWl0KCdDdXN0b20oc3RyaW5nLGJvb2wpJywgYXJnMCwgYXJnMSkKICAgIGxvZwogICAgcmV0c3ViCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLmVtaXREeW5hbWljQnl0ZXMoeDogYnl0ZXMsIHk6IGJ5dGVzKSAtPiB2b2lkOgplbWl0RHluYW1pY0J5dGVzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozNwogICAgLy8gZW1pdER5bmFtaWNCeXRlcyh4OiBieXRlcywgeTogRHluYW1pY0J5dGVzKSB7CiAgICBwcm90byAyIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MzgKICAgIC8vIGVtaXQoJ0RCKGJ5dGVbXSxieXRlW10pJywgeCwgeSkKICAgIGZyYW1lX2RpZyAtMgogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgZnJhbWVfZGlnIC0yCiAgICBjb25jYXQKICAgIGR1cAogICAgbGVuCiAgICBwdXNoaW50IDQgLy8gNAogICAgKwogICAgc3dhcAogICAgZnJhbWVfZGlnIC0xCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBwdXNoYnl0ZXMgMHgwMDA0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4NDUyNGUxZGQgLy8gbWV0aG9kICJEQihieXRlW10sYnl0ZVtdKSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "EventEmitter",
        "methods": [
            {
                "name": "emitSwapped",
                "args": [
                    {
                        "type": "uint8",
                        "name": "a"
                    },
                    {
                        "type": "uint8",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "emitCustom",
                "args": [
                    {
                        "type": "string",
                        "name": "arg0"
                    },
                    {
                        "type": "bool",
                        "name": "arg1"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "emitDynamicBytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "x"
                    },
                    {
                        "type": "byte[]",
                        "name": "y"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
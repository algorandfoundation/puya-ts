{
    "name": "EventEmitter",
    "structs": {},
    "methods": [
        {
            "name": "emitSwapped",
            "args": [
                {
                    "type": "uint8",
                    "name": "a"
                },
                {
                    "type": "uint8",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint8",
                            "name": "a"
                        },
                        {
                            "type": "uint8",
                            "name": "b"
                        }
                    ]
                },
                {
                    "name": "SwappedArc4",
                    "args": [
                        {
                            "type": "uint8",
                            "name": "a"
                        },
                        {
                            "type": "uint8",
                            "name": "b"
                        }
                    ]
                },
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint8",
                            "name": "0"
                        },
                        {
                            "type": "uint8",
                            "name": "1"
                        }
                    ]
                },
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "(uint8,uint8)",
                            "name": "0"
                        },
                        {
                            "type": "uint8",
                            "name": "1"
                        }
                    ]
                },
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint8[]",
                            "name": "0"
                        },
                        {
                            "type": "uint8",
                            "name": "1"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "emitCustom",
            "args": [
                {
                    "type": "string",
                    "name": "arg0"
                },
                {
                    "type": "bool",
                    "name": "arg1"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Custom",
                    "args": [
                        {
                            "type": "string",
                            "name": "0"
                        },
                        {
                            "type": "bool",
                            "name": "1"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "emitDynamicBytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "x"
                },
                {
                    "type": "byte[]",
                    "name": "y"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "DB",
                    "args": [
                        {
                            "type": "byte[]",
                            "name": "0"
                        },
                        {
                            "type": "byte[]",
                            "name": "1"
                        }
                    ]
                }
            ],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        14
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        54
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBieXRlY2Jsb2NrIDB4MDAwMwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxMwogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDEwCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydAogICAgcHVzaGJ5dGVzcyAweDg3NjliNzlhIDB4ZjE0ODg5ZDcgMHhkNGM5N2M5YyAvLyBtZXRob2QgImVtaXRTd2FwcGVkKHVpbnQ4LHVpbnQ4KXZvaWQiLCBtZXRob2QgImVtaXRDdXN0b20oc3RyaW5nLGJvb2wpdm9pZCIsIG1ldGhvZCAiZW1pdER5bmFtaWNCeXRlcyhieXRlW10sYnl0ZVtdKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBlbWl0U3dhcHBlZCBlbWl0Q3VzdG9tIGVtaXREeW5hbWljQnl0ZXMKICAgIGVycgoKbWFpbl9fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVAMTA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjEzCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgJiYKICAgIHJldHVybiAvLyBvbiBlcnJvcjogT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjpFdmVudEVtaXR0ZXIuZW1pdFN3YXBwZWRbcm91dGluZ10oKSAtPiB2b2lkOgplbWl0U3dhcHBlZDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MTQKICAgIC8vIGVtaXRTd2FwcGVkKGE6IFVpbnQ4LCBiOiBVaW50OCkgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxNQogICAgLy8gZW1pdDxTd2FwcGVkPih7IGE6IGIsIGI6IGEgfSkKICAgIGR1cAogICAgZGlnIDIKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4MGI2MzI1ZWQgLy8gbWV0aG9kICJTd2FwcGVkKHVpbnQ4LHVpbnQ4KSIKICAgIGRpZyAxCiAgICBjb25jYXQKICAgIGR1cAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjE4CiAgICAvLyBlbWl0KHgpCiAgICBkdXAKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoyNAogICAgLy8gZW1pdCh5KQogICAgcHVzaGJ5dGVzIDB4NDQxZTJjZDggLy8gbWV0aG9kICJTd2FwcGVkQXJjNCh1aW50OCx1aW50OCkiCiAgICB1bmNvdmVyIDIKICAgIGNvbmNhdAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjI2CiAgICAvLyBlbWl0KCdTd2FwcGVkJywgYiwgYSkKICAgIGR1cAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjI4CiAgICAvLyBlbWl0KCdTd2FwcGVkKHVpbnQ4LHVpbnQ4KScsIGIsIGEpCiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MjkKICAgIC8vIGVtaXQoJ1N3YXBwZWQoKHVpbnQ4LHVpbnQ4KSx1aW50OCknLCBbYiwgYl0gYXMgY29uc3QsIGEpCiAgICBkdXAKICAgIGRpZyAxCiAgICBjb25jYXQKICAgIGRpZyAyCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDM4OGNjMTJkIC8vIG1ldGhvZCAiU3dhcHBlZCgodWludDgsdWludDgpLHVpbnQ4KSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgZHVwCiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MzEKICAgIC8vIGVtaXQoJ1N3YXBwZWQoKHVpbnQ4LHVpbnQ4KSx1aW50OCknLCBbYiwgYl0sIGEpCiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MzIKICAgIC8vIGVtaXQoJ1N3YXBwZWQodWludDhbXSx1aW50OCknLCBbYiwgYl0sIGEpCiAgICBwdXNoYnl0ZXMgMHgwMDAyCiAgICBkaWcgMQogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ5dGVjXzAgLy8gMHgwMDAzCiAgICB1bmNvdmVyIDIKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHgwODc1NGUwYyAvLyBtZXRob2QgIlN3YXBwZWQodWludDhbXSx1aW50OCkiCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czoxNAogICAgLy8gZW1pdFN3YXBwZWQoYTogVWludDgsIGI6IFVpbnQ4KSB7CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLmVtaXRDdXN0b21bcm91dGluZ10oKSAtPiB2b2lkOgplbWl0Q3VzdG9tOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozNQogICAgLy8gZW1pdEN1c3RvbShhcmcwOiBzdHJpbmcsIGFyZzE6IGJvb2xlYW4pIHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MzYKICAgIC8vIGVtaXQoJ0N1c3RvbScsIGFyZzAsIGFyZzEpCiAgICBieXRlY18wIC8vIDB4MDAwMwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozNQogICAgLy8gZW1pdEN1c3RvbShhcmcwOiBzdHJpbmcsIGFyZzE6IGJvb2xlYW4pIHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MzYKICAgIC8vIGVtaXQoJ0N1c3RvbScsIGFyZzAsIGFyZzEpCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4YTMxM2MwNjYgLy8gbWV0aG9kICJDdXN0b20oc3RyaW5nLGJvb2wpIgogICAgc3dhcAogICAgY29uY2F0CiAgICBkdXAKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czozNwogICAgLy8gZW1pdCgnQ3VzdG9tKHN0cmluZyxib29sKScsIGFyZzAsIGFyZzEpCiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMtMjgtZXZlbnRzLmFsZ28udHM6MzUKICAgIC8vIGVtaXRDdXN0b20oYXJnMDogc3RyaW5nLCBhcmcxOiBib29sZWFuKSB7CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLmVtaXREeW5hbWljQnl0ZXNbcm91dGluZ10oKSAtPiB2b2lkOgplbWl0RHluYW1pY0J5dGVzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYy0yOC1ldmVudHMuYWxnby50czo0MAogICAgLy8gZW1pdER5bmFtaWNCeXRlcyh4OiBieXRlcywgeTogRHluYW1pY0J5dGVzKSB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjQyCiAgICAvLyBlbWl0KCdEQihieXRlW10sYnl0ZVtdKScsIHgsIHkpCiAgICBkaWcgMQogICAgbGVuCiAgICBwdXNoaW50IDQgLy8gNAogICAgKwogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHB1c2hieXRlcyAweDAwMDQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgdW5jb3ZlciAyCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4NDUyNGUxZGQgLy8gbWV0aG9kICJEQihieXRlW10sYnl0ZVtdKSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjLTI4LWV2ZW50cy5hbGdvLnRzOjQwCiAgICAvLyBlbWl0RHluYW1pY0J5dGVzKHg6IGJ5dGVzLCB5OiBEeW5hbWljQnl0ZXMpIHsKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyYBAgADMRtBACQxGRREMRhEggMEh2m3mgTxSInXBNTJfJw2GgCOAwAJAFoAcgAxGRQxGBQQQzYaATYaAklLAlCABAtjJe1LAVBJsEmwgAREHizYTwJQsEmwsElLAVBLAlCABDiMwS1MUEmwsIACAAJLAVBMUChPAlBMUIAECHVODExQsIEBQzYaASg2GgJQTFCABKMTwGZMUEmwsIEBQzYaATYaAksBFYEECBZXBgKAAgAETFBPAlBMUIAERSTh3UxQsIEBQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 1
        }
    },
    "events": [
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "uint8",
                    "name": "a"
                },
                {
                    "type": "uint8",
                    "name": "b"
                }
            ]
        },
        {
            "name": "SwappedArc4",
            "args": [
                {
                    "type": "uint8",
                    "name": "a"
                },
                {
                    "type": "uint8",
                    "name": "b"
                }
            ]
        },
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "uint8",
                    "name": "0"
                },
                {
                    "type": "uint8",
                    "name": "1"
                }
            ]
        },
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "(uint8,uint8)",
                    "name": "0"
                },
                {
                    "type": "uint8",
                    "name": "1"
                }
            ]
        },
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "uint8[]",
                    "name": "0"
                },
                {
                    "type": "uint8",
                    "name": "1"
                }
            ]
        },
        {
            "name": "Custom",
            "args": [
                {
                    "type": "string",
                    "name": "0"
                },
                {
                    "type": "bool",
                    "name": "1"
                }
            ]
        },
        {
            "name": "DB",
            "args": [
                {
                    "type": "byte[]",
                    "name": "0"
                },
                {
                    "type": "byte[]",
                    "name": "1"
                }
            ]
        }
    ],
    "templateVariables": {}
}
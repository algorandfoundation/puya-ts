main @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@7
    block@2: // abi_routing_L4
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "test((uint64,byte[],bool))void" => block@3, method "init()void" => block@4, * => block@11}
    block@3: // test_route_L5
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        let tmp%7#0: bytes = (txna ApplicationArgs 1)
        let item0%0%0#0: uint64 = (extract_uint64 tmp%7#0 0u)
        let item_start_offset%0#0: uint64 = (extract_uint16 tmp%7#0 8u)
        let item_end_offset%0#0: uint64 = (len tmp%7#0)
        let item1%0#0: bytes = (substring3 tmp%7#0 item_start_offset%0#0 item_end_offset%0#0)
        let item1%0%0#0: bytes = ((extract 2 0) item1%0#0)
        let is_true%0#0: uint64 = (getbit tmp%7#0 80u)
        let encoded_bool%0#0: bytes[1] = (setbit 0x00 0u is_true%0#0)
        let item2%0%0#0: bool = (getbit encoded_bool%0#0 0u)
        tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test(item0%0%0#0, item1%0%0#0, item2%0%0#0)
        let tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#0: bool = 1u
        goto block@12
    block@4: // init_route_L9
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (! tmp%8#0)
        (assert tmp%9#0) // OnCompletion is not NoOp
        let tmp%10#0: uint64 = (txn ApplicationID)
        (assert tmp%10#0) // can only call when not creating
        tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.init()
        let tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#1: bool = 1u
        goto block@12
    block@7: // bare_routing_L4
        let tmp%12#0: uint64 = (txn OnCompletion)
        goto tmp%12#0 ? block@11 : block@8
    block@8: // __algots__.defaultCreate_L4
        let tmp%13#0: uint64 = (txn ApplicationID)
        let tmp%14#0: bool = (! tmp%13#0)
        (assert tmp%14#0) // can only call when creating
        let tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#2: bool = 1u
        goto block@12
    block@11: // after_if_else_L4
        let tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#3: bool = 0u
        goto block@12
    block@12: // after_inlined_tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router___L1
        let tmp%0#0: bool = Ï†(tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#0 <- block@3, tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#1 <- block@4, tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#2 <- block@8, tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.__puya_arc4_router__%0#3 <- block@11)
        return tmp%0#0

subroutine tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test(p.a: uint64, p.b: bytes, p.c: bool) -> void:
    block@0: // L5
        let tmp%0#0: bytes = (itob p.a#0)
        let tmp%1#0: bytes = (concat tmp%0#0 p.b#0)
        let tmp%2#0: bytes = (itob p.c#0)
        let tmp%3#0: bytes = (concat tmp%1#0 tmp%2#0)
        (log tmp%3#0)
        return 

subroutine tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.init() -> void:
    block@0: // L9
        tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test(456u, "", 0u)
        tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test(2u, "Hello", 1u)
        return 
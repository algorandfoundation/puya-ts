#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 8 0 11
    // tests/approvals/destructured-params.algo.ts:8
    // export class DestructuredParamsAlgo extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@10
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0xfefea766 0x34399db4 0x83f14748 // method "test((uint64,byte[],bool))void", method "testMutable((uint64,byte[],bool))void", method "init()void"
    txna ApplicationArgs 0
    match test testMutable init
    err

main___algots__.defaultCreate@10:
    // tests/approvals/destructured-params.algo.ts:8
    // export class DestructuredParamsAlgo extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    intc_0 // 1
    return


// tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test[routing]() -> void:
test:
    // tests/approvals/destructured-params.algo.ts:9
    // test({ a, b, c }: { a: uint64; b: bytes; c: boolean }): void {
    txna ApplicationArgs 1
    dup
    len
    dig 1
    intc_1 // 8
    extract_uint16 // on error: invalid tuple encoding
    dup
    intc_3 // 11
    ==
    assert // invalid tail pointer at index 1 of (uint64,(len+uint8[]),bool1)
    dig 2
    swap
    dig 2
    substring3
    intc_2 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    ==
    assert // invalid number of bytes for Object4B7314A9
    callsub tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test
    pop
    intc_0 // 1
    return


// tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.testMutable[routing]() -> void:
testMutable:
    // tests/approvals/destructured-params.algo.ts:13
    // testMutable({ a, b, c }: Arc4) {
    txna ApplicationArgs 1
    dup
    len
    dig 1
    intc_1 // 8
    extract_uint16 // on error: invalid tuple encoding
    dup
    intc_3 // 11
    ==
    assert // invalid tail pointer at index 1 of (uint64,(len+uint8[]),bool1)
    dig 2
    swap
    dig 2
    substring3
    dup
    intc_2 // 0
    extract_uint16 // on error: invalid array length header
    pushint 13 // 13
    +
    uncover 2
    ==
    assert // invalid number of bytes for Arc4
    dig 1
    extract 0 8
    uncover 2
    pushint 80 // 80
    getbit
    pushbytes 0x00
    intc_2 // 0
    uncover 2
    setbit
    // tests/approvals/destructured-params.algo.ts:14
    // log(a, b, c)
    swap
    uncover 2
    concat
    swap
    concat
    log
    // tests/approvals/destructured-params.algo.ts:13
    // testMutable({ a, b, c }: Arc4) {
    intc_0 // 1
    return


// tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.init[routing]() -> void:
init:
    // tests/approvals/destructured-params.algo.ts:18
    // this.test({ a: 456, b: Bytes(''), c: false })
    pushbytes 0x00000000000001c8000b000000
    callsub tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test
    pop
    // tests/approvals/destructured-params.algo.ts:19
    // const temp = { a: Uint64(2), b: Bytes('Hello'), c: true }
    pushbytes 0x0000000000000002000b80000548656c6c6f
    // tests/approvals/destructured-params.algo.ts:20
    // this.test(temp)
    callsub tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test
    pop
    // tests/approvals/destructured-params.algo.ts:17
    // init() {
    intc_0 // 1
    return


// tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test(p: bytes) -> bytes:
tests/approvals/destructured-params.algo.ts::DestructuredParamsAlgo.test:
    // tests/approvals/destructured-params.algo.ts:9
    // test({ a, b, c }: { a: uint64; b: bytes; c: boolean }): void {
    proto 1 1
    frame_dig -1
    extract 0 8
    frame_dig -1
    intc_1 // 8
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    cover 2
    substring3
    extract 2 0
    frame_dig -1
    pushint 80 // 80
    getbit
    // tests/approvals/destructured-params.algo.ts:10
    // log(a, b, c)
    cover 2
    concat
    swap
    itob
    concat
    log
    frame_dig -1
    retsub

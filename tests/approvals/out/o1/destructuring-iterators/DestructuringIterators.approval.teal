#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1 2
    // tests/approvals/destructuring-iterators.algo.ts:17
    // class DestructuringIterators extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@5
    pushbytes 0xa78000de // method "test()void"
    txna ApplicationArgs 0
    match main_test_route@3
    err

main_test_route@3:
    // tests/approvals/destructuring-iterators.algo.ts:18
    // test() {
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    b test

main___algots__.defaultCreate@5:
    // tests/approvals/destructuring-iterators.algo.ts:17
    // class DestructuringIterators extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// tests/approvals/destructuring-iterators.algo.ts::DestructuringIterators.test[routing]() -> void:
test:
    // tests/approvals/destructuring-iterators.algo.ts:10
    // let total: uint64 = 0
    intc_0 // 0
    // tests/approvals/destructuring-iterators.algo.ts:6
    // { a: Uint64(1), b: Uint64(2) },
    intc_1 // 1
    intc_0 // 0

test_for_body@2:
    // tests/approvals/destructuring-iterators.algo.ts:12
    // total += a
    dig 2
    uncover 2
    +
    bury 2
    // tests/approvals/destructuring-iterators.algo.ts:11
    // for (const { a } of items) {
    switch test_for_header_1@3 test_for_header_2@4
    // tests/approvals/destructuring-iterators.algo.ts:14
    // assert(total === 6)
    dup
    pushint 6 // 6
    ==
    // tests/approvals/destructuring-iterators.algo.ts:18
    // test() {
    return

test_for_header_2@4:
    // tests/approvals/destructuring-iterators.algo.ts:8
    // { a: Uint64(3), b: Uint64(2) },
    pushint 3 // 3
    intc_2 // 2
    b test_for_body@2

test_for_header_1@3:
    // tests/approvals/destructuring-iterators.algo.ts:7
    // { a: Uint64(2), b: Uint64(2) },
    intc_2 // 2
    intc_1 // 1
    b test_for_body@2

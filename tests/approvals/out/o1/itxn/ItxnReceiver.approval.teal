#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1
    // tests/approvals/itxn.algo.ts:226
    // class ItxnReceiver extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@5
    pushbytes 0x1971d197 // method "receivePay(uint64,pay,string)(uint64,uint64,string)"
    txna ApplicationArgs 0
    match main_receivePay_route@3
    err

main_receivePay_route@3:
    // tests/approvals/itxn.algo.ts:227
    // public receivePay(a: uint64, b: gtxn.PaymentTxn, c: string): [uint64, uint64, string] {
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    b receivePay

main___algots__.defaultCreate@5:
    // tests/approvals/itxn.algo.ts:226
    // class ItxnReceiver extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    intc_0 // 1
    return


// tests/approvals/itxn.algo.ts::ItxnReceiver.receivePay[routing]() -> void:
receivePay:
    // tests/approvals/itxn.algo.ts:227
    // public receivePay(a: uint64, b: gtxn.PaymentTxn, c: string): [uint64, uint64, string] {
    txna ApplicationArgs 1
    dup
    len
    pushint 8 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    txn GroupIndex
    intc_0 // 1
    -
    dup
    gtxns TypeEnum
    intc_0 // pay
    ==
    assert // transaction type is pay
    txna ApplicationArgs 2
    dup
    pushint 0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 2 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    // tests/approvals/itxn.algo.ts:228
    // return [a, b.amount, c]
    swap
    gtxns Amount
    uncover 2
    itob
    swap
    itob
    concat
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    swap
    pushbytes 0x0012
    concat
    swap
    concat
    // tests/approvals/itxn.algo.ts:227
    // public receivePay(a: uint64, b: gtxn.PaymentTxn, c: string): [uint64, uint64, string] {
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

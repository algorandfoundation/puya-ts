#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock 0x2a337771
    // tests/approvals/circular-reference.algo.ts:6
    // export class ContractOne extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    bytec_0 // method "test(uint64)void"
    txna ApplicationArgs 0
    match main_test_route@3

main_after_if_else@10:
    err

main_test_route@3:
    // tests/approvals/circular-reference.algo.ts:7
    // test(appId: Application) {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/approvals/circular-reference.algo.ts:6
    // export class ContractOne extends Contract {
    txna ApplicationArgs 1
    btoi
    // tests/approvals/circular-reference.algo.ts:7
    // test(appId: Application) {
    callsub test
    pushint 1 // 1
    return

main_bare_routing@6:
    // tests/approvals/circular-reference.algo.ts:6
    // export class ContractOne extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// tests/approvals/circular-reference.algo.ts::ContractOne.test(appId: uint64) -> void:
test:
    // tests/approvals/circular-reference.algo.ts:7
    // test(appId: Application) {
    proto 1 0
    // tests/approvals/circular-reference.algo.ts:8
    // abiCall<typeof ContractTwo.prototype.test>({ appId })
    itxn_begin
    bytec_0 // method "test(uint64)void"
    itxn_field ApplicationArgs
    frame_dig -1
    itxn_field ApplicationID
    pushint 6 // appl
    itxn_field TypeEnum
    pushint 0 // 0
    itxn_field Fee
    itxn_submit
    retsub

#pragma version 10

tests/approvals/arc28-events.algo.ts::EventEmitter.approvalProgram:
    intcblock 0 1
    bytecblock 0x 0x1ccbd925
    callsub __puya_arc4_router__
    return


// tests/approvals/arc28-events.algo.ts::EventEmitter.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    proto 0 1
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __puya_arc4_router___bare_routing@6
    txna ApplicationArgs 0
    pushbytes 0xd43cee5d // method "emitSwapped(uint64,uint64)void"
    pushbytes 0xf14889d7 // method "emitCustom(string,bool)void"
    uncover 2
    match __puya_arc4_router___emitSwapped_route@2 __puya_arc4_router___emitCustom_route@3
    b __puya_arc4_router___switch_case_default@4

__puya_arc4_router___emitSwapped_route@2:
    // tests/approvals/arc28-events.algo.ts:13
    // emitSwapped(a: uint64, b: uint64) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/approvals/arc28-events.algo.ts:13
    // emitSwapped(a: uint64, b: uint64) {
    callsub emitSwapped
    intc_1 // 1
    retsub

__puya_arc4_router___emitCustom_route@3:
    // tests/approvals/arc28-events.algo.ts:28
    // emitCustom(arg0: string, arg1: boolean) {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    intc_0 // 0
    getbit
    // tests/approvals/arc28-events.algo.ts:28
    // emitCustom(arg0: string, arg1: boolean) {
    callsub emitCustom
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@4:
    b __puya_arc4_router___after_if_else@10

__puya_arc4_router___bare_routing@6:
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match __puya_arc4_router_____algots__.defaultCreate@7
    b __puya_arc4_router___switch_case_default@8

__puya_arc4_router_____algots__.defaultCreate@7:
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@8:

__puya_arc4_router___after_if_else@10:
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    intc_0 // 0
    retsub


// tests/approvals/arc28-events.algo.ts::EventEmitter.emitSwapped(a: uint64, b: uint64) -> void:
emitSwapped:
    // tests/approvals/arc28-events.algo.ts:13
    // emitSwapped(a: uint64, b: uint64) {
    proto 2 0
    // tests/approvals/arc28-events.algo.ts:14
    // emit<Swapped>({ a: b, b: a })
    frame_dig -1
    itob
    frame_dig -2
    itob
    swap
    bytec_0 // 0x
    swap
    concat
    swap
    concat
    bytec_1 // method "Swapped(uint64,uint64)"
    swap
    concat
    log
    // tests/approvals/arc28-events.algo.ts:16
    // const x: Swapped = { a: b, b: a }
    frame_dig -1
    frame_dig -2
    swap
    itob
    swap
    itob
    swap
    // tests/approvals/arc28-events.algo.ts:17
    // emit(x)
    bytec_0 // 0x
    swap
    concat
    swap
    concat
    bytec_1 // method "Swapped(uint64,uint64)"
    swap
    concat
    log
    // tests/approvals/arc28-events.algo.ts:20
    // a: new UintN64(b),
    frame_dig -1
    itob
    // tests/approvals/arc28-events.algo.ts:21
    // b: new UintN64(a),
    frame_dig -2
    itob
    swap
    // tests/approvals/arc28-events.algo.ts:19-22
    // const y = new SwappedArc4({
    //   a: new UintN64(b),
    //   b: new UintN64(a),
    // })
    bytec_0 // 0x
    swap
    concat
    swap
    concat
    // tests/approvals/arc28-events.algo.ts:23
    // emit(y)
    pushbytes 0xbbab7378 // method "SwappedArc4(uint64,uint64)"
    swap
    concat
    log
    // tests/approvals/arc28-events.algo.ts:25
    // emit('Swapped', b, a)
    frame_dig -1
    itob
    frame_dig -2
    itob
    swap
    bytec_0 // 0x
    swap
    concat
    swap
    concat
    bytec_1 // method "Swapped(uint64,uint64)"
    swap
    concat
    log
    retsub


// tests/approvals/arc28-events.algo.ts::EventEmitter.emitCustom(arg0: bytes, arg1: uint64) -> void:
emitCustom:
    // tests/approvals/arc28-events.algo.ts:28
    // emitCustom(arg0: string, arg1: boolean) {
    proto 2 0
    // tests/approvals/arc28-events.algo.ts:29
    // emit('Custom', arg0, arg1)
    frame_dig -2
    len
    itob
    extract 6 2
    frame_dig -2
    concat
    pushbytes 0x00
    intc_0 // 0
    frame_dig -1
    setbit
    pushint 3 // 3
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    swap
    concat
    swap
    concat
    pushbytes 0xa313c066 // method "Custom(string,bool)"
    swap
    concat
    log
    retsub


// tests/approvals/arc28-events.algo.ts::EventEmitter.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    // tests/approvals/arc28-events.algo.ts:12
    // class EventEmitter extends Contract {
    proto 0 0
    retsub

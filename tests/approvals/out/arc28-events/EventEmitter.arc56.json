{
    "name": "EventEmitter",
    "structs": {},
    "methods": [
        {
            "name": "emitSwapped",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "a"
                        },
                        {
                            "type": "uint64",
                            "name": "b"
                        }
                    ]
                },
                {
                    "name": "SwappedArc4",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "a"
                        },
                        {
                            "type": "uint64",
                            "name": "b"
                        }
                    ]
                },
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "0"
                        },
                        {
                            "type": "uint64",
                            "name": "1"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "emitCustom",
            "args": [
                {
                    "type": "string",
                    "name": "arg0"
                },
                {
                    "type": "bool",
                    "name": "arg1"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Custom",
                    "args": [
                        {
                            "type": "string",
                            "name": "0"
                        },
                        {
                            "type": "bool",
                            "name": "1"
                        }
                    ]
                }
            ],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        57,
                        80
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        120
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        62,
                        85
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5hcHByb3ZhbFByb2dyYW06CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrIDB4IDB4MWNjYmQ5MjUKICAgIGNhbGxzdWIgX19wdXlhX2FyYzRfcm91dGVyX18KICAgIHJldHVybgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLl9fcHV5YV9hcmM0X3JvdXRlcl9fKCkgLT4gdWludDY0OgpfX3B1eWFfYXJjNF9yb3V0ZXJfXzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMgogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgcHJvdG8gMCAxCiAgICB0eG4gTnVtQXBwQXJncwogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBieiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19iYXJlX3JvdXRpbmdANgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgcHVzaGJ5dGVzIDB4ZDQzY2VlNWQgLy8gbWV0aG9kICJlbWl0U3dhcHBlZCh1aW50NjQsdWludDY0KXZvaWQiCiAgICBwdXNoYnl0ZXMgMHhmMTQ4ODlkNyAvLyBtZXRob2QgImVtaXRDdXN0b20oc3RyaW5nLGJvb2wpdm9pZCIKICAgIHVuY292ZXIgMgogICAgbWF0Y2ggX19wdXlhX2FyYzRfcm91dGVyX19fZW1pdFN3YXBwZWRfcm91dGVAMiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19lbWl0Q3VzdG9tX3JvdXRlQDMKICAgIGIgX19wdXlhX2FyYzRfcm91dGVyX19fc3dpdGNoX2Nhc2VfZGVmYXVsdEA0CgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19lbWl0U3dhcHBlZF9yb3V0ZUAyOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEzCiAgICAvLyBlbWl0U3dhcHBlZChhOiB1aW50NjQsIGI6IHVpbnQ2NCkgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIE5vT3AKICAgID09CiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEyCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICBidG9pCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTMKICAgIC8vIGVtaXRTd2FwcGVkKGE6IHVpbnQ2NCwgYjogdWludDY0KSB7CiAgICBjYWxsc3ViIGVtaXRTd2FwcGVkCiAgICBpbnRjXzEgLy8gMQogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19lbWl0Q3VzdG9tX3JvdXRlQDM6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MjgKICAgIC8vIGVtaXRDdXN0b20oYXJnMDogc3RyaW5nLCBhcmcxOiBib29sZWFuKSB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gTm9PcAogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBpbnRjXzAgLy8gMAogICAgIT0KICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTIKICAgIC8vIGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICBpbnRjXzAgLy8gMAogICAgZ2V0Yml0CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MjgKICAgIC8vIGVtaXRDdXN0b20oYXJnMDogc3RyaW5nLCBhcmcxOiBib29sZWFuKSB7CiAgICBjYWxsc3ViIGVtaXRDdXN0b20KICAgIGludGNfMSAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX3N3aXRjaF9jYXNlX2RlZmF1bHRANDoKICAgIGIgX19wdXlhX2FyYzRfcm91dGVyX19fYWZ0ZXJfaWZfZWxzZUAxMAoKX19wdXlhX2FyYzRfcm91dGVyX19fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTIKICAgIC8vIGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGludGNfMCAvLyAwCiAgICBzd2FwCiAgICBtYXRjaCBfX3B1eWFfYXJjNF9yb3V0ZXJfX19fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVANwogICAgYiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19zd2l0Y2hfY2FzZV9kZWZhdWx0QDgKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA3OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEyCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgID09CiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBjYWxsc3ViIF9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZQogICAgaW50Y18xIC8vIDEKICAgIHJldHN1YgoKX19wdXlhX2FyYzRfcm91dGVyX19fc3dpdGNoX2Nhc2VfZGVmYXVsdEA4OgoKX19wdXlhX2FyYzRfcm91dGVyX19fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMgogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18wIC8vIDAKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLmVtaXRTd2FwcGVkKGE6IHVpbnQ2NCwgYjogdWludDY0KSAtPiB2b2lkOgplbWl0U3dhcHBlZDoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMwogICAgLy8gZW1pdFN3YXBwZWQoYTogdWludDY0LCBiOiB1aW50NjQpIHsKICAgIHByb3RvIDIgMAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjE0CiAgICAvLyBlbWl0PFN3YXBwZWQ+KHsgYTogYiwgYjogYSB9KQogICAgZnJhbWVfZGlnIC0xCiAgICBpdG9iCiAgICBmcmFtZV9kaWcgLTIKICAgIGl0b2IKICAgIHN3YXAKICAgIGJ5dGVjXzAgLy8gMHgKICAgIHN3YXAKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBieXRlY18xIC8vIG1ldGhvZCAiU3dhcHBlZCh1aW50NjQsdWludDY0KSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTYKICAgIC8vIGNvbnN0IHg6IFN3YXBwZWQgPSB7IGE6IGIsIGI6IGEgfQogICAgZnJhbWVfZGlnIC0xCiAgICBmcmFtZV9kaWcgLTIKICAgIHN3YXAKICAgIGl0b2IKICAgIHN3YXAKICAgIGl0b2IKICAgIHN3YXAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxNwogICAgLy8gZW1pdCh4KQogICAgYnl0ZWNfMCAvLyAweAogICAgc3dhcAogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ5dGVjXzEgLy8gbWV0aG9kICJTd2FwcGVkKHVpbnQ2NCx1aW50NjQpIgogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoyMAogICAgLy8gYTogbmV3IFVpbnRONjQoYiksCiAgICBmcmFtZV9kaWcgLTEKICAgIGl0b2IKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoyMQogICAgLy8gYjogbmV3IFVpbnRONjQoYSksCiAgICBmcmFtZV9kaWcgLTIKICAgIGl0b2IKICAgIHN3YXAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxOS0yMgogICAgLy8gY29uc3QgeSA9IG5ldyBTd2FwcGVkQXJjNCh7CiAgICAvLyAgIGE6IG5ldyBVaW50TjY0KGIpLAogICAgLy8gICBiOiBuZXcgVWludE42NChhKSwKICAgIC8vIH0pCiAgICBieXRlY18wIC8vIDB4CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjIzCiAgICAvLyBlbWl0KHkpCiAgICBwdXNoYnl0ZXMgMHhiYmFiNzM3OCAvLyBtZXRob2QgIlN3YXBwZWRBcmM0KHVpbnQ2NCx1aW50NjQpIgogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoyNQogICAgLy8gZW1pdCgnU3dhcHBlZCcsIGIsIGEpCiAgICBmcmFtZV9kaWcgLTEKICAgIGl0b2IKICAgIGZyYW1lX2RpZyAtMgogICAgaXRvYgogICAgc3dhcAogICAgYnl0ZWNfMCAvLyAweAogICAgc3dhcAogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ5dGVjXzEgLy8gbWV0aG9kICJTd2FwcGVkKHVpbnQ2NCx1aW50NjQpIgogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLmVtaXRDdXN0b20oYXJnMDogYnl0ZXMsIGFyZzE6IHVpbnQ2NCkgLT4gdm9pZDoKZW1pdEN1c3RvbToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoyOAogICAgLy8gZW1pdEN1c3RvbShhcmcwOiBzdHJpbmcsIGFyZzE6IGJvb2xlYW4pIHsKICAgIHByb3RvIDIgMAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjI5CiAgICAvLyBlbWl0KCdDdXN0b20nLCBhcmcwLCBhcmcxKQogICAgZnJhbWVfZGlnIC0yCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBmcmFtZV9kaWcgLTIKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4MDAKICAgIGludGNfMCAvLyAwCiAgICBmcmFtZV9kaWcgLTEKICAgIHNldGJpdAogICAgcHVzaGludCAzIC8vIDMKICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBieXRlY18wIC8vIDB4CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHhhMzEzYzA2NiAvLyBtZXRob2QgIkN1c3RvbShzdHJpbmcsYm9vbCkiCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgcmV0c3ViCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjpFdmVudEVtaXR0ZXIuX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlKCkgLT4gdm9pZDoKX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEyCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICBwcm90byAwIDAKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5jbGVhclN0YXRlUHJvZ3JhbToKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "events": [
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ]
        },
        {
            "name": "SwappedArc4",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ]
        },
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "uint64",
                    "name": "0"
                },
                {
                    "type": "uint64",
                    "name": "1"
                }
            ]
        },
        {
            "name": "Custom",
            "args": [
                {
                    "type": "string",
                    "name": "0"
                },
                {
                    "type": "bool",
                    "name": "1"
                }
            ]
        }
    ],
    "templateVariables": {}
}
{
    "hints": {
        "emitSwapped(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "emitCustom(string,bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5hcHByb3ZhbFByb2dyYW06CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrIDB4IDB4MWNjYmQ5MjUKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDIKICAgIGNhbGxzdWIgY29uc3RydWN0b3IKCm1haW5fYWZ0ZXJfaWZfZWxzZUAyOgogICAgY2FsbHN1YiBfX3B1eWFfYXJjNF9yb3V0ZXJfXwogICAgcmV0dXJuCgoKLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjpFdmVudEVtaXR0ZXIuY29uc3RydWN0b3IoKSAtPiB2b2lkOgpjb25zdHJ1Y3RvcjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMgogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgcHJvdG8gMCAwCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5fX3B1eWFfYXJjNF9yb3V0ZXJfXygpIC0+IHVpbnQ2NDoKX19wdXlhX2FyYzRfcm91dGVyX186CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTIKICAgIC8vIGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIENvbnRyYWN0IHsKICAgIHByb3RvIDAgMQogICAgdHhuIE51bUFwcEFyZ3MKICAgIGludGNfMCAvLyAwCiAgICAhPQogICAgYnogX19wdXlhX2FyYzRfcm91dGVyX19fYmFyZV9yb3V0aW5nQDYKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIHB1c2hieXRlcyAweGQ0M2NlZTVkIC8vIG1ldGhvZCAiZW1pdFN3YXBwZWQodWludDY0LHVpbnQ2NCl2b2lkIgogICAgcHVzaGJ5dGVzIDB4ZjE0ODg5ZDcgLy8gbWV0aG9kICJlbWl0Q3VzdG9tKHN0cmluZyxib29sKXZvaWQiCiAgICB1bmNvdmVyIDIKICAgIG1hdGNoIF9fcHV5YV9hcmM0X3JvdXRlcl9fX2VtaXRTd2FwcGVkX3JvdXRlQDIgX19wdXlhX2FyYzRfcm91dGVyX19fZW1pdEN1c3RvbV9yb3V0ZUAzCiAgICBiIF9fcHV5YV9hcmM0X3JvdXRlcl9fX3N3aXRjaF9jYXNlX2RlZmF1bHRANAoKX19wdXlhX2FyYzRfcm91dGVyX19fZW1pdFN3YXBwZWRfcm91dGVAMjoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMwogICAgLy8gZW1pdFN3YXBwZWQoYTogdWludDY0LCBiOiB1aW50NjQpIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGludGNfMCAvLyBOb09wCiAgICA9PQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGludGNfMCAvLyAwCiAgICAhPQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMgogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEzCiAgICAvLyBlbWl0U3dhcHBlZChhOiB1aW50NjQsIGI6IHVpbnQ2NCkgewogICAgY2FsbHN1YiBlbWl0U3dhcHBlZAogICAgaW50Y18xIC8vIDEKICAgIHJldHN1YgoKX19wdXlhX2FyYzRfcm91dGVyX19fZW1pdEN1c3RvbV9yb3V0ZUAzOgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjI4CiAgICAvLyBlbWl0Q3VzdG9tKGFyZzA6IHN0cmluZywgYXJnMTogYm9vbGVhbikgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIE5vT3AKICAgID09CiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgaW50Y18wIC8vIDAKICAgICE9CiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEyCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBleHRyYWN0IDIgMAogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgaW50Y18wIC8vIDAKICAgIGdldGJpdAogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjI4CiAgICAvLyBlbWl0Q3VzdG9tKGFyZzA6IHN0cmluZywgYXJnMTogYm9vbGVhbikgewogICAgY2FsbHN1YiBlbWl0Q3VzdG9tCiAgICBpbnRjXzEgLy8gMQogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19zd2l0Y2hfY2FzZV9kZWZhdWx0QDQ6CiAgICBiIF9fcHV5YV9hcmM0X3JvdXRlcl9fX2FmdGVyX2lmX2Vsc2VAMTAKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2JhcmVfcm91dGluZ0A2OgogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjEyCiAgICAvLyBjbGFzcyBFdmVudEVtaXR0ZXIgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzAgLy8gMAogICAgc3dhcAogICAgbWF0Y2ggX19wdXlhX2FyYzRfcm91dGVyX19fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDcKICAgIGIgX19wdXlhX2FyYzRfcm91dGVyX19fc3dpdGNoX2Nhc2VfZGVmYXVsdEA4CgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19fX2FsZ290c19fLmRlZmF1bHRDcmVhdGVANzoKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMgogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGludGNfMCAvLyAwCiAgICA9PQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgY2FsbHN1YiBfX2FsZ290c19fLmRlZmF1bHRDcmVhdGUKICAgIGludGNfMSAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX3N3aXRjaF9jYXNlX2RlZmF1bHRAODoKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2FmdGVyX2lmX2Vsc2VAMTA6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTIKICAgIC8vIGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5lbWl0U3dhcHBlZChhOiB1aW50NjQsIGI6IHVpbnQ2NCkgLT4gdm9pZDoKZW1pdFN3YXBwZWQ6CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTMKICAgIC8vIGVtaXRTd2FwcGVkKGE6IHVpbnQ2NCwgYjogdWludDY0KSB7CiAgICBwcm90byAyIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxNAogICAgLy8gZW1pdDxTd2FwcGVkPih7IGE6IGIsIGI6IGEgfSkKICAgIGZyYW1lX2RpZyAtMQogICAgaXRvYgogICAgZnJhbWVfZGlnIC0yCiAgICBpdG9iCiAgICBzd2FwCiAgICBieXRlY18wIC8vIDB4CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgYnl0ZWNfMSAvLyBtZXRob2QgIlN3YXBwZWQodWludDY0LHVpbnQ2NCkiCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgLy8gdGVzdHMvYXBwcm92YWxzL2FyYzI4LWV2ZW50cy5hbGdvLnRzOjE2CiAgICAvLyBjb25zdCB4OiBTd2FwcGVkID0geyBhOiBiLCBiOiBhIH0KICAgIGZyYW1lX2RpZyAtMQogICAgZnJhbWVfZGlnIC0yCiAgICBzd2FwCiAgICBpdG9iCiAgICBzd2FwCiAgICBpdG9iCiAgICBzd2FwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTcKICAgIC8vIGVtaXQoeCkKICAgIGJ5dGVjXzAgLy8gMHgKICAgIHN3YXAKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBieXRlY18xIC8vIG1ldGhvZCAiU3dhcHBlZCh1aW50NjQsdWludDY0KSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MjAKICAgIC8vIGE6IG5ldyBVaW50TjY0KGIpLAogICAgZnJhbWVfZGlnIC0xCiAgICBpdG9iCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MjEKICAgIC8vIGI6IG5ldyBVaW50TjY0KGEpLAogICAgZnJhbWVfZGlnIC0yCiAgICBpdG9iCiAgICBzd2FwCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MTktMjIKICAgIC8vIGNvbnN0IHkgPSBuZXcgU3dhcHBlZEFyYzQoewogICAgLy8gICBhOiBuZXcgVWludE42NChiKSwKICAgIC8vICAgYjogbmV3IFVpbnRONjQoYSksCiAgICAvLyB9KQogICAgYnl0ZWNfMCAvLyAweAogICAgc3dhcAogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoyMwogICAgLy8gZW1pdCh5KQogICAgcHVzaGJ5dGVzIDB4YmJhYjczNzggLy8gbWV0aG9kICJTd2FwcGVkQXJjNCh1aW50NjQsdWludDY0KSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MjUKICAgIC8vIGVtaXQoJ1N3YXBwZWQnLCBiLCBhKQogICAgZnJhbWVfZGlnIC0xCiAgICBpdG9iCiAgICBmcmFtZV9kaWcgLTIKICAgIGl0b2IKICAgIHN3YXAKICAgIGJ5dGVjXzAgLy8gMHgKICAgIHN3YXAKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBieXRlY18xIC8vIG1ldGhvZCAiU3dhcHBlZCh1aW50NjQsdWludDY0KSIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICByZXRzdWIKCgovLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5lbWl0Q3VzdG9tKGFyZzA6IGJ5dGVzLCBhcmcxOiB1aW50NjQpIC0+IHZvaWQ6CmVtaXRDdXN0b206CiAgICAvLyB0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6MjgKICAgIC8vIGVtaXRDdXN0b20oYXJnMDogc3RyaW5nLCBhcmcxOiBib29sZWFuKSB7CiAgICBwcm90byAyIDAKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoyOQogICAgLy8gZW1pdCgnQ3VzdG9tJywgYXJnMCwgYXJnMSkKICAgIGZyYW1lX2RpZyAtMgogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgZnJhbWVfZGlnIC0yCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDAwCiAgICBpbnRjXzAgLy8gMAogICAgZnJhbWVfZGlnIC0xCiAgICBzZXRiaXQKICAgIHB1c2hpbnQgMyAvLyAzCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgYnl0ZWNfMCAvLyAweAogICAgc3dhcAogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4YTMxM2MwNjYgLy8gbWV0aG9kICJDdXN0b20oc3RyaW5nLGJvb2wpIgogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIHJldHN1YgoKCi8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czo6RXZlbnRFbWl0dGVyLl9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZSgpIC0+IHZvaWQ6Cl9fYWxnb3RzX18uZGVmYXVsdENyZWF0ZToKICAgIC8vIHRlc3RzL2FwcHJvdmFscy9hcmMyOC1ldmVudHMuYWxnby50czoxMgogICAgLy8gY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgQ29udHJhY3QgewogICAgcHJvdG8gMCAwCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcHByb3ZhbHMvYXJjMjgtZXZlbnRzLmFsZ28udHM6OkV2ZW50RW1pdHRlci5jbGVhclN0YXRlUHJvZ3JhbToKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "EventEmitter",
        "methods": [
            {
                "name": "emitSwapped",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "emitCustom",
                "args": [
                    {
                        "type": "string",
                        "name": "arg0"
                    },
                    {
                        "type": "bool",
                        "name": "arg1"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
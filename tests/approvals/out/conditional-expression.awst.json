[
{
  "_type": "Subroutine",
  "sourceLocation": "tests/approvals/conditional-expression.algo.ts[3:0-12:1]",
  "name": "test",
  "moduleName": "tests/approvals/conditional-expression.algo.ts",
  "args": [
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/conditional-expression.algo.ts[3:14-3:23]",
      "name": "x",
      "wtype": "uint64"
    },
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/conditional-expression.algo.ts[3:25-3:34]",
      "name": "y",
      "wtype": "uint64"
    }
  ],
  "returnType": "bool",
  "body": {
    "_type": "Block",
    "sourceLocation": "tests/approvals/conditional-expression.algo.ts[3:36-12:1]",
    "body": [
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:8-4:39]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:8-4:9]",
          "wtype": "uint64",
          "name": "a"
        },
        "value": {
          "_type": "UInt64BinaryOperation",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:20-4:39]",
          "wtype": "uint64",
          "left": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:21-4:34]",
            "wtype": "uint64",
            "condition": {
              "_type": "NumericComparisonExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:21-4:26]",
              "wtype": "bool",
              "lhs": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:21-4:22]",
                "wtype": "uint64",
                "name": "x"
              },
              "operator": "<",
              "rhs": {
                "_type": "IntegerConstant",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:25-4:26]",
                "wtype": "uint64",
                "value": "4n"
              }
            },
            "trueExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:29-4:30]",
              "wtype": "uint64",
              "name": "x"
            },
            "falseExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:33-4:34]",
              "wtype": "uint64",
              "name": "y"
            }
          },
          "op": "+",
          "right": {
            "_type": "VarExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[4:38-4:39]",
            "wtype": "uint64",
            "name": "x"
          }
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:8-5:33]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:8-5:9]",
          "wtype": "uint64",
          "name": "b"
        },
        "value": {
          "_type": "ConditionalExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:20-5:33]",
          "wtype": "uint64",
          "condition": {
            "_type": "ReinterpretCast",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:20-5:25]",
            "wtype": "bool",
            "expr": {
              "_type": "UInt64BinaryOperation",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:20-5:25]",
              "wtype": "uint64",
              "left": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:20-5:21]",
                "wtype": "uint64",
                "name": "y"
              },
              "op": "%",
              "right": {
                "_type": "IntegerConstant",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:24-5:25]",
                "wtype": "uint64",
                "value": "2n"
              }
            }
          },
          "trueExpr": {
            "_type": "IntegerConstant",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:28-5:29]",
            "wtype": "uint64",
            "value": "2n"
          },
          "falseExpr": {
            "_type": "IntegerConstant",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[5:32-5:33]",
            "wtype": "uint64",
            "value": "1n"
          }
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:8-6:48]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:8-6:9]",
          "wtype": "uint64",
          "name": "c"
        },
        "value": {
          "_type": "ConditionalExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:20-6:48]",
          "wtype": "uint64",
          "condition": {
            "_type": "NumericComparisonExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:20-6:25]",
            "wtype": "bool",
            "lhs": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:20-6:21]",
              "wtype": "uint64",
              "name": "x"
            },
            "operator": ">",
            "rhs": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:24-6:25]",
              "wtype": "uint64",
              "name": "y"
            }
          },
          "trueExpr": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:29-6:43]",
            "wtype": "uint64",
            "condition": {
              "_type": "NumericComparisonExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:29-6:35]",
              "wtype": "bool",
              "lhs": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:29-6:30]",
                "wtype": "uint64",
                "name": "y"
              },
              "operator": ">",
              "rhs": {
                "_type": "IntegerConstant",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:33-6:35]",
                "wtype": "uint64",
                "value": "10n"
              }
            },
            "trueExpr": {
              "_type": "IntegerConstant",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:38-6:39]",
              "wtype": "uint64",
              "value": "3n"
            },
            "falseExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:42-6:43]",
              "wtype": "uint64",
              "name": "y"
            }
          },
          "falseExpr": {
            "_type": "VarExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[6:47-6:48]",
            "wtype": "uint64",
            "name": "x"
          }
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:8-7:59]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:8-7:9]",
          "wtype": "uint64",
          "name": "d"
        },
        "value": {
          "_type": "UInt64BinaryOperation",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:20-7:59]",
          "wtype": "uint64",
          "left": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:27-7:40]",
            "wtype": "uint64",
            "condition": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:27-7:32]",
              "wtype": "bool",
              "expr": {
                "_type": "UInt64BinaryOperation",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:27-7:32]",
                "wtype": "uint64",
                "left": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:27-7:28]",
                  "wtype": "uint64",
                  "name": "y"
                },
                "op": "%",
                "right": {
                  "_type": "IntegerConstant",
                  "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:31-7:32]",
                  "wtype": "uint64",
                  "value": "2n"
                }
              }
            },
            "trueExpr": {
              "_type": "IntegerConstant",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:35-7:36]",
              "wtype": "uint64",
              "value": "2n"
            },
            "falseExpr": {
              "_type": "IntegerConstant",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:39-7:40]",
              "wtype": "uint64",
              "value": "1n"
            }
          },
          "op": "+",
          "right": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:45-7:58]",
            "wtype": "uint64",
            "condition": {
              "_type": "NumericComparisonExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:45-7:50]",
              "wtype": "bool",
              "lhs": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:45-7:46]",
                "wtype": "uint64",
                "name": "x"
              },
              "operator": "<",
              "rhs": {
                "_type": "IntegerConstant",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:49-7:50]",
                "wtype": "uint64",
                "value": "4n"
              }
            },
            "trueExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:53-7:54]",
              "wtype": "uint64",
              "name": "x"
            },
            "falseExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[7:57-7:58]",
              "wtype": "uint64",
              "name": "y"
            }
          }
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:8-8:26]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:8-8:9]",
          "wtype": "uint64",
          "name": "e"
        },
        "value": {
          "_type": "ConditionalExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:20-8:26]",
          "wtype": "uint64",
          "condition": {
            "_type": "ReinterpretCast",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:20-8:21]",
            "wtype": "bool",
            "expr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:20-8:21]",
              "wtype": "uint64",
              "name": "x"
            }
          },
          "trueExpr": {
            "_type": "VarExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:20-8:21]",
            "wtype": "uint64",
            "name": "x"
          },
          "falseExpr": {
            "_type": "IntegerConstant",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[8:25-8:26]",
            "wtype": "uint64",
            "value": "4n"
          }
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:8-9:62]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:8-9:9]",
          "wtype": "bool",
          "name": "f"
        },
        "value": {
          "_type": "NumericComparisonExpression",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:21-9:62]",
          "wtype": "bool",
          "lhs": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:28-9:41]",
            "wtype": "uint64",
            "condition": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:28-9:33]",
              "wtype": "bool",
              "expr": {
                "_type": "UInt64BinaryOperation",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:28-9:33]",
                "wtype": "uint64",
                "left": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:28-9:29]",
                  "wtype": "uint64",
                  "name": "y"
                },
                "op": "%",
                "right": {
                  "_type": "IntegerConstant",
                  "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:32-9:33]",
                  "wtype": "uint64",
                  "value": "2n"
                }
              }
            },
            "trueExpr": {
              "_type": "IntegerConstant",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:36-9:37]",
              "wtype": "uint64",
              "value": "2n"
            },
            "falseExpr": {
              "_type": "IntegerConstant",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:40-9:41]",
              "wtype": "uint64",
              "value": "1n"
            }
          },
          "operator": "==",
          "rhs": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:48-9:61]",
            "wtype": "uint64",
            "condition": {
              "_type": "NumericComparisonExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:48-9:53]",
              "wtype": "bool",
              "lhs": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:48-9:49]",
                "wtype": "uint64",
                "name": "x"
              },
              "operator": "<",
              "rhs": {
                "_type": "IntegerConstant",
                "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:52-9:53]",
                "wtype": "uint64",
                "value": "4n"
              }
            },
            "trueExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:56-9:57]",
              "wtype": "uint64",
              "name": "x"
            },
            "falseExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/conditional-expression.algo.ts[9:60-9:61]",
              "wtype": "uint64",
              "name": "y"
            }
          }
        }
      },
      {
        "_type": "ReturnStatement",
        "sourceLocation": "tests/approvals/conditional-expression.algo.ts[11:2-11:13]",
        "value": {
          "_type": "BoolConstant",
          "sourceLocation": "tests/approvals/conditional-expression.algo.ts[11:9-11:13]",
          "wtype": "bool",
          "value": true
        }
      }
    ]
  }
}
]
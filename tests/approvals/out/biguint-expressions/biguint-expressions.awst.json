[
  {
    "_type": "Subroutine",
    "source_location": {
      "file": "tests/approvals/biguint-expressions.algo.ts",
      "line": 5,
      "end_line": 5,
      "column": 0,
      "end_column": 46
    },
    "args": [
      {
        "_type": "SubroutineArgument",
        "name": "a",
        "wtype": {
          "_type": "WType",
          "name": "uint64",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 2
        },
        "source_location": {
          "file": "tests/approvals/biguint-expressions.algo.ts",
          "line": 5,
          "end_line": 5,
          "column": 14,
          "end_column": 23
        }
      },
      {
        "_type": "SubroutineArgument",
        "name": "b",
        "wtype": {
          "_type": "WType",
          "name": "bool",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 2
        },
        "source_location": {
          "file": "tests/approvals/biguint-expressions.algo.ts",
          "line": 5,
          "end_line": 5,
          "column": 25,
          "end_column": 35
        }
      },
      {
        "_type": "SubroutineArgument",
        "name": "c",
        "wtype": {
          "_type": "WType",
          "name": "bytes",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": 1
        },
        "source_location": {
          "file": "tests/approvals/biguint-expressions.algo.ts",
          "line": 5,
          "end_line": 5,
          "column": 37,
          "end_column": 45
        }
      }
    ],
    "return_type": {
      "_type": "WType",
      "name": "void",
      "immutable": true,
      "ephemeral": false,
      "scalar_type": null
    },
    "body": {
      "_type": "Block",
      "source_location": {
        "file": "tests/approvals/biguint-expressions.algo.ts",
        "line": 5,
        "end_line": 19,
        "column": 47,
        "end_column": 1
      },
      "body": [
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 6,
            "end_line": 6,
            "column": 2,
            "end_column": 11
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 6,
              "end_line": 6,
              "column": 2,
              "end_column": 11
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "0",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 7,
            "end_line": 7,
            "column": 2,
            "end_column": 15
          },
          "expr": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 7,
              "end_line": 7,
              "column": 2,
              "end_column": 15
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "expr": {
              "_type": "IntrinsicCall",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 7,
                "end_line": 7,
                "column": 2,
                "end_column": 15
              },
              "wtype": {
                "_type": "WType",
                "name": "bytes",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 1
              },
              "op_code": "itob",
              "immediates": [],
              "stack_args": [
                {
                  "_type": "BoolConstant",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 7,
                    "end_line": 7,
                    "column": 10,
                    "end_column": 14
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "value": true
                }
              ],
              "comment": null
            }
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 8,
            "end_line": 8,
            "column": 2,
            "end_column": 16
          },
          "expr": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 8,
              "end_line": 8,
              "column": 2,
              "end_column": 16
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "expr": {
              "_type": "IntrinsicCall",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 8,
                "end_line": 8,
                "column": 2,
                "end_column": 16
              },
              "wtype": {
                "_type": "WType",
                "name": "bytes",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 1
              },
              "op_code": "itob",
              "immediates": [],
              "stack_args": [
                {
                  "_type": "BoolConstant",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 8,
                    "end_line": 8,
                    "column": 10,
                    "end_column": 15
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "value": false
                }
              ],
              "comment": null
            }
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 9,
            "end_line": 9,
            "column": 10,
            "end_column": 11
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 9,
              "end_line": 9,
              "column": 10,
              "end_column": 11
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "0",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 10,
            "end_line": 10,
            "column": 10,
            "end_column": 11
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 10,
              "end_line": 10,
              "column": 10,
              "end_column": 11
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "1",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 11,
            "end_line": 11,
            "column": 10,
            "end_column": 12
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 11,
              "end_line": 11,
              "column": 10,
              "end_column": 12
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "0",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 12,
            "end_line": 12,
            "column": 10,
            "end_column": 12
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 12,
              "end_line": 12,
              "column": 10,
              "end_column": 12
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "1",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 13,
            "end_line": 13,
            "column": 10,
            "end_column": 25
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 13,
              "end_line": 13,
              "column": 10,
              "end_column": 25
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 14,
            "end_line": 14,
            "column": 2,
            "end_column": 29
          },
          "expr": {
            "_type": "IntegerConstant",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 14,
              "end_line": 14,
              "column": 2,
              "end_column": 29
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "value": "1231232134123123",
            "teal_alias": null
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 15,
            "end_line": 15,
            "column": 2,
            "end_column": 12
          },
          "expr": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 15,
              "end_line": 15,
              "column": 2,
              "end_column": 12
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "expr": {
              "_type": "IntrinsicCall",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 15,
                "end_line": 15,
                "column": 2,
                "end_column": 12
              },
              "wtype": {
                "_type": "WType",
                "name": "bytes",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 1
              },
              "op_code": "itob",
              "immediates": [],
              "stack_args": [
                {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 15,
                    "end_line": 15,
                    "column": 10,
                    "end_column": 11
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "a"
                }
              ],
              "comment": null
            }
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 16,
            "end_line": 16,
            "column": 2,
            "end_column": 16
          },
          "expr": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 16,
              "end_line": 16,
              "column": 2,
              "end_column": 16
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "expr": {
              "_type": "IntrinsicCall",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 16,
                "end_line": 16,
                "column": 2,
                "end_column": 16
              },
              "wtype": {
                "_type": "WType",
                "name": "bytes",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 1
              },
              "op_code": "itob",
              "immediates": [],
              "stack_args": [
                {
                  "_type": "UInt64BinaryOperation",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 16,
                    "end_line": 16,
                    "column": 10,
                    "end_column": 15
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "left": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/biguint-expressions.algo.ts",
                      "line": 16,
                      "end_line": 16,
                      "column": 10,
                      "end_column": 11
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "a"
                  },
                  "op": "*",
                  "right": {
                    "_type": "VarExpression",
                    "source_location": {
                      "file": "tests/approvals/biguint-expressions.algo.ts",
                      "line": 16,
                      "end_line": 16,
                      "column": 14,
                      "end_column": 15
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "uint64",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": 2
                    },
                    "name": "a"
                  }
                }
              ],
              "comment": null
            }
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 17,
            "end_line": 17,
            "column": 2,
            "end_column": 12
          },
          "expr": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 17,
              "end_line": 17,
              "column": 2,
              "end_column": 12
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "expr": {
              "_type": "IntrinsicCall",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 17,
                "end_line": 17,
                "column": 2,
                "end_column": 12
              },
              "wtype": {
                "_type": "WType",
                "name": "bytes",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 1
              },
              "op_code": "itob",
              "immediates": [],
              "stack_args": [
                {
                  "_type": "VarExpression",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 17,
                    "end_line": 17,
                    "column": 10,
                    "end_column": 11
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "name": "b"
                }
              ],
              "comment": null
            }
          }
        },
        {
          "_type": "ExpressionStatement",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 18,
            "end_line": 18,
            "column": 2,
            "end_column": 12
          },
          "expr": {
            "_type": "ReinterpretCast",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 18,
              "end_line": 18,
              "column": 2,
              "end_column": 12
            },
            "wtype": {
              "_type": "WType",
              "name": "biguint",
              "immutable": true,
              "ephemeral": false,
              "scalar_type": 1
            },
            "expr": {
              "_type": "VarExpression",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 18,
                "end_line": 18,
                "column": 10,
                "end_column": 11
              },
              "wtype": {
                "_type": "WType",
                "name": "bytes",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 1
              },
              "name": "c"
            }
          }
        }
      ],
      "label": null,
      "comment": null
    },
    "documentation": {
      "_type": "MethodDocumentation",
      "description": null,
      "args": {},
      "returns": null
    },
    "id": "tests/approvals/biguint-expressions.algo.ts::test",
    "name": "test"
  },
  {
    "_type": "Contract",
    "source_location": {
      "file": "tests/approvals/biguint-expressions.algo.ts",
      "line": 21,
      "end_line": 21,
      "column": 0,
      "end_column": 41
    },
    "id": "tests/approvals/biguint-expressions.algo.ts::DemoContract",
    "name": "DemoContract",
    "description": null,
    "method_resolution_order": [
      "@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract"
    ],
    "approval_program": {
      "_type": "ContractMethod",
      "source_location": {
        "file": "tests/approvals/biguint-expressions.algo.ts",
        "line": 22,
        "end_line": 22,
        "column": 2,
        "end_column": 26
      },
      "args": [],
      "return_type": {
        "_type": "WType",
        "name": "bool",
        "immutable": true,
        "ephemeral": false,
        "scalar_type": 2
      },
      "body": {
        "_type": "Block",
        "source_location": {
          "_type": "SourceLocation",
          "file": null,
          "line": 1,
          "end_line": 1,
          "column": 0,
          "end_column": 1
        },
        "body": [
          {
            "_type": "IfElse",
            "source_location": {
              "_type": "SourceLocation",
              "file": null,
              "line": 1,
              "end_line": 1,
              "column": 0,
              "end_column": 1
            },
            "condition": {
              "_type": "Not",
              "source_location": {
                "_type": "SourceLocation",
                "file": null,
                "line": 1,
                "end_line": 1,
                "column": 0,
                "end_column": 1
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "expr": {
                "_type": "ReinterpretCast",
                "source_location": {
                  "_type": "SourceLocation",
                  "file": null,
                  "line": 1,
                  "end_line": 1,
                  "column": 0,
                  "end_column": 1
                },
                "wtype": {
                  "_type": "WType",
                  "name": "bool",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": 2
                },
                "expr": {
                  "_type": "IntrinsicCall",
                  "source_location": {
                    "_type": "SourceLocation",
                    "file": null,
                    "line": 1,
                    "end_line": 1,
                    "column": 0,
                    "end_column": 1
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "uint64",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "op_code": "txn",
                  "immediates": [
                    "ApplicationID"
                  ],
                  "stack_args": [],
                  "comment": null
                }
              }
            },
            "if_branch": {
              "_type": "Block",
              "source_location": {
                "_type": "SourceLocation",
                "file": null,
                "line": 1,
                "end_line": 1,
                "column": 0,
                "end_column": 1
              },
              "body": [
                {
                  "_type": "ExpressionStatement",
                  "source_location": {
                    "_type": "SourceLocation",
                    "file": null,
                    "line": 1,
                    "end_line": 1,
                    "column": 0,
                    "end_column": 1
                  },
                  "expr": {
                    "_type": "SubroutineCallExpression",
                    "source_location": {
                      "_type": "SourceLocation",
                      "file": null,
                      "line": 1,
                      "end_line": 1,
                      "column": 0,
                      "end_column": 1
                    },
                    "wtype": {
                      "_type": "WType",
                      "name": "void",
                      "immutable": true,
                      "ephemeral": false,
                      "scalar_type": null
                    },
                    "target": {
                      "_type": "InstanceMethodTarget",
                      "member_name": "constructor"
                    },
                    "args": []
                  }
                }
              ],
              "label": null,
              "comment": null
            },
            "else_branch": null
          },
          {
            "_type": "Block",
            "source_location": {
              "file": "tests/approvals/biguint-expressions.algo.ts",
              "line": 22,
              "end_line": 25,
              "column": 27,
              "end_column": 3
            },
            "body": [
              {
                "_type": "ExpressionStatement",
                "source_location": {
                  "file": "tests/approvals/biguint-expressions.algo.ts",
                  "line": 23,
                  "end_line": 23,
                  "column": 4,
                  "end_column": 27
                },
                "expr": {
                  "_type": "SubroutineCallExpression",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 23,
                    "end_line": 23,
                    "column": 4,
                    "end_column": 27
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "void",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": null
                  },
                  "target": {
                    "_type": "SubroutineID",
                    "target": "tests/approvals/biguint-expressions.algo.ts::test"
                  },
                  "args": [
                    {
                      "_type": "CallArg",
                      "name": null,
                      "value": {
                        "_type": "IntegerConstant",
                        "source_location": {
                          "file": "tests/approvals/biguint-expressions.algo.ts",
                          "line": 23,
                          "end_line": 23,
                          "column": 9,
                          "end_column": 10
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "uint64",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 2
                        },
                        "value": "1",
                        "teal_alias": null
                      }
                    },
                    {
                      "_type": "CallArg",
                      "name": null,
                      "value": {
                        "_type": "BoolConstant",
                        "source_location": {
                          "file": "tests/approvals/biguint-expressions.algo.ts",
                          "line": 23,
                          "end_line": 23,
                          "column": 12,
                          "end_column": 17
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "bool",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 2
                        },
                        "value": false
                      }
                    },
                    {
                      "_type": "CallArg",
                      "name": null,
                      "value": {
                        "_type": "IntrinsicCall",
                        "source_location": {
                          "file": "tests/approvals/biguint-expressions.algo.ts",
                          "line": 23,
                          "end_line": 23,
                          "column": 19,
                          "end_column": 26
                        },
                        "wtype": {
                          "_type": "WType",
                          "name": "bytes",
                          "immutable": true,
                          "ephemeral": false,
                          "scalar_type": 1
                        },
                        "op_code": "itob",
                        "immediates": [],
                        "stack_args": [
                          {
                            "_type": "IntegerConstant",
                            "source_location": {
                              "file": "tests/approvals/biguint-expressions.algo.ts",
                              "line": 23,
                              "end_line": 23,
                              "column": 24,
                              "end_column": 25
                            },
                            "wtype": {
                              "_type": "WType",
                              "name": "uint64",
                              "immutable": true,
                              "ephemeral": false,
                              "scalar_type": 2
                            },
                            "value": "4",
                            "teal_alias": null
                          }
                        ],
                        "comment": null
                      }
                    }
                  ]
                }
              },
              {
                "_type": "ReturnStatement",
                "source_location": {
                  "file": "tests/approvals/biguint-expressions.algo.ts",
                  "line": 24,
                  "end_line": 24,
                  "column": 4,
                  "end_column": 15
                },
                "value": {
                  "_type": "BoolConstant",
                  "source_location": {
                    "file": "tests/approvals/biguint-expressions.algo.ts",
                    "line": 24,
                    "end_line": 24,
                    "column": 11,
                    "end_column": 15
                  },
                  "wtype": {
                    "_type": "WType",
                    "name": "bool",
                    "immutable": true,
                    "ephemeral": false,
                    "scalar_type": 2
                  },
                  "value": true
                }
              }
            ],
            "label": null,
            "comment": null
          }
        ],
        "label": null,
        "comment": null
      },
      "documentation": {
        "_type": "MethodDocumentation",
        "description": null,
        "args": {},
        "returns": null
      },
      "cref": "tests/approvals/biguint-expressions.algo.ts::DemoContract",
      "member_name": "approvalProgram",
      "arc4_method_config": null
    },
    "clear_program": {
      "_type": "ContractMethod",
      "source_location": {
        "_type": "SourceLocation",
        "file": null,
        "line": 1,
        "end_line": 1,
        "column": 0,
        "end_column": 1
      },
      "args": [],
      "return_type": {
        "_type": "WType",
        "name": "bool",
        "immutable": true,
        "ephemeral": false,
        "scalar_type": 2
      },
      "body": {
        "_type": "Block",
        "source_location": {
          "_type": "SourceLocation",
          "file": null,
          "line": 1,
          "end_line": 1,
          "column": 0,
          "end_column": 1
        },
        "body": [
          {
            "_type": "ReturnStatement",
            "source_location": {
              "_type": "SourceLocation",
              "file": null,
              "line": 1,
              "end_line": 1,
              "column": 0,
              "end_column": 1
            },
            "value": {
              "_type": "BoolConstant",
              "source_location": {
                "_type": "SourceLocation",
                "file": null,
                "line": 1,
                "end_line": 1,
                "column": 0,
                "end_column": 1
              },
              "wtype": {
                "_type": "WType",
                "name": "bool",
                "immutable": true,
                "ephemeral": false,
                "scalar_type": 2
              },
              "value": true
            }
          }
        ],
        "label": null,
        "comment": null
      },
      "documentation": {
        "_type": "MethodDocumentation",
        "description": null,
        "args": {},
        "returns": null
      },
      "cref": "@algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract",
      "member_name": "clearStateProgram",
      "arc4_method_config": null
    },
    "methods": [
      {
        "_type": "ContractMethod",
        "source_location": {
          "file": "tests/approvals/biguint-expressions.algo.ts",
          "line": 21,
          "end_line": 21,
          "column": 0,
          "end_column": 41
        },
        "args": [],
        "return_type": {
          "_type": "WType",
          "name": "void",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": null
        },
        "body": {
          "_type": "Block",
          "source_location": {
            "file": "tests/approvals/biguint-expressions.algo.ts",
            "line": 21,
            "end_line": 21,
            "column": 0,
            "end_column": 41
          },
          "body": [
            {
              "_type": "ExpressionStatement",
              "source_location": {
                "file": "tests/approvals/biguint-expressions.algo.ts",
                "line": 21,
                "end_line": 21,
                "column": 0,
                "end_column": 41
              },
              "expr": {
                "_type": "VoidConstant",
                "source_location": {
                  "file": "tests/approvals/biguint-expressions.algo.ts",
                  "line": 21,
                  "end_line": 21,
                  "column": 0,
                  "end_column": 41
                },
                "wtype": {
                  "_type": "WType",
                  "name": "void",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": null
                }
              }
            }
          ],
          "label": null,
          "comment": null
        },
        "documentation": {
          "_type": "MethodDocumentation",
          "description": null,
          "args": {},
          "returns": null
        },
        "cref": "tests/approvals/biguint-expressions.algo.ts::DemoContract",
        "member_name": "constructor",
        "arc4_method_config": null
      },
      {
        "_type": "ContractMethod",
        "source_location": {
          "_type": "SourceLocation",
          "file": null,
          "line": 1,
          "end_line": 1,
          "column": 0,
          "end_column": 1
        },
        "args": [],
        "return_type": {
          "_type": "WType",
          "name": "void",
          "immutable": true,
          "ephemeral": false,
          "scalar_type": null
        },
        "body": {
          "_type": "Block",
          "source_location": {
            "_type": "SourceLocation",
            "file": null,
            "line": 1,
            "end_line": 1,
            "column": 0,
            "end_column": 1
          },
          "body": [
            {
              "_type": "ExpressionStatement",
              "source_location": {
                "_type": "SourceLocation",
                "file": null,
                "line": 1,
                "end_line": 1,
                "column": 0,
                "end_column": 1
              },
              "expr": {
                "_type": "SubroutineCallExpression",
                "source_location": {
                  "_type": "SourceLocation",
                  "file": null,
                  "line": 1,
                  "end_line": 1,
                  "column": 0,
                  "end_column": 1
                },
                "wtype": {
                  "_type": "WType",
                  "name": "void",
                  "immutable": true,
                  "ephemeral": false,
                  "scalar_type": null
                },
                "target": {
                  "_type": "InstanceMethodTarget",
                  "member_name": "constructor"
                },
                "args": []
              }
            }
          ],
          "label": null,
          "comment": null
        },
        "documentation": {
          "_type": "MethodDocumentation",
          "description": null,
          "args": {},
          "returns": null
        },
        "cref": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract",
        "member_name": "constructor",
        "arc4_method_config": null
      }
    ],
    "app_state": [],
    "state_totals": {
      "globalBytes": null,
      "globalUints": null,
      "localBytes": null,
      "localUints": null
    },
    "reserved_scratch_space": [],
    "avm_version": null
  }
]
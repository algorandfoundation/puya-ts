contract tests/approvals/implicit-create.algo.ts::BaseWithAbiCreate:
    program approval:
        subroutine @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> bool:
            block@0: // L1
                let tmp%0#0: bool = tests/approvals/implicit-create.algo.ts::BaseWithAbiCreate.__puya_arc4_router__()
                return tmp%0#0
        
        subroutine tests/approvals/implicit-create.algo.ts::BaseWithAbiCreate.__puya_arc4_router__() -> bool:
            block@0: // L17
                let tmp%0#0: uint64 = (txn NumAppArgs)
                let tmp%1#0: bool = (!= tmp%0#0 0u)
                goto tmp%1#0 ? block@1 : block@5
            block@1: // abi_routing_L17
                let tmp%2#0: bytes = (txna ApplicationArgs 0)
                switch tmp%2#0 {method "create()void" => block@2, * => block@3}
            block@2: // create_route_L18
                let tmp%3#0: uint64 = (txn OnCompletion)
                let tmp%4#0: bool = (== tmp%3#0 NoOp)
                (assert tmp%4#0) // OnCompletion is not NoOp
                let tmp%5#0: uint64 = (txn ApplicationID)
                let tmp%6#0: bool = (== tmp%5#0 0u)
                (assert tmp%6#0) // can only call when creating
                tests/approvals/implicit-create.algo.ts::BaseWithAbiCreate.create()
                return 1u
            block@3: // switch_case_default_L17
                goto block@4
            block@4: // switch_case_next_L17
                goto block@6
            block@5: // bare_routing_L17
                goto block@6
            block@6: // after_if_else_L17
                return 0u
        
        subroutine tests/approvals/implicit-create.algo.ts::BaseWithAbiCreate.create() -> void:
            block@0: // L18
                return 
    
    program clear-state:
        subroutine @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.clearStateProgram() -> bool:
            block@0: // L1
                return 1u
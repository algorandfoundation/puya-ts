#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0xb8b5e4b9 // method "handleNoop()void"
    txna ApplicationArgs 0
    match main_handleNoop_route@3

main_after_if_else@10:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    pushint 0 // 0
    return

main_handleNoop_route@3:
    // tests/approvals/implicit-create.algo.ts:5
    // @abimethod({ allowActions: 'NoOp' })
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushint 1 // 1
    return

main_bare_routing@6:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return

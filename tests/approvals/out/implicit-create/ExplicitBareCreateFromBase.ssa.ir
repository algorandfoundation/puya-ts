contract tests/approvals/implicit-create.algo.ts::ExplicitBareCreateFromBase:
    program approval:
        subroutine @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> bool:
            block@0: // L1
                let app_id%0#0: uint64 = (txn ApplicationID)
                goto app_id%0#0 ? block@2 : block@1
            block@1: // on_create_L21
                tests/approvals/implicit-create.algo.ts::ExplicitBareCreateFromBase.constructor()
                goto block@2
            block@2: // entrypoint_L21
                let tmp%0#0: bool = tests/approvals/implicit-create.algo.ts::ExplicitBareCreateFromBase.__puya_arc4_router__()
                return tmp%0#0
        
        subroutine tests/approvals/implicit-create.algo.ts::ExplicitBareCreateFromBase.__puya_arc4_router__() -> bool:
            block@0: // L21
                let tmp%0#0: uint64 = (txn NumAppArgs)
                let tmp%1#0: bool = (!= tmp%0#0 0u)
                goto tmp%1#0 ? block@1 : block@2
            block@1: // abi_routing_L21
                goto block@6
            block@2: // bare_routing_L21
                let tmp%2#0: uint64 = (txn OnCompletion)
                switch tmp%2#0 {0u => block@3, * => block@4}
            block@3: // create_L14
                let tmp%3#0: uint64 = (txn ApplicationID)
                let tmp%4#0: bool = (== tmp%3#0 0u)
                (assert tmp%4#0) // is creating
                tests/approvals/implicit-create.algo.ts::BaseWithBareCreate.create()
                return 1u
            block@4: // switch_case_default_L21
                goto block@5
            block@5: // switch_case_next_L21
                goto block@6
            block@6: // after_if_else_L21
                return 0u
        
        subroutine tests/approvals/implicit-create.algo.ts::BaseWithBareCreate.create() -> void:
            block@0: // L14
                return 
        
        subroutine tests/approvals/implicit-create.algo.ts::ExplicitBareCreateFromBase.constructor() -> void:
            block@0: // L21
                tests/approvals/implicit-create.algo.ts::BaseWithBareCreate.constructor()
                return 
        
        subroutine tests/approvals/implicit-create.algo.ts::BaseWithBareCreate.constructor() -> void:
            block@0: // L13
                return 
    
    program clear-state:
        subroutine @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract.clearStateProgram() -> bool:
            block@0: // L1
                return 1u
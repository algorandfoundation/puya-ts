#pragma version 10

tests/approvals/implicit-create.algo.ts::NoBare.approvalProgram:
    intcblock 0 1
    callsub __puya_arc4_router__
    return


// tests/approvals/implicit-create.algo.ts::NoBare.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    proto 0 1
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __puya_arc4_router___bare_routing@5
    txna ApplicationArgs 0
    pushbytes 0xb8b5e4b9 // method "handleNoop()void"
    swap
    match __puya_arc4_router___handleNoop_route@2
    b __puya_arc4_router___switch_case_default@3

__puya_arc4_router___handleNoop_route@2:
    // tests/approvals/implicit-create.algo.ts:5
    // @abimethod({ allowActions: 'NoOp' })
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub handleNoop
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@3:
    b __puya_arc4_router___after_if_else@9

__puya_arc4_router___bare_routing@5:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match __puya_arc4_router_____algots__.defaultCreate@6
    b __puya_arc4_router___switch_case_default@7

__puya_arc4_router_____algots__.defaultCreate@6:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@7:

__puya_arc4_router___after_if_else@9:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    intc_0 // 0
    retsub


// tests/approvals/implicit-create.algo.ts::NoBare.handleNoop() -> void:
handleNoop:
    // tests/approvals/implicit-create.algo.ts:5-6
    // @abimethod({ allowActions: 'NoOp' })
    // public handleNoop() {}
    proto 0 0
    retsub


// tests/approvals/implicit-create.algo.ts::NoBare.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    // tests/approvals/implicit-create.algo.ts:4
    // export class NoBare extends Contract {
    proto 0 0
    retsub

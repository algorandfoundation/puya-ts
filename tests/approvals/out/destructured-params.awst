subroutine test(p: tuple[uint64, bytes, bool]): void
{
  var <tuple>[a, b, c]: readonlytuple[uint64, bytes, bool] = p
  log(concat(concat(itob(a), b), itob(c)))
}
subroutine init(): void
{
  test(<tuple>[1, "", False])
  var temp: tuple[uint64, bytes, bool] = <tuple>[2, "Hello", True]
  test(<tuple>[temp.0, temp.1, temp.2])
}
subroutine test2(args: tuple[bool, bool, readonlytuple[string, string]]): void
{
  var <tuple>[a, <tuple>[x, y], b]: readonlytuple[bool, readonlytuple[bool, bool], bool] = <tuple>[True, <tuple>[args.0, args.1, args.2], False]
  var args2: tuple[bool, bool, readonlytuple[string, string]] = <tuple>[True, True, args.2]
}
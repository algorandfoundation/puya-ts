#pragma version 10

tests/approvals/super-calls.algo.ts::SubSubSubContract.approvalProgram:
    intcblock 0 1 2 3
    bytecblock "g1" "g2" "g3"
    txn ApplicationID
    bnz main_after_if_else@2
    callsub constructor

main_after_if_else@2:
    // tests/approvals/super-calls.algo.ts:38
    // assert(this.g1.value === 1)
    intc_0 // 0
    // tests/approvals/super-calls.algo.ts:5
    // g1 = GlobalState({ initialValue: Uint64(1) })
    bytec_0 // "g1"
    // tests/approvals/super-calls.algo.ts:38
    // assert(this.g1.value === 1)
    app_global_get_ex
    assert // check GlobalState exists
    intc_1 // 1
    ==
    assert
    // tests/approvals/super-calls.algo.ts:39
    // assert(this.g2.value === 2)
    intc_0 // 0
    // tests/approvals/super-calls.algo.ts:14
    // g2 = GlobalState({ initialValue: Uint64(2) })
    bytec_1 // "g2"
    // tests/approvals/super-calls.algo.ts:39
    // assert(this.g2.value === 2)
    app_global_get_ex
    assert // check GlobalState exists
    intc_2 // 2
    ==
    assert
    // tests/approvals/super-calls.algo.ts:40
    // assert(this.g3.value === 3)
    intc_0 // 0
    // tests/approvals/super-calls.algo.ts:32
    // g3 = GlobalState<uint64>()
    bytec_2 // "g3"
    // tests/approvals/super-calls.algo.ts:40
    // assert(this.g3.value === 3)
    app_global_get_ex
    assert // check GlobalState exists
    intc_3 // 3
    ==
    assert
    // tests/approvals/super-calls.algo.ts:41
    // return true
    intc_1 // 1
    return


// tests/approvals/super-calls.algo.ts::SubSubSubContract.constructor() -> void:
constructor:
    // tests/approvals/super-calls.algo.ts:33-36
    // constructor() {
    //   super()
    //   this.g3.value = 3
    // }
    proto 0 0
    // tests/approvals/super-calls.algo.ts:34
    // super()
    callsub tests/approvals/super-calls.algo.ts::SubContract.constructor
    // tests/approvals/super-calls.algo.ts:32
    // g3 = GlobalState<uint64>()
    bytec_2 // "g3"
    // tests/approvals/super-calls.algo.ts:35
    // this.g3.value = 3
    intc_3 // 3
    app_global_put
    retsub


// tests/approvals/super-calls.algo.ts::SubContract.constructor() -> void:
tests/approvals/super-calls.algo.ts::SubContract.constructor:
    // tests/approvals/super-calls.algo.ts:13
    // export class SubContract extends SuperContract {
    proto 0 0
    callsub tests/approvals/super-calls.algo.ts::SuperContract.constructor
    // tests/approvals/super-calls.algo.ts:14
    // g2 = GlobalState({ initialValue: Uint64(2) })
    bytec_1 // "g2"
    intc_2 // 2
    app_global_put
    retsub


// tests/approvals/super-calls.algo.ts::SuperContract.constructor() -> void:
tests/approvals/super-calls.algo.ts::SuperContract.constructor:
    // tests/approvals/super-calls.algo.ts:4
    // export class SuperContract extends BaseContract {
    proto 0 0
    // tests/approvals/super-calls.algo.ts:5
    // g1 = GlobalState({ initialValue: Uint64(1) })
    bytec_0 // "g1"
    intc_1 // 1
    app_global_put
    retsub

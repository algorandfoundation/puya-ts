contract BaseTestContract extends @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract, @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract
{
  globals {
    ["baseTestState"]: string
  }
  constructor(): void
  {
    void
    var GlobalState["baseTestState"]: string = "testing 123"
  }

}
contract TestContract extends tests/approvals/global-state.algo.ts::BaseTestContract, @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract, @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract
{
  globals {
    ["baseTestState"]: string
    ["noInitial"]: bytes
    ["noInitialInt"]: uint64
    ["testState"]: uint64
    ["TESTSTATE"]: uint64
  }
  constructor(): void
  {
    var someValue: uint64 = 72057594037927936
    super.constructor()
    var GlobalState["testState"]: uint64 = 2
    var GlobalState["TESTSTATE"]: uint64 = 5
    assert(GlobalState["baseTestState"] == "testing 123")
    var GlobalState["noInitialInt"]: uint64 = someValue * GlobalState["testState"]
  }

  approvalProgram(): bool
  {
    assert(STATE_EXISTS(GlobalState["testState"]))
    assert(GlobalState["testState"] == 2)
    var GlobalState["testState"]: uint64 = btoi(txnas<ApplicationArgs>(0))
    return True
  }

}

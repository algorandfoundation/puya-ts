#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1

main_block@1:
    // tests/approvals/ops.algo.ts:5
    // class MyContract extends Contract {
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@6

main_abi_routing@2:
    // tests/approvals/ops.algo.ts:5
    // class MyContract extends Contract {
    txna ApplicationArgs 0
    pushbytes 0xa78000de // method "test()void"
    swap
    match main_test_route@3

main_switch_case_default@4:

main_switch_case_next@5:

main_after_if_else@10:
    // tests/approvals/ops.algo.ts:5
    // class MyContract extends Contract {
    intc_0 // 0

main_after_inlined_tests/approvals/ops.algo.ts::MyContract.__puya_arc4_router__@11:
    return

main_test_route@3:
    // tests/approvals/ops.algo.ts:6
    // test() {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test
    intc_1 // 1
    b main_after_inlined_tests/approvals/ops.algo.ts::MyContract.__puya_arc4_router__@11

main_bare_routing@6:
    // tests/approvals/ops.algo.ts:5
    // class MyContract extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algots__.defaultCreate@7

main_switch_case_default@8:

main_switch_case_next@9:
    b main_after_if_else@10

main___algots__.defaultCreate@7:
    // tests/approvals/ops.algo.ts:5
    // class MyContract extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    b main_after_inlined_tests/approvals/ops.algo.ts::MyContract.__puya_arc4_router__@11


// tests/approvals/ops.algo.ts::MyContract.test() -> void:
test:
    // tests/approvals/ops.algo.ts:7
    // const a = bzero(8).bitwiseInvert()
    pushint 8 // 8
    bzero
    b~
    // tests/approvals/ops.algo.ts:8
    // const b = op2.btoi(a)
    btoi
    // tests/approvals/ops.algo.ts:9
    // assert(b === 2 ** 64 - 1)
    dup
    pushint 18446744073709551615 // 18446744073709551615
    ==
    assert
    // tests/approvals/ops.algo.ts:11
    // const c = op.shr(b, 32)
    pushint 32 // 32
    shr
    // tests/approvals/ops.algo.ts:13
    // assert(c === 2 ** 32 - 1)
    pushint 4294967295 // 4294967295
    ==
    assert
    retsub


// tests/approvals/ops.algo.ts::MyContract.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    retsub

#pragma version 10

tests/approvals/call-expressions.algo.ts::Example.approvalProgram:
    txn ApplicationID
    bnz main_after_if_else@2
    callsub constructor

main_after_if_else@2:
    // tests/approvals/call-expressions.algo.ts:12
    // return this.localMethod() + super.baseMethod() === freeMethod() - this.baseMethod()
    callsub localMethod
    callsub baseMethod
    +
    callsub freeMethod
    callsub tests/approvals/call-expressions.algo.ts::Example.baseMethod
    -
    ==
    return


// tests/approvals/call-expressions.algo.ts::Example.constructor() -> void:
constructor:
    // tests/approvals/call-expressions.algo.ts:10
    // export default class Example extends ExampleBase {
    proto 0 0
    callsub tests/approvals/call-expressions.algo.ts::ExampleBase.constructor
    retsub


// tests/approvals/call-expressions.algo.ts::ExampleBase.constructor() -> void:
tests/approvals/call-expressions.algo.ts::ExampleBase.constructor:
    // tests/approvals/call-expressions.algo.ts:4
    // abstract class ExampleBase extends BaseContract {
    proto 0 0
    retsub


// tests/approvals/call-expressions.algo.ts::Example.localMethod() -> uint64:
localMethod:
    // tests/approvals/call-expressions.algo.ts:17
    // private localMethod(): uint64 {
    proto 0 1
    // tests/approvals/call-expressions.algo.ts:18
    // return 5
    pushint 5 // 5
    retsub


// tests/approvals/call-expressions.algo.ts::ExampleBase.baseMethod() -> uint64:
baseMethod:
    // tests/approvals/call-expressions.algo.ts:5
    // protected baseMethod(): uint64 {
    proto 0 1
    // tests/approvals/call-expressions.algo.ts:6
    // return 2
    pushint 2 // 2
    retsub


// tests/approvals/call-expressions.algo.ts::freeMethod() -> uint64:
freeMethod:
    // tests/approvals/call-expressions.algo.ts:22
    // function freeMethod(): uint64 {
    proto 0 1
    // tests/approvals/call-expressions.algo.ts:23
    // return 7
    pushint 7 // 7
    retsub


// tests/approvals/call-expressions.algo.ts::Example.baseMethod() -> uint64:
tests/approvals/call-expressions.algo.ts::Example.baseMethod:
    // tests/approvals/call-expressions.algo.ts:14
    // protected baseMethod(): uint64 {
    proto 0 1
    // tests/approvals/call-expressions.algo.ts:15
    // return 1
    pushint 1 // 1
    retsub

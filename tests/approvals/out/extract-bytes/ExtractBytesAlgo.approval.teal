#pragma version 10
#pragma typetrack false

// tests/approvals/extract-bytes.algo.ts::ExtractBytesAlgo.approvalProgram() -> uint64:
main:
    intcblock 2 0
    bytecblock "abcdefg" "cdefg" "cd"
    // tests/approvals/extract-bytes.algo.ts:7
    // this.test(2, 0)
    intc_0 // 2
    intc_1 // 0
    callsub test
    // tests/approvals/extract-bytes.algo.ts:8
    // return true
    pushint 1 // 1
    return


// tests/approvals/extract-bytes.algo.ts::ExtractBytesAlgo.test(two: uint64, zero: uint64) -> void:
test:
    // tests/approvals/extract-bytes.algo.ts:11
    // private test(two: uint64, zero: uint64) {
    proto 2 0
    // tests/approvals/extract-bytes.algo.ts:12
    // assert(two === 2, 'Param two should be 2')
    frame_dig -2
    intc_0 // 2
    ==
    assert // Param two should be 2
    // tests/approvals/extract-bytes.algo.ts:13
    // assert(zero === 0, 'Param zero should be 0')
    frame_dig -1
    intc_1 // 0
    ==
    assert // Param zero should be 0
    // tests/approvals/extract-bytes.algo.ts:14
    // const b = Bytes('abcdefg')
    bytec_0 // "abcdefg"
    // tests/approvals/extract-bytes.algo.ts:15
    // assert(extract(b, 2) === Bytes('cdefg'))
    extract 2 0
    bytec_1 // "cdefg"
    ==
    assert
    // tests/approvals/extract-bytes.algo.ts:14
    // const b = Bytes('abcdefg')
    bytec_0 // "abcdefg"
    // tests/approvals/extract-bytes.algo.ts:16
    // assert(extract(b, two) === Bytes('cdefg'))
    len
    frame_dig -2
    -
    // tests/approvals/extract-bytes.algo.ts:14
    // const b = Bytes('abcdefg')
    bytec_0 // "abcdefg"
    // tests/approvals/extract-bytes.algo.ts:16
    // assert(extract(b, two) === Bytes('cdefg'))
    frame_dig -2
    uncover 2
    extract3
    bytec_1 // "cdefg"
    ==
    assert
    // tests/approvals/extract-bytes.algo.ts:14
    // const b = Bytes('abcdefg')
    bytec_0 // "abcdefg"
    // tests/approvals/extract-bytes.algo.ts:18
    // assert(extract(b, 2, 2) === Bytes('cd'))
    intc_0 // 2
    dup
    extract3
    bytec_2 // "cd"
    ==
    assert
    // tests/approvals/extract-bytes.algo.ts:14
    // const b = Bytes('abcdefg')
    bytec_0 // "abcdefg"
    // tests/approvals/extract-bytes.algo.ts:19
    // assert(extract(b, two, two) === Bytes('cd'))
    frame_dig -2
    dup
    extract3
    bytec_2 // "cd"
    ==
    assert
    // tests/approvals/extract-bytes.algo.ts:14
    // const b = Bytes('abcdefg')
    bytec_0 // "abcdefg"
    // tests/approvals/extract-bytes.algo.ts:21
    // assert(extract(b, two, zero) === Bytes(''))
    frame_dig -2
    frame_dig -1
    extract3
    pushbytes ""
    ==
    assert
    retsub

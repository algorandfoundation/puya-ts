contract MyContract extends @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract, @algorandfoundation/algorand-typescript/base-contract.d.ts::BaseContract
{
  constructor(): void
  {
    void
  }
  
  getXY(): tuple[uint64, uint64]
  {
    return <tuple>[1, 2]
  }
  
  getYX(): tuple[uint64, uint64]
  {
    return <tuple>[222, 111]
  }
  
  getAnon(): tuple[uint64, uint64]
  {
    return <tuple>[3, 4]
  }
  
  testing(): readonlytuple[tuple[uint64, uint64], tuple[uint64, uint64], tuple[uint64, uint64]]
  {
    var a: tuple[uint64, uint64] = <tuple>[(#7 = this.getXY()).0, #7.1]
    var b: tuple[uint64, uint64] = <tuple>[(#8 = this.getYX()).0, #8.1]
    var c: tuple[uint64, uint64] = <tuple>[(#9 = this.getAnon()).0, #9.1]
    return <tuple>[<tuple>[a.0, a.1], <tuple>[b.0, b.1], <tuple>[c.0, c.1]]
  }
  
}
#pragma version 10

tests/approvals/strings.algo.ts::StringContract.approvalProgram:
    intcblock 0 1
    bytecblock 0x151f7c75
    txn ApplicationID
    bnz main_after_if_else@2
    callsub constructor

main_after_if_else@2:
    callsub __puya_arc4_router__
    return


// tests/approvals/strings.algo.ts::StringContract.constructor() -> void:
constructor:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    proto 0 0
    retsub


// tests/approvals/strings.algo.ts::StringContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    proto 0 1
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __puya_arc4_router___bare_routing@6
    txna ApplicationArgs 0
    pushbytes 0x5049bd1b // method "join(string,string)string"
    pushbytes 0xdc882e2f // method "interpolate(string)string"
    uncover 2
    match __puya_arc4_router___join_route@2 __puya_arc4_router___interpolate_route@3
    b __puya_arc4_router___switch_case_default@4

__puya_arc4_router___join_route@2:
    // tests/approvals/strings.algo.ts:4
    // join(a: string, b: string): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/approvals/strings.algo.ts:4
    // join(a: string, b: string): string {
    callsub join
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___interpolate_route@3:
    // tests/approvals/strings.algo.ts:8
    // interpolate(a: string): string {
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/approvals/strings.algo.ts:8
    // interpolate(a: string): string {
    callsub interpolate
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@4:
    b __puya_arc4_router___after_if_else@10

__puya_arc4_router___bare_routing@6:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txn OnCompletion
    intc_0 // 0
    swap
    match __puya_arc4_router_____algots__.defaultCreate@7
    b __puya_arc4_router___switch_case_default@8

__puya_arc4_router_____algots__.defaultCreate@7:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algots__.defaultCreate
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@8:

__puya_arc4_router___after_if_else@10:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    intc_0 // 0
    retsub


// tests/approvals/strings.algo.ts::StringContract.join(a: bytes, b: bytes) -> bytes:
join:
    // tests/approvals/strings.algo.ts:4
    // join(a: string, b: string): string {
    proto 2 1
    // tests/approvals/strings.algo.ts:5
    // return a + b
    frame_dig -2
    frame_dig -1
    concat
    retsub


// tests/approvals/strings.algo.ts::StringContract.interpolate(a: bytes) -> bytes:
interpolate:
    // tests/approvals/strings.algo.ts:8
    // interpolate(a: string): string {
    proto 1 1
    // tests/approvals/strings.algo.ts:9
    // return `You interpolated ${a}`
    pushbytes "You interpolated "
    frame_dig -1
    concat
    retsub


// tests/approvals/strings.algo.ts::StringContract.__algots__.defaultCreate() -> void:
__algots__.defaultCreate:
    // tests/approvals/strings.algo.ts:3
    // class StringContract extends Contract {
    proto 0 0
    retsub

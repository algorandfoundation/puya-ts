subroutine test(a: uint64, b: uint64, c: string, d: bytes, e: uint64): bool
{
  var x: uint64 = (Boolean((#se0 = (Boolean(a) ? a : b))) ? #se0 : e)
  assert(Boolean((Boolean((#se1 = (Boolean(a) ? b : a))) ? e : #se1)))
  var y: uint64 = (Boolean(a) ? b : a)
  var z: uint64 = (Boolean(a) and Boolean(len(d)) or Boolean(y) ? (Boolean(x) ? x : y) : (Boolean(x) ? y : x))
  if (Boolean(a) or Boolean(len(c)) and Boolean(len(d))) {
    return True
  }
  var f: uint64 = 0
  if (Boolean(f = (Boolean(a) ? a : b))) {
    return True
  }
  return False
}
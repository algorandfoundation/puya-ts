[
{
  "_type": "Subroutine",
  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:0-16:1]",
  "name": "test",
  "moduleName": "tests/approvals/boolean-expressions.algo.ts",
  "args": [
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:14-2:23]",
      "name": "a",
      "wtype": "uint64"
    },
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:25-2:34]",
      "name": "b",
      "wtype": "uint64"
    },
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:36-2:45]",
      "name": "c",
      "wtype": "string"
    },
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:47-2:55]",
      "name": "d",
      "wtype": "bytes"
    },
    {
      "_type": "SubroutineArgument",
      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:57-2:66]",
      "name": "e",
      "wtype": "uint64"
    }
  ],
  "returnType": "bool",
  "body": {
    "_type": "Block",
    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[2:68-16:1]",
    "body": [
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:8-3:23]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:8-3:9]",
          "wtype": "uint64",
          "name": "x"
        },
        "value": {
          "_type": "ConditionalExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:23]",
          "wtype": "uint64",
          "condition": {
            "_type": "ReinterpretCast",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:18]",
            "wtype": "bool",
            "expr": {
              "_type": "SingleEvaluation",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:18]",
              "wtype": "uint64",
              "source": {
                "_type": "ConditionalExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:18]",
                "wtype": "uint64",
                "condition": {
                  "_type": "ReinterpretCast",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:13]",
                  "wtype": "bool",
                  "expr": {
                    "_type": "VarExpression",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:13]",
                    "wtype": "uint64",
                    "name": "a"
                  }
                },
                "trueExpr": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:13]",
                  "wtype": "uint64",
                  "name": "a"
                },
                "falseExpr": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:17-3:18]",
                  "wtype": "uint64",
                  "name": "b"
                }
              },
              "id": "se0"
            }
          },
          "trueExpr": {
            "_type": "SingleEvaluation",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:18]",
            "wtype": "uint64",
            "source": {
              "_type": "ConditionalExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:18]",
              "wtype": "uint64",
              "condition": {
                "_type": "ReinterpretCast",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:13]",
                "wtype": "bool",
                "expr": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:13]",
                  "wtype": "uint64",
                  "name": "a"
                }
              },
              "trueExpr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:12-3:13]",
                "wtype": "uint64",
                "name": "a"
              },
              "falseExpr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:17-3:18]",
                "wtype": "uint64",
                "name": "b"
              }
            },
            "id": "se0"
          },
          "falseExpr": {
            "_type": "VarExpression",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[3:22-3:23]",
            "wtype": "uint64",
            "name": "e"
          }
        }
      },
      {
        "_type": "ExpressionStatement",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:2-4:31]",
        "expr": {
          "_type": "IntrinsicCall",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:2-4:31]",
          "wtype": "void",
          "opCode": "assert",
          "immediates": [],
          "stackArgs": [
            {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:2-4:31]",
              "wtype": "bool",
              "expr": {
                "_type": "ConditionalExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:20]",
                "wtype": "uint64",
                "condition": {
                  "_type": "ReinterpretCast",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:15]",
                  "wtype": "bool",
                  "expr": {
                    "_type": "SingleEvaluation",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:15]",
                    "wtype": "uint64",
                    "source": {
                      "_type": "ConditionalExpression",
                      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:15]",
                      "wtype": "uint64",
                      "condition": {
                        "_type": "ReinterpretCast",
                        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:10]",
                        "wtype": "bool",
                        "expr": {
                          "_type": "VarExpression",
                          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:10]",
                          "wtype": "uint64",
                          "name": "a"
                        }
                      },
                      "trueExpr": {
                        "_type": "VarExpression",
                        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:14-4:15]",
                        "wtype": "uint64",
                        "name": "b"
                      },
                      "falseExpr": {
                        "_type": "VarExpression",
                        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:10]",
                        "wtype": "uint64",
                        "name": "a"
                      }
                    },
                    "id": "se1"
                  }
                },
                "trueExpr": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:19-4:20]",
                  "wtype": "uint64",
                  "name": "e"
                },
                "falseExpr": {
                  "_type": "SingleEvaluation",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:15]",
                  "wtype": "uint64",
                  "source": {
                    "_type": "ConditionalExpression",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:15]",
                    "wtype": "uint64",
                    "condition": {
                      "_type": "ReinterpretCast",
                      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:10]",
                      "wtype": "bool",
                      "expr": {
                        "_type": "VarExpression",
                        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:10]",
                        "wtype": "uint64",
                        "name": "a"
                      }
                    },
                    "trueExpr": {
                      "_type": "VarExpression",
                      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:14-4:15]",
                      "wtype": "uint64",
                      "name": "b"
                    },
                    "falseExpr": {
                      "_type": "VarExpression",
                      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[4:9-4:10]",
                      "wtype": "uint64",
                      "name": "a"
                    }
                  },
                  "id": "se1"
                }
              }
            }
          ],
          "comment": "a or b"
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:8-5:18]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:8-5:9]",
          "wtype": "uint64",
          "name": "y"
        },
        "value": {
          "_type": "ConditionalExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:12-5:18]",
          "wtype": "uint64",
          "condition": {
            "_type": "ReinterpretCast",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:12-5:13]",
            "wtype": "bool",
            "expr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:12-5:13]",
              "wtype": "uint64",
              "name": "a"
            }
          },
          "trueExpr": {
            "_type": "VarExpression",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:17-5:18]",
            "wtype": "uint64",
            "name": "b"
          },
          "falseExpr": {
            "_type": "VarExpression",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[5:12-5:13]",
            "wtype": "uint64",
            "name": "a"
          }
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:8-6:43]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:8-6:9]",
          "wtype": "uint64",
          "name": "z"
        },
        "value": {
          "_type": "ConditionalExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:12-6:43]",
          "wtype": "uint64",
          "condition": {
            "_type": "BooleanBinaryOperation",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:12-6:25]",
            "wtype": "bool",
            "left": {
              "_type": "BooleanBinaryOperation",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:13-6:19]",
              "wtype": "bool",
              "left": {
                "_type": "ReinterpretCast",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:13-6:19]",
                "wtype": "bool",
                "expr": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:13-6:14]",
                  "wtype": "uint64",
                  "name": "a"
                }
              },
              "op": "and",
              "right": {
                "_type": "ReinterpretCast",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:13-6:19]",
                "wtype": "bool",
                "expr": {
                  "_type": "IntrinsicCall",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:13-6:19]",
                  "wtype": "uint64",
                  "opCode": "len",
                  "immediates": [],
                  "stackArgs": [
                    {
                      "_type": "VarExpression",
                      "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:18-6:19]",
                      "wtype": "bytes",
                      "name": "d"
                    }
                  ]
                }
              }
            },
            "op": "or",
            "right": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:12-6:25]",
              "wtype": "bool",
              "expr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:24-6:25]",
                "wtype": "uint64",
                "name": "y"
              }
            }
          },
          "trueExpr": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:28-6:34]",
            "wtype": "uint64",
            "condition": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:28-6:29]",
              "wtype": "bool",
              "expr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:28-6:29]",
                "wtype": "uint64",
                "name": "x"
              }
            },
            "trueExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:28-6:29]",
              "wtype": "uint64",
              "name": "x"
            },
            "falseExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:33-6:34]",
              "wtype": "uint64",
              "name": "y"
            }
          },
          "falseExpr": {
            "_type": "ConditionalExpression",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:37-6:43]",
            "wtype": "uint64",
            "condition": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:37-6:38]",
              "wtype": "bool",
              "expr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:37-6:38]",
                "wtype": "uint64",
                "name": "x"
              }
            },
            "trueExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:42-6:43]",
              "wtype": "uint64",
              "name": "y"
            },
            "falseExpr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[6:37-6:38]",
              "wtype": "uint64",
              "name": "x"
            }
          }
        }
      },
      {
        "_type": "IfElse",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:2-9:3]",
        "condition": {
          "_type": "BooleanBinaryOperation",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:6-7:19]",
          "wtype": "bool",
          "left": {
            "_type": "ReinterpretCast",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:6-7:19]",
            "wtype": "bool",
            "expr": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:6-7:7]",
              "wtype": "uint64",
              "name": "a"
            }
          },
          "op": "or",
          "right": {
            "_type": "BooleanBinaryOperation",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:12-7:18]",
            "wtype": "bool",
            "left": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:12-7:18]",
              "wtype": "bool",
              "expr": {
                "_type": "IntrinsicCall",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:12-7:18]",
                "wtype": "uint64",
                "opCode": "len",
                "immediates": [],
                "stackArgs": [
                  {
                    "_type": "VarExpression",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:12-7:13]",
                    "wtype": "string",
                    "name": "c"
                  }
                ]
              }
            },
            "op": "and",
            "right": {
              "_type": "ReinterpretCast",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:12-7:18]",
              "wtype": "bool",
              "expr": {
                "_type": "IntrinsicCall",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:12-7:18]",
                "wtype": "uint64",
                "opCode": "len",
                "immediates": [],
                "stackArgs": [
                  {
                    "_type": "VarExpression",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:17-7:18]",
                    "wtype": "bytes",
                    "name": "d"
                  }
                ]
              }
            }
          }
        },
        "ifBranch": {
          "_type": "Block",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:21-9:3]",
          "body": [
            {
              "_type": "Block",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[7:21-9:3]",
              "body": [
                {
                  "_type": "ReturnStatement",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[8:4-8:15]",
                  "value": {
                    "_type": "BoolConstant",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[8:11-8:15]",
                    "wtype": "bool",
                    "value": true
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "_type": "AssignmentStatement",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[11:6-11:19]",
        "target": {
          "_type": "VarExpression",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[11:6-11:7]",
          "wtype": "uint64",
          "name": "f"
        },
        "value": {
          "_type": "IntegerConstant",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[11:18-11:19]",
          "wtype": "uint64",
          "value": "0n"
        }
      },
      {
        "_type": "IfElse",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:2-14:3]",
        "condition": {
          "_type": "ReinterpretCast",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:6-12:18]",
          "wtype": "bool",
          "expr": {
            "_type": "AssignmentExpression",
            "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:7-12:17]",
            "wtype": "uint64",
            "target": {
              "_type": "VarExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:7-12:8]",
              "wtype": "uint64",
              "name": "f"
            },
            "value": {
              "_type": "ConditionalExpression",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:11-12:17]",
              "wtype": "uint64",
              "condition": {
                "_type": "ReinterpretCast",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:11-12:12]",
                "wtype": "bool",
                "expr": {
                  "_type": "VarExpression",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:11-12:12]",
                  "wtype": "uint64",
                  "name": "a"
                }
              },
              "trueExpr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:11-12:12]",
                "wtype": "uint64",
                "name": "a"
              },
              "falseExpr": {
                "_type": "VarExpression",
                "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:16-12:17]",
                "wtype": "uint64",
                "name": "b"
              }
            }
          }
        },
        "ifBranch": {
          "_type": "Block",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:20-14:3]",
          "body": [
            {
              "_type": "Block",
              "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[12:20-14:3]",
              "body": [
                {
                  "_type": "ReturnStatement",
                  "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[13:4-13:15]",
                  "value": {
                    "_type": "BoolConstant",
                    "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[13:11-13:15]",
                    "wtype": "bool",
                    "value": true
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "_type": "ReturnStatement",
        "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[15:2-15:14]",
        "value": {
          "_type": "BoolConstant",
          "sourceLocation": "tests/approvals/boolean-expressions.algo.ts[15:9-15:14]",
          "wtype": "bool",
          "value": false
        }
      }
    ]
  }
}
]